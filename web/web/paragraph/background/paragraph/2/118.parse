(ROOT
  (NP
    (NP (NNP Unit) (CD 12))
    (NP (DT The) (NNP Journey) (NNP Ahead))
    (. .)))

root(ROOT-0, Unit-1)
nummod(Unit-1, 12-2)
det(Ahead-5, The-3)
compound(Ahead-5, Journey-4)
dep(Unit-1, Ahead-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJ twenty-five))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBD was)
            (VP (VBN arrested)
              (PP (IN for)
                (S
                  (VP (VBG stealing)
                    (NP
                      (NP (DT a) (NN loaf))
                      (PP (IN of)
                        (NP (NN bread))))
                    (S
                      (VP (TO to)
                        (VP (VB feed)
                          (NP (PRP$ my) (VBG starving) (NN family)))))))))))))
    (. .)))

nsubj(twenty-five-3, I-1)
cop(twenty-five-3, was-2)
root(ROOT-0, twenty-five-3)
advmod(arrested-7, when-4)
nsubjpass(arrested-7, I-5)
auxpass(arrested-7, was-6)
advcl(twenty-five-3, arrested-7)
mark(stealing-9, for-8)
advcl(arrested-7, stealing-9)
det(loaf-11, a-10)
dobj(stealing-9, loaf-11)
case(bread-13, of-12)
nmod:of(loaf-11, bread-13)
mark(feed-15, to-14)
advcl(stealing-9, feed-15)
nmod:poss(family-18, my-16)
amod(family-18, starving-17)
dobj(feed-15, family-18)

(ROOT
  (S
    (PP (IN For)
      (NP (DT that) (JJ petty) (NN crime)))
    (, ,)
    (NP (PRP I))
    (VP (VBD spent)
      (NP (NN nineteen) (NNS years))
      (PP (IN in)
        (NP (NN jail))))
    (. .)))

case(crime-4, For-1)
det(crime-4, that-2)
amod(crime-4, petty-3)
nmod:for(spent-7, crime-4)
nsubj(spent-7, I-6)
root(ROOT-0, spent-7)
compound(years-9, nineteen-8)
nmod:tmod(spent-7, years-9)
case(jail-11, in-10)
nmod:in(spent-7, jail-11)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP (VBD was)
          (VP (VBN discharged)
            (PP (IN from)
              (NP (NN prison)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBD was)
      (NP (DT a) (JJ bitter) (NN man)))
    (. .)))

advmod(discharged-4, When-1)
nsubjpass(discharged-4, I-2)
auxpass(discharged-4, was-3)
advcl(man-12, discharged-4)
case(prison-6, from-5)
nmod:from(discharged-4, prison-6)
nsubj(man-12, I-8)
cop(man-12, was-9)
det(man-12, a-10)
amod(man-12, bitter-11)
root(ROOT-0, man-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD walked)
      (PP (IN for)
        (NP (NNS miles)))
      (, ,)
      (S
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB find)
                (ADVP (RB somewhere)
                  (PP (TO to)
                    (NP (NN rest))))))))))
    (. .)))

nsubj(walked-2, I-1)
root(ROOT-0, walked-2)
case(miles-4, for-3)
nmod:for(walked-2, miles-4)
xcomp(walked-2, trying-6)
mark(find-8, to-7)
xcomp(trying-6, find-8)
advmod(find-8, somewhere-9)
case(rest-11, to-10)
nmod:to(somewhere-9, rest-11)

(ROOT
  (S
    (S
      (PP (IN By)
        (NP (DT the) (NN time)))
      (NP (PRP I))
      (VP (VBD reached)
        (NP (NNP Digne))))
    (PRN (, ,)
      (S
        (NP (DT the) (NN sun))
        (VP (VBD had)
          (ADVP (RB already))
          (VP (VBN set))))
      (, ,))
    (CC and)
    (S
      (NP (PRP I))
      (VP
        (VP (VBD was)
          (ADJP (JJ hungry)))
        (CC and)
        (VP (VBD exhausted))))
    (. .)))

case(time-3, By-1)
det(time-3, the-2)
nmod:by(reached-5, time-3)
nsubj(reached-5, I-4)
root(ROOT-0, reached-5)
dobj(reached-5, Digne-6)
det(sun-9, the-8)
nsubj(set-12, sun-9)
aux(set-12, had-10)
advmod(set-12, already-11)
dep(reached-5, set-12)
cc(reached-5, and-14)
nsubj(hungry-17, I-15)
nsubj(exhausted-19, I-15)
cop(hungry-17, was-16)
conj:and(reached-5, hungry-17)
cc(hungry-17, and-18)
conj:and(reached-5, exhausted-19)
conj:and(hungry-17, exhausted-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD headed)
      (PP (IN for)
        (NP (DT an) (NN inn)))
      (, ,)
      (S
        (VP (VBG seeking)
          (NP (NN accommodation))
          (PP (IN for)
            (NP (DT the) (NN night))))))
    (. .)))

nsubj(headed-2, I-1)
root(ROOT-0, headed-2)
case(inn-5, for-3)
det(inn-5, an-4)
nmod:for(headed-2, inn-5)
xcomp(headed-2, seeking-7)
dobj(seeking-7, accommodation-8)
case(night-11, for-9)
det(night-11, the-10)
nmod:for(seeking-7, night-11)

(ROOT
  (S
    (S
      (VP (VBG Looking)
        (NP (PRP me))
        (ADVP (RB up)
          (CC and)
          (RB down))
        (PP (IN with)
          (NP (NN distrust)
            (CC and)
            (NN suspicion)))))
    (, ,)
    (NP
      (NP (DT the) (NN owner))
      (PP (IN of)
        (NP (DT the) (NN inn))))
    (VP (VBD sent)
      (NP (DT a) (NN boy))
      (PP (TO to)
        (NP (DT the) (NN police) (NN station)))
      (S
        (VP (TO to)
          (VP (VB inquire)
            (PP (IN about)
              (NP (PRP me)))))))
    (. .)))

advcl(sent-16, Looking-1)
dobj(Looking-1, me-2)
advmod(Looking-1, up-3)
cc(up-3, and-4)
advmod(Looking-1, down-5)
conj:and(up-3, down-5)
case(distrust-7, with-6)
nmod:with(Looking-1, distrust-7)
cc(distrust-7, and-8)
nmod:with(Looking-1, suspicion-9)
conj:and(distrust-7, suspicion-9)
det(owner-12, the-11)
nsubj(sent-16, owner-12)
case(inn-15, of-13)
det(inn-15, the-14)
nmod:of(owner-12, inn-15)
root(ROOT-0, sent-16)
det(boy-18, a-17)
dobj(sent-16, boy-18)
case(station-22, to-19)
det(station-22, the-20)
compound(station-22, police-21)
nmod:to(sent-16, station-22)
mark(inquire-24, to-23)
advcl(sent-16, inquire-24)
case(me-26, about-25)
nmod:about(inquire-24, me-26)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NN boy))
        (VP (VBD returned))))
    (, ,)
    (NP (PRP he))
    (VP (VBD handed)
      (NP (DT the) (NN owner))
      (NP (DT a) (NN note)))
    (. .)))

advmod(returned-4, When-1)
det(boy-3, the-2)
nsubj(returned-4, boy-3)
advcl(handed-7, returned-4)
nsubj(handed-7, he-6)
root(ROOT-0, handed-7)
det(owner-9, the-8)
iobj(handed-7, owner-9)
det(note-11, a-10)
dobj(handed-7, note-11)

(ROOT
  (S
    (PP (IN From)
      (NP (DT the) (NN note)))
    (, ,)
    (NP (DT the) (NN owner))
    (VP (VBD learned)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (PRP$ my) (NN name))
            (VP (VBD was)
              (NP (NNP Jean) (NNP Valjean)))))
        (CC and)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBD was)
              (NP (DT an) (NN ex-convict)))))))
    (. .)))

case(note-3, From-1)
det(note-3, the-2)
nmod:from(learned-7, note-3)
det(owner-6, the-5)
nsubj(learned-7, owner-6)
root(ROOT-0, learned-7)
mark(Valjean-13, that-8)
nmod:poss(name-10, my-9)
nsubj(Valjean-13, name-10)
cop(Valjean-13, was-11)
compound(Valjean-13, Jean-12)
ccomp(learned-7, Valjean-13)
cc(Valjean-13, and-14)
mark(ex-convict-19, that-15)
nsubj(ex-convict-19, I-16)
cop(ex-convict-19, was-17)
det(ex-convict-19, an-18)
ccomp(learned-7, ex-convict-19)
conj:and(Valjean-13, ex-convict-19)

(ROOT
  (S
    (PP (IN As)
      (NP (DT a) (NN result)))
    (, ,)
    (NP (PRP he))
    (VP (VBD refused)
      (S
        (VP (TO to)
          (VP (VB let)
            (NP (PRP me))
            (PP (IN in))))))
    (. .)))

case(result-3, As-1)
det(result-3, a-2)
nmod:as(refused-6, result-3)
nsubj(refused-6, he-5)
nsubj(let-8, he-5)
root(ROOT-0, refused-6)
mark(let-8, to-7)
xcomp(refused-6, let-8)
dobj(let-8, me-9)
nmod(let-8, in-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD left)
      (NP (DT the) (NN inn))
      (PP (IN in)
        (NP (NN humiliation))))
    (. .)))

nsubj(left-2, I-1)
root(ROOT-0, left-2)
det(inn-4, the-3)
dobj(left-2, inn-4)
case(humiliation-6, in-5)
nmod:in(left-2, humiliation-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD could)
      (VP (VB feel)
        (SBAR
          (SBAR (IN that)
            (S
              (NP
                (NP (NNS people))
                (PP (IN behind)
                  (NP (PRP me))))
              (VP (VBD were)
                (VP (VBG exchanging)
                  (NP
                    (NP (NNS looks))
                    (PP (IN of)
                      (NP (NN fear))))))))
          (CC and)
          (SBAR (IN that)
            (S
              (NP (PRP$ my) (NN arrival))
              (VP (MD would)
                (ADVP (RB soon))
                (VP (VB become)
                  (NP
                    (NP (DT the) (NN talk))
                    (PP (IN of)
                      (NP (DT the) (NN town)))))))))))
    (. .)))

nsubj(feel-3, I-1)
aux(feel-3, could-2)
root(ROOT-0, feel-3)
mark(exchanging-9, that-4)
nsubj(exchanging-9, people-5)
case(me-7, behind-6)
nmod:behind(people-5, me-7)
aux(exchanging-9, were-8)
ccomp(feel-3, exchanging-9)
dobj(exchanging-9, looks-10)
case(fear-12, of-11)
nmod:of(looks-10, fear-12)
cc(exchanging-9, and-13)
mark(become-19, that-14)
nmod:poss(arrival-16, my-15)
nsubj(become-19, arrival-16)
aux(become-19, would-17)
advmod(become-19, soon-18)
ccomp(feel-3, become-19)
conj:and(exchanging-9, become-19)
det(talk-21, the-20)
xcomp(become-19, talk-21)
case(town-24, of-22)
det(town-24, the-23)
nmod:of(talk-21, town-24)

(ROOT
  (S
    (SBAR (RB Just) (IN as)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (VP (VBN expected)))))
    (, ,)
    (NP
      (NP (NN everyone))
      (PP (IN in)
        (NP (NNP Digne))))
    (VP (VBD knew)
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBD was)
            (VP (VBN released)
              (PP (IN on)
                (NP (NN parole))))))))
    (. .)))

advmod(expected-5, Just-1)
mark(expected-5, as-2)
nsubj(expected-5, I-3)
aux(expected-5, had-4)
advcl(knew-10, expected-5)
nsubj(knew-10, everyone-7)
case(Digne-9, in-8)
nmod:in(everyone-7, Digne-9)
root(ROOT-0, knew-10)
mark(released-14, that-11)
nsubjpass(released-14, I-12)
auxpass(released-14, was-13)
ccomp(knew-10, released-14)
case(parole-16, on-15)
nmod:on(released-14, parole-16)

(ROOT
  (S
    (ADVP (RB Consequently))
    (, ,)
    (S
      (NP (DT no) (NN one))
      (VP (VBD was)
        (ADJP (JJ willing)
          (S
            (VP (TO to)
              (VP (VB reach)
                (PRT (RP out))
                (PP (TO to)
                  (NP (PRP me)))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (RB even) (DT a) (NN glass))
        (PP (IN of)
          (NP (NN water))))
      (VP (VBD was)
        (ADJP (RB too) (JJ much))
        (SBAR (IN for)
          (S
            (NP (PRP me))
            (VP (TO to)
              (VP (VB ask)
                (PP (IN for))))))))
    (. .)))

advmod(willing-6, Consequently-1)
neg(one-4, no-3)
nsubj(willing-6, one-4)
nsubj(reach-8, one-4)
cop(willing-6, was-5)
root(ROOT-0, willing-6)
mark(reach-8, to-7)
xcomp(willing-6, reach-8)
compound:prt(reach-8, out-9)
case(me-11, to-10)
nmod:to(reach-8, me-11)
cc(willing-6, and-13)
advmod(glass-16, even-14)
det(glass-16, a-15)
nsubj(much-21, glass-16)
case(water-18, of-17)
nmod:of(glass-16, water-18)
cop(much-21, was-19)
advmod(much-21, too-20)
conj:and(willing-6, much-21)
mark(ask-25, for-22)
nsubj(ask-25, me-23)
mark(ask-25, to-24)
advcl(much-21, ask-25)
nmod(ask-25, for-26)

(ROOT
  (S
    (S
      (VP (VBG Cold)
        (CC and)
        (VBG starving)))
    (, ,)
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBN left)
        (S
          (VP (VBG shivering)
            (PP (IN in)
              (NP (DT the) (NN dark)))))))
    (. .)))

advcl(left-7, Cold-1)
cc(Cold-1, and-2)
conj:and(Cold-1, starving-3)
advcl(left-7, starving-3)
nsubjpass(left-7, I-5)
auxpass(left-7, was-6)
root(ROOT-0, left-7)
xcomp(left-7, shivering-8)
case(dark-11, in-9)
det(dark-11, the-10)
nmod:in(shivering-8, dark-11)

(ROOT
  (S
    (ADVP (RB Fortunately))
    (, ,)
    (NP
      (NP (DT the) (NN bishop))
      (PP (IN of)
        (NP (NNP Digne))))
    (VP
      (VP (VBD took)
        (NP (NN pity))
        (PP (IN on)
          (NP (PRP me))))
      (CC and)
      (VP (VBD welcomed)
        (NP (PRP me))
        (PP (IN with)
          (NP (JJ open) (NNS arms)))))
    (. .)))

advmod(took-7, Fortunately-1)
det(bishop-4, the-3)
nsubj(took-7, bishop-4)
nsubj(welcomed-12, bishop-4)
case(Digne-6, of-5)
nmod:of(bishop-4, Digne-6)
root(ROOT-0, took-7)
dobj(took-7, pity-8)
case(me-10, on-9)
nmod:on(took-7, me-10)
cc(took-7, and-11)
conj:and(took-7, welcomed-12)
dobj(welcomed-12, me-13)
case(arms-16, with-14)
amod(arms-16, open-15)
nmod:with(welcomed-12, arms-16)

(ROOT
  (S
    (SBAR (RB Even) (IN after)
      (S
        (NP (PRP he))
        (VP (VBD knew)
          (NP (PRP$ my) (JJ true) (NN identity)))))
    (, ,)
    (NP (DT this) (NN man) (NN didnt))
    (VP (VBP drive)
      (S
        (NP (PRP me))
        (ADJP (IN out)
          (PP (IN of)
            (NP (PRP$ his) (NN home))))
        (SBAR (IN as)
          (S
            (NP (JJS most) (NNS others))
            (VP (VBD had)
              (VP (VBN done)))))))
    (. .)))

advmod(knew-4, Even-1)
mark(knew-4, after-2)
nsubj(knew-4, he-3)
advcl(drive-12, knew-4)
nmod:poss(identity-7, my-5)
amod(identity-7, true-6)
dobj(knew-4, identity-7)
det(didnt-11, this-9)
compound(didnt-11, man-10)
nsubj(drive-12, didnt-11)
root(ROOT-0, drive-12)
nsubj(done-22, me-13)
case(home-17, out-14)
mwe(out-14, of-15)
nmod:poss(home-17, his-16)
nmod:out_of(done-22, home-17)
mark(done-22, as-18)
amod(others-20, most-19)
nsubj(done-22, others-20)
aux(done-22, had-21)
xcomp(drive-12, done-22)

(ROOT
  (S
    (ADVP (RB Instead))
    (, ,)
    (NP (PRP he))
    (VP (VBD invited)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB stay)
            (CC and)
            (VB dine)
            (PP (IN with)
              (NP (PRP him)))))))
    (. .)))

advmod(invited-4, Instead-1)
nsubj(invited-4, he-3)
root(ROOT-0, invited-4)
dobj(invited-4, me-5)
nsubj(stay-7, me-5)
nsubj(dine-9, me-5)
mark(stay-7, to-6)
xcomp(invited-4, stay-7)
cc(stay-7, and-8)
xcomp(invited-4, dine-9)
conj:and(stay-7, dine-9)
case(him-11, with-10)
nmod:with(stay-7, him-11)

(ROOT
  (S
    (NP (DT That) (NN night))
    (, ,)
    (SBAR (IN though)
      (S
        (NP (PRP I))
        (VP (VBD was)
          (ADJP (JJ lucky) (RB enough)
            (S
              (VP (TO to)
                (VP (VB sleep)
                  (PP (IN in)
                    (NP
                      (NP (NN bed))
                      (PP (IN for)
                        (NP
                          (NP (DT the) (JJ first) (NN time))
                          (PP (IN in)
                            (NP (NN nineteen) (NNS years))))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP couldnt)
      (S
        (NP (NN fall))
        (ADJP (RB asleep))))
    (. .)))

det(night-2, That-1)
nmod:tmod(couldnt-22, night-2)
mark(lucky-7, though-4)
nsubj(lucky-7, I-5)
nsubj(sleep-10, I-5)
cop(lucky-7, was-6)
advcl(couldnt-22, lucky-7)
advmod(lucky-7, enough-8)
mark(sleep-10, to-9)
xcomp(lucky-7, sleep-10)
case(bed-12, in-11)
nmod:in(sleep-10, bed-12)
case(time-16, for-13)
det(time-16, the-14)
amod(time-16, first-15)
nmod:for(bed-12, time-16)
case(years-19, in-17)
compound(years-19, nineteen-18)
nmod:in(time-16, years-19)
nsubj(couldnt-22, I-21)
root(ROOT-0, couldnt-22)
nsubj(asleep-24, fall-23)
xcomp(couldnt-22, asleep-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD kept)
      (S
        (VP (VBG thinking)
          (PP (IN about)
            (NP
              (NP (DT the) (JJ precious) (NN silverware))
              (PP (IN on)
                (NP (DT the) (JJ bishops) (NN dining) (NN table))))))))
    (. .)))

nsubj(kept-2, I-1)
root(ROOT-0, kept-2)
xcomp(kept-2, thinking-3)
case(silverware-7, about-4)
det(silverware-7, the-5)
amod(silverware-7, precious-6)
nmod:about(thinking-3, silverware-7)
case(table-12, on-8)
det(table-12, the-9)
amod(table-12, bishops-10)
compound(table-12, dining-11)
nmod:on(silverware-7, table-12)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD should)
        (VP (VB have)
          (VP (VBD thanked)
            (NP (PRP him))
            (PP (IN for)
              (S
                (VP (VBG offering)
                  (NP (PRP me))
                  (NP (NN food)
                    (CC and)
                    (NN shelter)))))))))
    (, ,)
    (CC yet)
    (S
      (NP (PRP I))
      (VP (VBD found)
        (S
          (NP (PRP myself))
          (ADJP (RB deeply) (JJ disturbed)
            (PP (IN by)
              (NP
                (NP (DT the) (NN thought))
                (PP (IN of)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (RB unfairly) (NN society))
                      (VP (VBD had)
                        (VP (VBN treated)
                          (NP (PRP me))
                          (PP (IN over)
                            (NP (DT the) (JJ past) (NNS years))))))))))))))
    (. .)))

nsubj(thanked-4, I-1)
aux(thanked-4, should-2)
aux(thanked-4, have-3)
root(ROOT-0, thanked-4)
dobj(thanked-4, him-5)
mark(offering-7, for-6)
advcl(thanked-4, offering-7)
iobj(offering-7, me-8)
dobj(offering-7, food-9)
cc(food-9, and-10)
dobj(offering-7, shelter-11)
conj:and(food-9, shelter-11)
cc(thanked-4, yet-13)
nsubj(found-15, I-14)
conj:yet(thanked-4, found-15)
nsubj(disturbed-18, myself-16)
advmod(disturbed-18, deeply-17)
xcomp(found-15, disturbed-18)
case(thought-21, by-19)
det(thought-21, the-20)
nmod:by(disturbed-18, thought-21)
mark(treated-27, of-22)
advmod(treated-27, how-23)
advmod(society-25, unfairly-24)
nsubj(treated-27, society-25)
aux(treated-27, had-26)
acl(thought-21, treated-27)
dobj(treated-27, me-28)
case(years-32, over-29)
det(years-32, the-30)
amod(years-32, past-31)
nmod:over(treated-27, years-32)

(ROOT
  (S
    (PP (IN After)
      (NP (DT a) (JJ slight) (NN hesitation)))
    (, ,)
    (NP (PRP I))
    (VP
      (VP (VBD got)
        (PRT (RP up)))
      (, ,)
      (VP (VBD stole)
        (NP (DT the) (NN silverware)))
      (, ,)
      (CC and)
      (VP (VBD slipped)
        (PRT (RP away))))
    (. .)))

case(hesitation-4, After-1)
det(hesitation-4, a-2)
amod(hesitation-4, slight-3)
nmod:after(got-7, hesitation-4)
nsubj(got-7, I-6)
nsubj(stole-10, I-6)
nsubj(slipped-15, I-6)
root(ROOT-0, got-7)
compound:prt(got-7, up-8)
conj:and(got-7, stole-10)
det(silverware-12, the-11)
dobj(stole-10, silverware-12)
cc(got-7, and-14)
conj:and(got-7, slipped-15)
compound:prt(slipped-15, away-16)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP I))
    (VP (VBP didnt)
      (S
        (VP (VB get)
          (ADVP (RB far)))))
    (. .)))

advmod(didnt-4, However-1)
nsubj(didnt-4, I-3)
root(ROOT-0, didnt-4)
ccomp(didnt-4, get-5)
advmod(get-5, far-6)

(ROOT
  (S
    (S
      (PP (IN By)
        (NP (DT the) (NN time)))
      (NP (PRP it))
      (VP (VBD was)
        (NP (NN dawn))))
    (, ,)
    (NP (DT the) (NN police))
    (VP (VBD had)
      (VP
        (VP (VBN caught)
          (NP (PRP me)))
        (CC and)
        (VP (VBN taken)
          (NP (PRP me))
          (PRT (RP back))
          (PP (TO to)
            (NP (DT the) (NN bishop))))))
    (. .)))

case(time-3, By-1)
det(time-3, the-2)
nmod:by(dawn-6, time-3)
nsubj(dawn-6, it-4)
cop(dawn-6, was-5)
ccomp(caught-11, dawn-6)
det(police-9, the-8)
nsubj(caught-11, police-9)
nsubj(taken-14, police-9)
aux(caught-11, had-10)
root(ROOT-0, caught-11)
dobj(caught-11, me-12)
cc(caught-11, and-13)
conj:and(caught-11, taken-14)
dobj(taken-14, me-15)
compound:prt(taken-14, back-16)
case(bishop-19, to-17)
det(bishop-19, the-18)
nmod:to(taken-14, bishop-19)

(ROOT
  (S
    (VP (VB Im)
      (ADJP (RB so) (JJ delighted)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (PRP you))
              (ADVP (RB again)))))))
    (. !)))

root(ROOT-0, Im-1)
advmod(delighted-3, so-2)
xcomp(Im-1, delighted-3)
mark(see-5, to-4)
xcomp(delighted-3, see-5)
dobj(see-5, you-6)
advmod(see-5, again-7)

(ROOT
  (S
    (NP (DT the) (NN bishop))
    (VP (VBD said)
      (PP (TO to)
        (NP (PRP me)))
      (SBAR (IN before)
        (S
          (NP (PRP I))
          (VP (MD could)
            (VP (VB speak))))))
    (. .)))

det(bishop-2, the-1)
nsubj(said-3, bishop-2)
root(ROOT-0, said-3)
case(me-5, to-4)
nmod:to(said-3, me-5)
mark(speak-9, before-6)
nsubj(speak-9, I-7)
aux(speak-9, could-8)
advcl(said-3, speak-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD forgot)
      (S
        (VP (TO to)
          (VP (VB take)
            (NP (DT the) (NNS candlesticks))))))
    (. .)))

nsubj(forgot-2, You-1)
nsubj(take-4, You-1)
root(ROOT-0, forgot-2)
mark(take-4, to-3)
xcomp(forgot-2, take-4)
det(candlesticks-6, the-5)
dobj(take-4, candlesticks-6)

(ROOT
  (S
    (PP (IN With)
      (S
        (NP (PRP$ my) (NNS eyes))
        (ADVP (RB nearly))
        (VP (VBG popping)
          (PRT (RP out))
          (PP (IN of)
            (NP (PRP$ my) (NN head))))))
    (, ,)
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBN stunned)
        (PP (IN by)
          (NP
            (NP (PRP$ his) (JJ wordsXthe) (NN bishop))
            (SBAR
              (S
                (VP
                  (VP (VBD had) (RB not)
                    (ADVP (RB only))
                    (VP (VBN forgiven)
                      (NP (PRP me))
                      (PP (IN for)
                        (NP (PRP$ my) (NN crime)))))
                  (CC but)
                  (VP
                    (ADVP (RB also))
                    (VBD wanted)
                    (S
                      (NP (PRP me))
                      (VP (TO to)
                        (VP (VB have)
                          (NP
                            (NP (PRP$ his) (JJ only) (NN possession))
                            (PP (IN of)
                              (NP (NN value)))))))))))))))
    (. .)))

mark(popping-5, With-1)
nmod:poss(eyes-3, my-2)
nsubj(popping-5, eyes-3)
advmod(popping-5, nearly-4)
advcl(stunned-13, popping-5)
compound:prt(popping-5, out-6)
case(head-9, of-7)
nmod:poss(head-9, my-8)
nmod:of(popping-5, head-9)
nsubjpass(stunned-13, I-11)
auxpass(stunned-13, was-12)
root(ROOT-0, stunned-13)
case(bishop-17, by-14)
nmod:poss(bishop-17, his-15)
amod(bishop-17, wordsXthe-16)
nmod:by(stunned-13, bishop-17)
aux(forgiven-21, had-18)
neg(forgiven-21, not-19)
advmod(forgiven-21, only-20)
acl:relcl(bishop-17, forgiven-21)
dobj(forgiven-21, me-22)
case(crime-25, for-23)
nmod:poss(crime-25, my-24)
nmod:for(forgiven-21, crime-25)
cc(forgiven-21, but-26)
advmod(wanted-28, also-27)
acl:relcl(bishop-17, wanted-28)
conj:and(forgiven-21, wanted-28)
dobj(wanted-28, me-29)
nsubj(have-31, me-29)
mark(have-31, to-30)
xcomp(wanted-28, have-31)
nmod:poss(possession-34, his-32)
amod(possession-34, only-33)
dobj(have-31, possession-34)
case(value-36, of-35)
nmod:of(possession-34, value-36)

(ROOT
  (S
    (S
      (SBAR (IN After)
        (S
          (NP (DT the) (NN police))
          (VP (VBD left))))
      (, ,)
      (NP (DT the) (NN bishop))
      (VP (VBD told)
        (NP (PRP me))))
    (, ,)
    (NP (NN Everyone))
    (VP (VBZ deserves)
      (NP (DT a) (JJ second) (NN chance)))
    (. .)))

mark(left-4, After-1)
det(police-3, the-2)
nsubj(left-4, police-3)
advcl(told-8, left-4)
det(bishop-7, the-6)
nsubj(told-8, bishop-7)
ccomp(deserves-12, told-8)
dobj(told-8, me-9)
nsubj(deserves-12, Everyone-11)
root(ROOT-0, deserves-12)
det(chance-15, a-13)
amod(chance-15, second-14)
dobj(deserves-12, chance-15)

(ROOT
  (S
    (VP (VB Promise)
      (NP (PRP me))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP (VB use)
              (NP (DT this) (NN silver)
                (S
                  (VP (TO to)
                    (VP (VB become)
                      (NP (DT an) (JJ honest) (NN man)))))))))))
    (. .)))

root(ROOT-0, Promise-1)
dobj(Promise-1, me-2)
mark(use-6, that-3)
nsubj(use-6, you-4)
aux(use-6, will-5)
ccomp(Promise-1, use-6)
det(silver-8, this-7)
dobj(use-6, silver-8)
mark(become-10, to-9)
acl(silver-8, become-10)
det(man-13, an-11)
amod(man-13, honest-12)
xcomp(become-10, man-13)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD continued)
      (S
        (ADVP (RB solemnly))
        (, ,)
        (NP (NNP Jean) (NNP Valjean))
        (, ,)
        (NP (PRP$ my) (NN brother))
        (, ,)
        (NP (PRP you))
        (ADVP (RB no) (RB longer))
        (VP (VBP belong)
          (PP
            (PP (TO to)
              (NP (NN evil)))
            (, ,)
            (CC but)
            (PP (TO to)
              (ADJP (JJ good)))))))
    (. .)))

nsubj(continued-2, He-1)
root(ROOT-0, continued-2)
advmod(belong-14, solemnly-3)
compound(Valjean-6, Jean-5)
nsubj(belong-14, Valjean-6)
nsubj(belong-14', Valjean-6)
nmod:poss(brother-9, my-8)
nsubj(belong-14, brother-9)
nsubj(belong-14, you-11)
neg(longer-13, no-12)
advmod(belong-14, longer-13)
ccomp(continued-2, belong-14)
ccomp(continued-2, belong-14')
conj:but(belong-14, belong-14')
case(evil-16, to-15)
nmod:to(belong-14, evil-16)
cc(belong-14, but-18)
case(good-20, to-19)
nmod:to(belong-14', good-20)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (NP (PRP$ your) (NN soul))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP am)
              (VP (VBG buying)
                (PP (IN for)
                  (NP (PRP you)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP give)
        (NP (PRP it))
        (PP (TO to)
          (NP (NNP God)))))
    (. !)))

nsubj(soul-4, It-1)
cop(soul-4, is-2)
nmod:poss(soul-4, your-3)
root(ROOT-0, soul-4)
mark(buying-8, that-5)
nsubj(buying-8, I-6)
aux(buying-8, am-7)
ccomp(soul-4, buying-8)
case(you-10, for-9)
nmod:for(buying-8, you-10)
cc(soul-4, and-12)
nsubj(give-14, I-13)
conj:and(soul-4, give-14)
dobj(give-14, it-15)
case(God-17, to-16)
nmod:to(give-14, God-17)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBD left)
        (NP (DT the) (JJ bishops) (NN house)))
      (CC and)
      (VP (VBD roamed)
        (NP (DT the) (NN countryside))))
    (. .)))

nsubj(left-2, I-1)
nsubj(roamed-7, I-1)
root(ROOT-0, left-2)
det(house-5, the-3)
amod(house-5, bishops-4)
dobj(left-2, house-5)
cc(left-2, and-6)
conj:and(left-2, roamed-7)
det(countryside-9, the-8)
dobj(roamed-7, countryside-9)

(ROOT
  (S
    (NP (PRP$ My) (NNS thoughts))
    (VP (VBD were)
      (PP
        (PP (IN on)
          (NP
            (NP (PRP$ my) (JJ dreadful) (NNS days))
            (PP (IN in)
              (NP (NN prison)))))
        (CC and)
        (PP (IN on)
          (NP (PRP$ my) (JJ wasted) (NN life)))))
    (. .)))

nmod:poss(thoughts-2, My-1)
nsubj(days-7, thoughts-2)
cop(days-7, were-3)
case(days-7, on-4)
nmod:poss(days-7, my-5)
amod(days-7, dreadful-6)
root(ROOT-0, days-7)
case(prison-9, in-8)
nmod:in(days-7, prison-9)
cc(days-7, and-10)
case(life-14, on-11)
nmod:poss(life-14, my-12)
amod(life-14, wasted-13)
conj:and(days-7, life-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJ upset)
        (CC and)
        (JJ angry)))
    (. .)))

nsubj(upset-3, I-1)
nsubj(angry-5, I-1)
cop(upset-3, was-2)
root(ROOT-0, upset-3)
cc(upset-3, and-4)
conj:and(upset-3, angry-5)

(ROOT
  (S (CC But)
    (SBAR (IN as)
      (S
        (NP (PRP I))
        (VP (VBD brooded)
          (PP (IN over)
            (NP (PRP$ my) (NN misery))))))
    (, ,)
    (NP (DT the) (JJ bishops) (NNS words))
    (VP (VBD flashed)
      (PP (IN through)
        (NP (PRP$ my) (NN mind))))
    (. .)))

cc(flashed-12, But-1)
mark(brooded-4, as-2)
nsubj(brooded-4, I-3)
advcl(flashed-12, brooded-4)
case(misery-7, over-5)
nmod:poss(misery-7, my-6)
nmod:over(brooded-4, misery-7)
det(words-11, the-9)
amod(words-11, bishops-10)
nsubj(flashed-12, words-11)
root(ROOT-0, flashed-12)
case(mind-15, through-13)
nmod:poss(mind-15, my-14)
nmod:through(flashed-12, mind-15)

(ROOT
  (S
    (ADVP (DT All)
      (PP (IN at)
        (ADVP (RB once))))
    (, ,)
    (NP (PRP$ my) (NN anger)
      (CC and)
      (NN gloom))
    (ADVP (RB somehow))
    (VP (VBN vanished))
    (. .)))

advmod(vanished-10, All-1)
case(once-3, at-2)
advcl:at(All-1, once-3)
nmod:poss(anger-6, my-5)
nsubj(vanished-10, anger-6)
cc(anger-6, and-7)
conj:and(anger-6, gloom-8)
nsubj(vanished-10, gloom-8)
advmod(vanished-10, somehow-9)
root(ROOT-0, vanished-10)

(ROOT
  (S
    (NP (DT The) (NNS bishops) (NN love)
      (CC and)
      (NN forgiveness))
    (VP (VBD had)
      (VP (VBN cast)
        (PRT (RP out))
        (NP (PRP$ my) (NN hatred))
        (PP (IN for)
          (NP (DT the) (NN world)))))
    (. .)))

det(love-3, The-1)
compound(love-3, bishops-2)
nsubj(cast-7, love-3)
cc(love-3, and-4)
conj:and(love-3, forgiveness-5)
nsubj(cast-7, forgiveness-5)
aux(cast-7, had-6)
root(ROOT-0, cast-7)
compound:prt(cast-7, out-8)
nmod:poss(hatred-10, my-9)
dobj(cast-7, hatred-10)
case(world-13, for-11)
det(world-13, the-12)
nmod:for(cast-7, world-13)

(ROOT
  (S
    (PP (IN From)
      (ADVP
        (NP (DT that) (NN moment))
        (IN on)))
    (, ,)
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (RB truly) (JJ free)))
    (. .)))

case(moment-3, From-1)
det(moment-3, that-2)
advcl:on(free-9, moment-3)
case(moment-3, on-4)
nsubj(free-9, I-6)
cop(free-9, was-7)
advmod(free-9, truly-8)
root(ROOT-0, free-9)

(ROOT
  (S
    (NP
      (NP (PRP I))
      (, ,)
      (NP (NNP Jean) (NNP Valjean))
      (, ,))
    (VP
      (VP (VBD became)
        (NP (DT a) (VBN changed) (NN man)))
      (CC and)
      (VP
        (ADVP (RB never))
        (VBD committed)
        (NP (DT another) (NN crime))))
    (. .)))

nsubj(became-6, I-1)
nsubj(committed-12, I-1)
compound(Valjean-4, Jean-3)
appos(I-1, Valjean-4)
root(ROOT-0, became-6)
det(man-9, a-7)
amod(man-9, changed-8)
xcomp(became-6, man-9)
cc(became-6, and-10)
neg(committed-12, never-11)
conj:and(became-6, committed-12)
det(crime-14, another-13)
dobj(committed-12, crime-14)

(ROOT
  (S
    (VP (VBN XAdapted)
      (PP (IN from)
        (NP (NNP Les) (NNPS Mis?rables)))
      (PP (IN by)
        (NP (NNP Victor) (NNP Hugo))))
    (. .)))

root(ROOT-0, XAdapted-1)
case(Mis?rables-4, from-2)
compound(Mis?rables-4, Les-3)
nmod:from(XAdapted-1, Mis?rables-4)
case(Hugo-7, by-5)
compound(Hugo-7, Victor-6)
nmod:by(XAdapted-1, Hugo-7)

