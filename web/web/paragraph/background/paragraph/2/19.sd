(ROOT
  (NP (DT The) (JJ Happy) (NN Whitewasher) (. .)))

det(Whitewasher-3, The-1)
amod(Whitewasher-3, Happy-2)
root(ROOT-0, Whitewasher-3)

(ROOT
  (S
    (S
      (NP (NNP Saturday))
      (NP (NN morning))
      (VP (VBD had)
        (VP (VBN come))))
    (, ,)
    (CC and)
    (S
      (NP (PDT all) (DT the) (NN summer) (NN world))
      (VP (VBD was)
        (ADJP (JJ bright)
          (CC and)
          (JJ fresh))))
    (. .)))

nmod:tmod(come-4, Saturday-1)
nsubj(come-4, morning-2)
aux(come-4, had-3)
root(ROOT-0, come-4)
cc(come-4, and-6)
det:predet(world-10, all-7)
det(world-10, the-8)
compound(world-10, summer-9)
nsubj(bright-12, world-10)
nsubj(fresh-14, world-10)
cop(bright-12, was-11)
conj:and(come-4, bright-12)
cc(bright-12, and-13)
conj:and(come-4, fresh-14)
conj:and(bright-12, fresh-14)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN song))
        (PP (IN in)
          (NP
            (NP (DT every) (NN heart)
              (CC and)
              (NN happiness))
            (PP (IN in)
              (NP (DT every) (NN step)))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(song-4, a-3)
nsubj(was-2, song-4)
case(heart-7, in-5)
det(heart-7, every-6)
nmod:in(song-4, heart-7)
cc(heart-7, and-8)
nmod:in(song-4, happiness-9)
conj:and(heart-7, happiness-9)
case(step-12, in-10)
det(step-12, every-11)
nmod:in(heart-7, step-12)

(ROOT
  (S
    (NP (DT The) (NN locust) (NNS trees))
    (VP (VBD were)
      (PP (IN in)
        (NP
          (NP (NN bloom))
          (CC and)
          (NP
            (NP (PRP$ their) (NN fragrance))
            (VP (VBN filled)
              (NP (DT the) (NN air)))))))
    (. .)))

det(trees-3, The-1)
compound(trees-3, locust-2)
nsubj(bloom-6, trees-3)
cop(bloom-6, were-4)
case(bloom-6, in-5)
root(ROOT-0, bloom-6)
cc(bloom-6, and-7)
nmod:poss(fragrance-9, their-8)
conj:and(bloom-6, fragrance-9)
acl(fragrance-9, filled-10)
det(air-12, the-11)
dobj(filled-10, air-12)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD appeared)
      (PP (IN on)
        (NP (DT the) (NN sidewalk)))
      (PP (IN with)
        (NP
          (NP (DT a) (NN bucket))
          (PP (IN of)
            (NP
              (NP (NN whitewash))
              (CC and)
              (NP (DT a) (NN brush)))))))
    (. .)))

nsubj(appeared-2, Tom-1)
root(ROOT-0, appeared-2)
case(sidewalk-5, on-3)
det(sidewalk-5, the-4)
nmod:on(appeared-2, sidewalk-5)
case(bucket-8, with-6)
det(bucket-8, a-7)
nmod:with(appeared-2, bucket-8)
case(whitewash-10, of-9)
nmod:of(bucket-8, whitewash-10)
cc(whitewash-10, and-11)
det(brush-13, a-12)
nmod:of(bucket-8, brush-13)
conj:and(whitewash-10, brush-13)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD surveyed)
        (NP (DT the) (NN fence))))
    (, ,)
    (CC and)
    (S
      (NP (DT all) (NNS gladness))
      (VP (VBD left)
        (NP (PRP him))))
    (. .)))

nsubj(surveyed-2, He-1)
root(ROOT-0, surveyed-2)
det(fence-4, the-3)
dobj(surveyed-2, fence-4)
cc(surveyed-2, and-6)
det(gladness-8, all-7)
nsubj(left-9, gladness-8)
conj:and(surveyed-2, left-9)
dobj(left-9, him-10)

(ROOT
  (NP
    (NP (JJ Thirty) (NNS yards))
    (PP (IN of)
      (NP
        (NP (NN fence))
        (, ,)
        (ADJP
          (NP (CD nine) (NNS feet))
          (JJ high))))
    (. .)))

amod(yards-2, Thirty-1)
root(ROOT-0, yards-2)
case(fence-4, of-3)
nmod:of(yards-2, fence-4)
nummod(feet-7, nine-6)
nmod:npmod(high-8, feet-7)
amod(fence-4, high-8)

(ROOT
  (S
    (NP
      (NP (NNP Life))
      (PP (TO to)
        (NP (PRP him))))
    (VP
      (VP (VBD seemed)
        (S
          (ADJP (JJ hollow))))
      (, ,)
      (CC and)
      (VP
        (NP (NN existence))
        (PP (CC but)
          (NP (DT a) (NN burden)))))
    (. .)))

nsubj(seemed-4, Life-1)
case(him-3, to-2)
nmod:to(Life-1, him-3)
root(ROOT-0, seemed-4)
xcomp(seemed-4, hollow-5)
cc(seemed-4, and-7)
conj:and(seemed-4, existence-8)
case(burden-11, but-9)
det(burden-11, a-10)
nmod:but(existence-8, burden-11)

(ROOT
  (S
    (S
      (VP (VBG Sighing)))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD dipped)
        (NP (PRP$ his) (NN brush))
        (PP (IN into)
          (NP (DT the) (NN whitewash))))
      (CC and)
      (VP (VBD passed)
        (NP (PRP it))
        (PP (IN along)
          (NP (DT the) (NN top)))))
    (. .)))

advcl(dipped-4, Sighing-1)
nsubj(dipped-4, he-3)
nsubj(passed-11, he-3)
root(ROOT-0, dipped-4)
nmod:poss(brush-6, his-5)
dobj(dipped-4, brush-6)
case(whitewash-9, into-7)
det(whitewash-9, the-8)
nmod:into(dipped-4, whitewash-9)
cc(dipped-4, and-10)
conj:and(dipped-4, passed-11)
dobj(passed-11, it-12)
case(top-15, along-13)
det(top-15, the-14)
nmod:along(passed-11, top-15)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP
      (VP (VBD compared)
        (NP (DT the) (JJ small) (JJ whitewashed) (NN streak))
        (PP (IN with)
          (NP
            (NP (DT the) (JJ far-reaching) (NN continent))
            (PP (IN of)
              (NP (JJ unwhitewashed) (NN fence))))))
      (, ,)
      (CC and)
      (VP (VBD sat)
        (PRT (RP down))
        (S
          (VP (VBN discouraged)))))
    (. .)))

advmod(compared-3, Then-1)
nsubj(compared-3, he-2)
nsubj(sat-17, he-2)
root(ROOT-0, compared-3)
det(streak-7, the-4)
amod(streak-7, small-5)
amod(streak-7, whitewashed-6)
dobj(compared-3, streak-7)
case(continent-11, with-8)
det(continent-11, the-9)
amod(continent-11, far-reaching-10)
nmod:with(compared-3, continent-11)
case(fence-14, of-12)
amod(fence-14, unwhitewashed-13)
nmod:of(continent-11, fence-14)
cc(compared-3, and-16)
conj:and(compared-3, sat-17)
compound:prt(sat-17, down-18)
dep(sat-17, discouraged-19)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB think)
              (PP (IN of)
                (NP
                  (NP (DT the) (NN fun))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (VP (VBN planned)
                          (PP (IN for)
                            (NP (DT this) (NN day))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ his) (NNS sorrows))
      (VP (VBD grew)
        (ADJP (RB even) (JJR greater))))
    (. .)))

nsubj(began-2, He-1)
nsubj(think-4, He-1)
root(ROOT-0, began-2)
mark(think-4, to-3)
xcomp(began-2, think-4)
case(fun-7, of-5)
det(fun-7, the-6)
nmod:of(think-4, fun-7)
nsubj(planned-10, he-8)
aux(planned-10, had-9)
acl:relcl(fun-7, planned-10)
case(day-13, for-11)
det(day-13, this-12)
nmod:for(planned-10, day-13)
cc(began-2, and-15)
nmod:poss(sorrows-17, his-16)
nsubj(grew-18, sorrows-17)
conj:and(began-2, grew-18)
advmod(greater-20, even-19)
xcomp(grew-18, greater-20)

(ROOT
  (S
    (S
      (ADVP (RB Soon))
      (NP (DT the) (JJ free) (NNS boys))
      (VP (MD would)
        (VP (VB come)
          (PRT (RP along))
          (PP (IN on)
            (NP
              (NP (DT all) (NNS sorts))
              (PP (IN of)
                (NP (NNS adventures))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD would)
        (VP (VB make)
          (NP
            (NP (NN fun))
            (PP (IN of)
              (NP (PRP him))))
          (PP (IN for)
            (S
              (VP (VBG having)
                (S
                  (VP (TO to)
                    (VP (VB workXthe)
                      (S
                        (NP
                          (NP (JJ very) (NN thought))
                          (PP (IN of)
                            (NP (PRP it))))
                        (ADJP (JJ burnt))
                        (NP (PRP him))
                        (PP (IN like)
                          (NP (NN fire)))))))))))))
    (. .)))

advmod(come-6, Soon-1)
det(boys-4, the-2)
amod(boys-4, free-3)
nsubj(come-6, boys-4)
aux(come-6, would-5)
root(ROOT-0, come-6)
compound:prt(come-6, along-7)
case(sorts-10, on-8)
det(sorts-10, all-9)
nmod:on(come-6, sorts-10)
case(adventures-12, of-11)
nmod:of(sorts-10, adventures-12)
cc(come-6, and-14)
nsubj(make-17, they-15)
aux(make-17, would-16)
conj:and(come-6, make-17)
dobj(make-17, fun-18)
case(him-20, of-19)
nmod:of(fun-18, him-20)
mark(having-22, for-21)
advcl(make-17, having-22)
mark(workXthe-24, to-23)
xcomp(having-22, workXthe-24)
amod(thought-26, very-25)
nsubj(burnt-29, thought-26)
case(it-28, of-27)
nmod:of(thought-26, it-28)
xcomp(workXthe-24, burnt-29)
dep(burnt-29, him-30)
case(fire-32, like-31)
dep(burnt-29, fire-32)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD got)
        (PRT (RP out))
        (NP (PRP$ his) (JJ worldly) (NN wealth)))
      (CC and)
      (VP (VBD examined)
        (NP
          (NP (NNS itXbits))
          (PP (IN of)
            (NP (NNS toys) (, ,) (NNS marbles) (, ,)
              (CC and)
              (NN trashXenough))))
        (S
          (VP (TO to)
            (VP (VB buy)
              (NP
                (NP (DT an) (NN exchange))
                (PP (IN of)
                  (NP (NN work)))
                (, ,)
                (ADVP
                  (ADVP (RB maybe))
                  (, ,)
                  (CC but)
                  (ADVP (RB not) (RB enough))))
              (S
                (VP (TO to)
                  (VP (VB buy)
                    (NP
                      (NP
                        (QP (PDT half) (DT an) (NN hour)))
                      (PP (IN of)
                        (NP (JJ pure) (NN freedom))))))))))))
    (. .)))

nsubj(got-2, He-1)
nsubj(examined-8, He-1)
root(ROOT-0, got-2)
compound:prt(got-2, out-3)
nmod:poss(wealth-6, his-4)
amod(wealth-6, worldly-5)
dobj(got-2, wealth-6)
cc(got-2, and-7)
conj:and(got-2, examined-8)
dobj(examined-8, itXbits-9)
case(toys-11, of-10)
nmod:of(itXbits-9, toys-11)
nmod:of(itXbits-9, marbles-13)
conj:and(toys-11, marbles-13)
cc(toys-11, and-15)
nmod:of(itXbits-9, trashXenough-16)
conj:and(toys-11, trashXenough-16)
mark(buy-18, to-17)
advcl(examined-8, buy-18)
det(exchange-20, an-19)
dobj(buy-18, exchange-20)
case(work-22, of-21)
nmod:of(exchange-20, work-22)
advmod(but-26, maybe-24)
advmod(exchange-20, but-26)
dep(enough-28, not-27)
advmod(but-26, enough-28)
mark(buy-30, to-29)
advcl(buy-18, buy-30)
advmod(hour-33, half-31)
advmod(hour-33, an-32)
dobj(buy-30, hour-33)
case(freedom-36, of-34)
amod(freedom-36, pure-35)
nmod:of(hour-33, freedom-36)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP (VBD gave)
      (PRT (RP up))
      (NP
        (NP (DT the) (NN idea))
        (PP (IN of)
          (S
            (VP (VBG trying)
              (S
                (VP (TO to)
                  (VP (VB buy)
                    (NP (DT the) (NNS boys))))))))))
    (. .)))

dep(gave-3, So-1)
nsubj(gave-3, he-2)
root(ROOT-0, gave-3)
compound:prt(gave-3, up-4)
det(idea-6, the-5)
dobj(gave-3, idea-6)
mark(trying-8, of-7)
acl(idea-6, trying-8)
mark(buy-10, to-9)
xcomp(trying-8, buy-10)
det(boys-12, the-11)
dobj(buy-10, boys-12)

(ROOT
  (S
    (PP (IN At)
      (NP (DT this)
        (ADJP (JJ dark)
          (CC and)
          (JJ hopeless))
        (NN moment)))
    (NP (DT an) (NN inspiration))
    (VP (VBD flashed)
      (PP (IN into)
        (NP (PRP$ his) (NN mind))))
    (. !)))

case(moment-6, At-1)
det(moment-6, this-2)
amod(moment-6, dark-3)
cc(dark-3, and-4)
conj:and(dark-3, hopeless-5)
amod(moment-6, hopeless-5)
nmod:at(flashed-9, moment-6)
det(inspiration-8, an-7)
nsubj(flashed-9, inspiration-8)
root(ROOT-0, flashed-9)
case(mind-12, into-10)
nmod:poss(mind-12, his-11)
nmod:into(flashed-9, mind-12)

(ROOT
  (NP
    (NP (NN Nothing))
    (QP (JJR less) (IN than)
      (NP (DT a) (JJ magnificent) (NN inspiration)))
    (. !)))

root(ROOT-0, Nothing-1)
advmod(inspiration-6, less-2)
mwe(less-2, than-3)
det(inspiration-6, a-4)
amod(inspiration-6, magnificent-5)
nummod(Nothing-1, inspiration-6)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD took)
        (PRT (RP up))
        (NP (PRP$ his) (NN brush)))
      (CC and)
      (VP (VBD went)
        (S
          (VP (TO to)
            (VP (VB work))))))
    (. .)))

nsubj(took-2, He-1)
nsubj(went-7, He-1)
nsubj(work-9, He-1)
root(ROOT-0, took-2)
compound:prt(took-2, up-3)
nmod:poss(brush-5, his-4)
dobj(took-2, brush-5)
cc(took-2, and-6)
conj:and(took-2, went-7)
mark(work-9, to-8)
xcomp(went-7, work-9)

(ROOT
  (S
    (ADVP (IN Before) (RB long))
    (PRN (, ,)
      (S
        (NP (NNP Ben) (NNP Rogers))
        (VP (VBD came)
          (PP (IN in)
            (NP (JJ sightXthe) (JJ very) (NN boy)))
          (, ,)
          (PP (IN of)
            (NP (DT all) (NNS boys)))))
      (, ,))
    (NP (PRP he))
    (VP (VBZ dreaded)
      (ADVP (RBS most)))
    (. .)))

case(long-2, Before-1)
advmod(dreaded-17, long-2)
compound(Rogers-5, Ben-4)
nsubj(came-6, Rogers-5)
parataxis(dreaded-17, came-6)
case(boy-10, in-7)
amod(boy-10, sightXthe-8)
amod(boy-10, very-9)
nmod:in(came-6, boy-10)
case(boys-14, of-12)
det(boys-14, all-13)
nmod:of(came-6, boys-14)
nsubj(dreaded-17, he-16)
root(ROOT-0, dreaded-17)
advmod(dreaded-17, most-18)

(ROOT
  (S
    (NP (NNP Ben))
    (VP (VBD was)
      (VP
        (VP (VBG eating)
          (NP (DT an) (NN apple)))
        (, ,)
        (CC and)
        (VP (VBG giving)
          (NP (DT a) (JJ long) (NN whoop))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP he))
              (VP (VBD was)
                (VP (VBG pretending)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (NP (DT a) (NN steamboat))))))))))))
    (. .)))

nsubj(eating-3, Ben-1)
nsubj(giving-8, Ben-1)
aux(eating-3, was-2)
root(ROOT-0, eating-3)
det(apple-5, an-4)
dobj(eating-3, apple-5)
cc(eating-3, and-7)
conj:and(eating-3, giving-8)
det(whoop-11, a-9)
amod(whoop-11, long-10)
dobj(giving-8, whoop-11)
mark(pretending-16, for-13)
nsubj(pretending-16, he-14)
nsubj(steamboat-20, he-14)
aux(pretending-16, was-15)
advcl(giving-8, pretending-16)
mark(steamboat-20, to-17)
cop(steamboat-20, be-18)
det(steamboat-20, a-19)
xcomp(pretending-16, steamboat-20)

(ROOT
  (NP (NN Ting-a-ling-ling) (. !)))

root(ROOT-0, Ting-a-ling-ling-1)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD shouted)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD moved)
            (ADVP (RB slowly))
            (ADVP (RB down)
              (NP (DT the) (NN street)))))))
    (. .)))

nsubj(shouted-2, he-1)
root(ROOT-0, shouted-2)
mark(moved-5, as-3)
nsubj(moved-5, he-4)
advcl(shouted-2, moved-5)
advmod(moved-5, slowly-6)
advmod(moved-5, down-7)
det(street-9, the-8)
nmod:npmod(down-7, street-9)

(ROOT
  (NP (NN Ting-a-ling-ling) (. !)))

root(ROOT-0, Ting-a-ling-ling-1)

(ROOT
  (NP (NN Ding-dong-dong) (. !)))

root(ROOT-0, Ding-dong-dong-1)

(ROOT
  (NP (NN Ding-dong-dong) (. !)))

root(ROOT-0, Ding-dong-dong-1)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD went)
      (PP (IN on)
        (S
          (VP (VBG whitewashing) (, ,) (VBG paying)
            (NP (DT no) (NN attention))
            (PP (TO to)
              (NP (DT the) (NN steamboat)))))))
    (. .)))

nsubj(went-2, Tom-1)
root(ROOT-0, went-2)
mark(whitewashing-4, on-3)
advcl(went-2, whitewashing-4)
dep(whitewashing-4, paying-6)
neg(attention-8, no-7)
dobj(whitewashing-4, attention-8)
case(steamboat-11, to-9)
det(steamboat-11, the-10)
nmod:to(whitewashing-4, steamboat-11)

(ROOT
  (S
    (NP (NNP Ben))
    (VP
      (VP
        (VP (VBD stopped)
          (NP (PRP$ his) (NN boat)))
        (CC and)
        (VP (VBD stared)
          (NP (DT a) (NN moment))))
      (CC and)
      (ADVP (RB then))
      (VP (VBD said) (, ,)
        (NP (NNP Hi))))
    (. !)))

nsubj(stopped-2, Ben-1)
nsubj(stared-6, Ben-1)
nsubj(said-11, Ben-1)
root(ROOT-0, stopped-2)
nmod:poss(boat-4, his-3)
dobj(stopped-2, boat-4)
cc(stopped-2, and-5)
conj:and(stopped-2, stared-6)
det(moment-8, a-7)
dobj(stared-6, moment-8)
cc(stopped-2, and-9)
advmod(said-11, then-10)
conj:and(stopped-2, said-11)
dobj(said-11, Hi-13)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB work)
            (NP (NN today))
            (, ,) (VB dont)
            (NP (PRP you))))))
    (. ?)))

nsubj(have-2, You-1)
nsubj(work-4, You-1)
root(ROOT-0, have-2)
mark(work-4, to-3)
xcomp(have-2, work-4)
nmod:tmod(work-4, today-5)
dep(work-4, dont-7)
dobj(work-4, you-8)

(ROOT
  (S
    (INTJ (UH No))
    (VP (VB answer))
    (. .)))

discourse(answer-2, No-1)
root(ROOT-0, answer-2)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD surveyed)
      (NP (PRP$ his) (JJ last) (NN touch))
      (PP (IN with)
        (NP
          (NP (DT the) (NN eye))
          (PP (IN of)
            (NP (DT an) (NN artist))))))
    (. .)))

nsubj(surveyed-2, Tom-1)
root(ROOT-0, surveyed-2)
nmod:poss(touch-5, his-3)
amod(touch-5, last-4)
dobj(surveyed-2, touch-5)
case(eye-8, with-6)
det(eye-8, the-7)
nmod:with(surveyed-2, eye-8)
case(artist-11, of-9)
det(artist-11, an-10)
nmod:of(eye-8, artist-11)

(ROOT
  (S
    (NP (NNP Ben))
    (VP (VBD walked)
      (PRT (RP up))
      (PP (IN alongside)
        (NP (PRP him))))
    (. .)))

nsubj(walked-2, Ben-1)
root(ROOT-0, walked-2)
compound:prt(walked-2, up-3)
case(him-5, alongside-4)
nmod:alongside(walked-2, him-5)

(ROOT
  (S
    (S
      (NP (NNP Toms) (NN mouth))
      (VP (VBD watered)
        (PP (IN for)
          (NP (DT the) (NN apple)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD stuck)
        (PP (TO to)
          (NP (PRP$ his) (NN work)))))
    (. .)))

compound(mouth-2, Toms-1)
nsubj(watered-3, mouth-2)
root(ROOT-0, watered-3)
case(apple-6, for-4)
det(apple-6, the-5)
nmod:for(watered-3, apple-6)
cc(watered-3, but-8)
nsubj(stuck-10, he-9)
conj:but(watered-3, stuck-10)
case(work-13, to-11)
nmod:poss(work-13, his-12)
nmod:to(stuck-10, work-13)

(ROOT
  (S
    (NP (NNP Ben))
    (VP (VBD said) (, ,)
      (S
        (VP (VB Say) (, ,)
          (S
            (NP (NNP Im))
            (VP (VBG going)
              (NP (NN swimming)))))))
    (. .)))

nsubj(said-2, Ben-1)
root(ROOT-0, said-2)
ccomp(said-2, Say-4)
nsubj(going-7, Im-6)
dep(Say-4, going-7)
dobj(going-7, swimming-8)

(ROOT
  (SQ
    (VP (VB Dont)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP wish)
            (SBAR
              (S
                (NP (PRP you))
                (VP (MD could))))))))
    (. ?)))

root(ROOT-0, Dont-1)
nsubj(wish-3, you-2)
ccomp(Dont-1, wish-3)
nsubj(could-5, you-4)
ccomp(wish-3, could-5)

(ROOT
  (S (CC But)
    (NP (IN of) (NN course))
    (VP (VBD youd) (RB rather)
      (VP (VB work)))
    (. .)))

cc(youd-4, But-1)
amod(course-3, of-2)
nsubj(youd-4, course-3)
root(ROOT-0, youd-4)
advmod(youd-4, rather-5)
dep(youd-4, work-6)

(ROOT
  (S
    (NP (NNP Tom))
    (VP
      (VP (VBD looked)
        (ADVP (RB slowly) (RB over))
        (PP (IN at)
          (NP (DT the) (NN boy))))
      (, ,)
      (CC and)
      (VP (VBD said) (, ,)
        (SBARQ
          (WHNP (WP What))
          (SQ (VBP do)
            (NP (PRP you))
            (VP (VB call)
              (NP (NN work))))
          (. ?))))))

nsubj(looked-2, Tom-1)
nsubj(said-10, Tom-1)
root(ROOT-0, looked-2)
advmod(over-4, slowly-3)
advmod(looked-2, over-4)
case(boy-7, at-5)
det(boy-7, the-6)
nmod:at(looked-2, boy-7)
cc(looked-2, and-9)
conj:and(looked-2, said-10)
dep(call-15, What-12)
aux(call-15, do-13)
nsubj(call-15, you-14)
ccomp(said-10, call-15)
dobj(call-15, work-16)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (VP (VB isnt)
      (NP (DT that) (NN work)))
    (. ?)))

discourse(isnt-3, Why-1)
root(ROOT-0, isnt-3)
det(work-5, that-4)
dobj(isnt-3, work-5)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP
        (VP (VBD resumed)
          (NP (PRP$ his) (NN whitewashing)))
        (, ,)
        (CC and)
        (VP (VBD said)
          (S
            (ADVP (RB carelessly))
            (, ,)
            (INTJ (UH Well))
            (, ,)
            (ADVP (RB maybe))
            (NP (PRP it))
            (VP (VBZ is))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB maybe))
      (NP (PRP it))
      (VP (VBP isnt)))
    (. .)))

nsubj(resumed-2, Tom-1)
nsubj(said-7, Tom-1)
root(ROOT-0, resumed-2)
nmod:poss(whitewashing-4, his-3)
dobj(resumed-2, whitewashing-4)
cc(resumed-2, and-6)
conj:and(resumed-2, said-7)
advmod(is-14, carelessly-8)
discourse(is-14, Well-10)
advmod(is-14, maybe-12)
nsubj(is-14, it-13)
ccomp(said-7, is-14)
cc(resumed-2, and-16)
advmod(isnt-19, maybe-17)
nsubj(isnt-19, it-18)
conj:and(resumed-2, isnt-19)

(ROOT
  (S
    (NP
      (NP (DT All))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP know)))))
    (VP (VBZ is) (, ,)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ suits)
            (NP (NNP Tom) (NNP Sawyer))))))
    (. .)))

nsubj(is-4, All-1)
nsubj(know-3, I-2)
acl:relcl(All-1, know-3)
root(ROOT-0, is-4)
nsubj(suits-7, it-6)
ccomp(is-4, suits-7)
compound(Sawyer-9, Tom-8)
dobj(suits-7, Sawyer-9)

(ROOT
  (S
    (PP (VBN Come)
      (PP (IN on)))
    (, ,)
    (NP (PRP you))
    (VP (VBP dont)
      (VP (VB mean)
        (S
          (VP (TO to)
            (VP (VB let)
              (PRT (RP on))
              (SBAR (IN that)
                (S
                  (NP (PRP you))
                  (VP (VBP like)
                    (NP (PRP it))))))))))
    (. ?)))

case(on-2, Come-1)
advcl:come(dont-5, on-2)
nsubj(dont-5, you-4)
root(ROOT-0, dont-5)
xcomp(dont-5, mean-6)
mark(let-8, to-7)
xcomp(mean-6, let-8)
compound:prt(let-8, on-9)
mark(like-12, that-10)
nsubj(like-12, you-11)
ccomp(let-8, like-12)
dobj(like-12, it-13)

(ROOT
  (S
    (NP (DT The) (NN brush))
    (VP (VBD continued)
      (S
        (VP (TO to)
          (VP (VB move)))))
    (. .)))

det(brush-2, The-1)
nsubj(continued-3, brush-2)
nsubj(move-5, brush-2)
root(ROOT-0, continued-3)
mark(move-5, to-4)
xcomp(continued-3, move-5)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (PRP I))
    (VP (VBP dont)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP I))
            (VP (VBP shouldnt))))))
    (. .)))

discourse(dont-4, Well-1)
nsubj(dont-4, I-3)
root(ROOT-0, dont-4)
xcomp(dont-4, see-5)
advmod(shouldnt-8, why-6)
nsubj(shouldnt-8, I-7)
advcl(see-5, shouldnt-8)

(ROOT
  (SQ (NNP Does)
    (NP (DT a) (NN boy))
    (VP (VB get)
      (NP (DT a) (NN chance)
        (S
          (VP (TO to)
            (VP (VB whitewash)
              (NP
                (NP (DT a) (NN fence))
                (NP (DT every) (NN day))))))))
    (. ?)))

dep(get-4, Does-1)
det(boy-3, a-2)
nsubj(get-4, boy-3)
root(ROOT-0, get-4)
det(chance-6, a-5)
dobj(get-4, chance-6)
mark(whitewash-8, to-7)
acl(chance-6, whitewash-8)
det(fence-10, a-9)
dobj(whitewash-8, fence-10)
det(day-12, every-11)
dep(fence-10, day-12)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD put)
      (NP (DT the) (NN thing))
      (PP (IN in)
        (NP (DT a) (JJ new) (NN light))))
    (. .)))

nsubj(put-2, That-1)
root(ROOT-0, put-2)
det(thing-4, the-3)
dobj(put-2, thing-4)
case(light-8, in-5)
det(light-8, a-6)
amod(light-8, new-7)
nmod:in(put-2, light-8)

(ROOT
  (S
    (NP (NNP Ben))
    (VP (VBD stopped)
      (S
        (VP (VBG nibbling)
          (NP (PRP$ his) (NN apple)))))
    (. .)))

nsubj(stopped-2, Ben-1)
root(ROOT-0, stopped-2)
xcomp(stopped-2, nibbling-3)
nmod:poss(apple-5, his-4)
dobj(nibbling-3, apple-5)

(ROOT
  (S
    (NP (NNP Tom))
    (VP
      (VP (VBD swept)
        (NP (PRP$ his) (NN brush))
        (ADVP (RB back)))
      (CC and)
      (VP (VBD forthXstepped)
        (PRT (RP back))
        (S
          (VP (TO to)
            (VP
              (VP (VB note)
                (NP (DT the) (NN effectXadded))
                (ADVP
                  (NP (DT a) (NN touch))
                  (RB here)))
              (CC and)
              (VP (VB thereXcriticized)
                (NP (DT the) (NN effect))
                (ADVP (RB again))))))))
    (. .)))

nsubj(swept-2, Tom-1)
nsubj(forthXstepped-7, Tom-1)
nsubj(note-10, Tom-1)
root(ROOT-0, swept-2)
nmod:poss(brush-4, his-3)
dobj(swept-2, brush-4)
advmod(swept-2, back-5)
cc(swept-2, and-6)
conj:and(swept-2, forthXstepped-7)
compound:prt(forthXstepped-7, back-8)
mark(note-10, to-9)
xcomp(forthXstepped-7, note-10)
det(effectXadded-12, the-11)
dobj(note-10, effectXadded-12)
det(touch-14, a-13)
nmod:npmod(here-15, touch-14)
advmod(note-10, here-15)
cc(note-10, and-16)
xcomp(forthXstepped-7, thereXcriticized-17)
conj:and(note-10, thereXcriticized-17)
det(effect-19, the-18)
dobj(thereXcriticized-17, effect-19)
advmod(thereXcriticized-17, again-20)

(ROOT
  (S
    (NP (NNP Ben))
    (VP (VBD watched)
      (NP (DT every) (NN move))
      (, ,)
      (S
        (VP (VBG getting)
          (ADJP
            (ADJP (JJR more))
            (CC and)
            (ADJP (RBR more) (JJ interested))
            (, ,)
            (ADJP (JJR more))
            (CC and)
            (ADJP (RBR more) (JJ absorbed))))))
    (. .)))

nsubj(watched-2, Ben-1)
root(ROOT-0, watched-2)
det(move-4, every-3)
dobj(watched-2, move-4)
advcl(watched-2, getting-6)
xcomp(getting-6, more-7)
cc(more-7, and-8)
advmod(interested-10, more-9)
xcomp(getting-6, interested-10)
conj:and(more-7, interested-10)
xcomp(getting-6, more-12)
conj:and(more-7, more-12)
cc(more-7, and-13)
advmod(absorbed-15, more-14)
xcomp(getting-6, absorbed-15)
conj:and(more-7, absorbed-15)

(ROOT
  (S
    (PP (IN After)
      (NP (DT a) (JJ short) (NN time)))
    (, ,)
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (S
        (NP
          (NP (NNP Say))
          (, ,)
          (NP (NNP Tom))
          (, ,))
        (VP (VB let)
          (NP (PRP me))
          (ADVP (RB whitewash)
            (NP (DT a) (RB little))))))
    (. .)))

case(time-4, After-1)
det(time-4, a-2)
amod(time-4, short-3)
nmod:after(said-7, time-4)
nsubj(said-7, he-6)
root(ROOT-0, said-7)
nsubj(let-13, Say-9)
appos(Say-9, Tom-11)
ccomp(said-7, let-13)
dobj(let-13, me-14)
advmod(let-13, whitewash-15)
det(little-17, a-16)
nmod:npmod(whitewash-15, little-17)

(ROOT
  (S
    (S
      (NP (NNP Tom))
      (VP (VBZ consideredXwas)
        (PP (IN about)
          (PP (TO to)
            (NP (NN consent))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD changed)
        (NP (PRP$ his) (NN mind))))
    (. .)))

nsubj(consideredXwas-2, Tom-1)
root(ROOT-0, consideredXwas-2)
case(consent-5, about-3)
case(consent-5, to-4)
nmod:to(consideredXwas-2, consent-5)
cc(consideredXwas-2, but-7)
nsubj(changed-9, he-8)
conj:but(consideredXwas-2, changed-9)
nmod:poss(mind-11, his-10)
dobj(changed-9, mind-11)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (NP (NN noXI) (NN dont))
    (VP (VBP think)
      (ADVP (RB so)))
    (. .)))

discourse(think-5, No-1)
compound(dont-4, noXI-3)
nsubj(think-5, dont-4)
root(ROOT-0, think-5)
advmod(think-5, so-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP see) (, ,)
      (S
        (NP (NNP Aunt) (NNP Pollys))
        (ADJP (RB awfully) (JJ particular)
          (PP (IN about)
            (NP (DT this) (NN fence))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
compound(Pollys-5, Aunt-4)
nsubj(particular-7, Pollys-5)
advmod(particular-7, awfully-6)
xcomp(see-2, particular-7)
case(fence-10, about-8)
det(fence-10, this-9)
nmod:about(particular-7, fence-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP guess)
      (S
        (NP (EX there))
        (VP (VB isnt)
          (NP
            (NP (CD one) (NN boy))
            (PP (IN in)
              (NP (DT a) (CD thousand)))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD can)
                  (VP (VB do)
                    (NP (PRP it))
                    (NP
                      (NP (DT the) (NN way))
                      (SBAR
                        (S
                          (NP (PRP$ its))
                          (VP (VBD got)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (VP (VBN done)))))))))))))))))
    (. .)))

nsubj(guess-2, I-1)
root(ROOT-0, guess-2)
expl(isnt-4, there-3)
ccomp(guess-2, isnt-4)
nummod(boy-6, one-5)
dobj(isnt-4, boy-6)
nsubj(do-12, boy-6)
case(thousand-9, in-7)
det(thousand-9, a-8)
nmod:in(boy-6, thousand-9)
ref(boy-6, that-10)
aux(do-12, can-11)
acl:relcl(boy-6, do-12)
iobj(do-12, it-13)
det(way-15, the-14)
dobj(do-12, way-15)
nsubj(got-17, its-16)
nsubjpass(done-20, its-16)
acl:relcl(way-15, got-17)
mark(done-20, to-18)
auxpass(done-20, be-19)
xcomp(got-17, done-20)

(ROOT
  (S
    (S
      (INTJ (UH Oh))
      (, ,)
      (VP (VB come)
        (PRT (RP on))))
    (, ,)
    (ADVP (RB lem))
    (NP (PRP me))
    (VP (VBP try))
    (. .)))

discourse(come-3, Oh-1)
ccomp(try-8, come-3)
compound:prt(come-3, on-4)
advmod(me-7, lem-6)
nsubj(try-8, me-7)
root(ROOT-0, try-8)

(ROOT
  (S
    (NP (NNP Ben) (, ,) (NNP Id))
    (VP (VBP like)
      (PP (TO to)
        (PRN (, ,)
          (ADVP (JJ honest))
          (, ,))
        (NP (NN butX)))
      (S
        (INTJ (UH Oh) (, ,) (UH Ill))
        (VP (VB be)
          (ADJP (JJ careful)))))
    (. .)))

compound(Id-3, Ben-1)
nsubj(like-4, Id-3)
root(ROOT-0, like-4)
case(butX-9, to-5)
dep(butX-9, honest-7)
nmod:to(like-4, butX-9)
discourse(careful-14, Oh-10)
dep(Oh-10, Ill-12)
cop(careful-14, be-13)
ccomp(like-4, careful-14)

(ROOT
  (S
    (S
      (VP (VB Say)))
    (, ,)
    (NP (NNP Ill))
    (VP (VBP give)
      (NP (PRP you))
      (NP
        (NP (DT the) (NN core))
        (PP (IN of)
          (NP (PRP$ my) (NN apple)))))
    (. .)))

ccomp(give-4, Say-1)
nsubj(give-4, Ill-3)
root(ROOT-0, give-4)
iobj(give-4, you-5)
det(core-7, the-6)
dobj(give-4, core-7)
case(apple-10, of-8)
nmod:poss(apple-10, my-9)
nmod:of(core-7, apple-10)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (NP (NNP Ben) (, ,) (NNP Im) (NN afraidX) (NNP Ill))
    (VP (VBP give)
      (NP (PRP you))
      (NP
        (NP (DT all))
        (PP (IN of)
          (NP (PRP it)))))
    (. !)))

discourse(give-8, No-1)
compound(Ill-7, Ben-3)
appos(Ill-7, Im-5)
compound(Ill-7, afraidX-6)
nsubj(give-8, Ill-7)
root(ROOT-0, give-8)
iobj(give-8, you-9)
dobj(give-8, all-10)
case(it-12, of-11)
nmod:of(all-10, it-12)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD gave)
      (PRT (RP up))
      (NP
        (NP (DT the) (NN brush))
        (PP (IN with)
          (NP (NN reluctance))))
      (PP (IN in)
        (NP
          (NP (PRP$ his) (NN face))
          (PP (CC but)
            (NP
              (NP (NN eagerness))
              (PP (IN in)
                (NP (PRP$ his) (NN heart))))))))
    (. .)))

nsubj(gave-2, Tom-1)
root(ROOT-0, gave-2)
compound:prt(gave-2, up-3)
det(brush-5, the-4)
dobj(gave-2, brush-5)
case(reluctance-7, with-6)
nmod:with(brush-5, reluctance-7)
case(face-10, in-8)
nmod:poss(face-10, his-9)
nmod:in(gave-2, face-10)
case(eagerness-12, but-11)
nmod:but(face-10, eagerness-12)
case(heart-15, in-13)
nmod:poss(heart-15, his-14)
nmod:in(eagerness-12, heart-15)

(ROOT
  (S (CC And)
    (SBAR (IN while)
      (S
        (NP (DT the) (JJ late) (NN steamboat))
        (VP
          (VP (VBD worked))
          (CC and)
          (VP (VBN sweated)
            (PP (IN in)
              (NP (DT the) (NN sun)))))))
    (, ,)
    (NP (DT the) (JJ retired) (NN artist))
    (VP
      (VP (VBD sat)
        (PP (IN on)
          (NP
            (NP (DT a) (NN barrel))
            (PP (IN in)
              (NP
                (NP (DT the) (NN shade))
                (, ,)
                (VP (VBN dangled)
                  (NP (PRP$ his) (NNS legs))))))))
      (, ,)
      (VP (VBD ate)
        (NP (PRP$ his) (NN apple)))
      (, ,)
      (CC and)
      (VP (VBD planned)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP he))
            (VP (MD would)
              (VP (VB trick)
                (NP
                  (NP (JJR more))
                  (PP (IN of)
                    (NP (DT the) (NNS boys))))))))))
    (. .)))

cc(sat-16, And-1)
mark(worked-6, while-2)
det(steamboat-5, the-3)
amod(steamboat-5, late-4)
nsubj(worked-6, steamboat-5)
nsubj(sweated-8, steamboat-5)
advcl(sat-16, worked-6)
cc(worked-6, and-7)
conj:and(worked-6, sweated-8)
advcl(sat-16, sweated-8)
case(sun-11, in-9)
det(sun-11, the-10)
nmod:in(sweated-8, sun-11)
det(artist-15, the-13)
amod(artist-15, retired-14)
nsubj(sat-16, artist-15)
nsubj(ate-28, artist-15)
nsubj(planned-33, artist-15)
root(ROOT-0, sat-16)
case(barrel-19, on-17)
det(barrel-19, a-18)
nmod:on(sat-16, barrel-19)
case(shade-22, in-20)
det(shade-22, the-21)
nmod:in(barrel-19, shade-22)
acl(shade-22, dangled-24)
nmod:poss(legs-26, his-25)
dobj(dangled-24, legs-26)
conj:and(sat-16, ate-28)
nmod:poss(apple-30, his-29)
dobj(ate-28, apple-30)
cc(sat-16, and-32)
conj:and(sat-16, planned-33)
advmod(trick-37, how-34)
nsubj(trick-37, he-35)
aux(trick-37, would-36)
ccomp(planned-33, trick-37)
dobj(trick-37, more-38)
case(boys-41, of-39)
det(boys-41, the-40)
nmod:of(more-38, boys-41)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP (DT no) (NN lack))
          (PP (IN of)
            (NP (NNS victims))))))
    (: :)
    (S
      (NP (NNS boys))
      (VP (VBD walked)
        (PP (IN along)
          (NP (DT every) (JJ little) (NN while)))))
    (: ;)
    (S
      (NP (PRP they))
      (VP
        (VP (VBD came)
          (S
            (VP (TO to)
              (VP (VB jeer)))))
        (, ,)
        (CC but)
        (VP (VBD remained)
          (PP (TO to)
            (NP (NN whitewash))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
neg(lack-4, no-3)
nsubj(was-2, lack-4)
case(victims-6, of-5)
nmod:of(lack-4, victims-6)
nsubj(walked-9, boys-8)
parataxis(was-2, walked-9)
case(while-13, along-10)
det(while-13, every-11)
amod(while-13, little-12)
nmod:along(walked-9, while-13)
nsubj(came-16, they-15)
nsubj(jeer-18, they-15)
nsubj(remained-21, they-15)
parataxis(was-2, came-16)
mark(jeer-18, to-17)
xcomp(came-16, jeer-18)
cc(came-16, but-20)
parataxis(was-2, remained-21)
conj:but(came-16, remained-21)
case(whitewash-23, to-22)
nmod:to(remained-21, whitewash-23)

(ROOT
  (S
    (S
      (PP (IN By)
        (NP (DT the) (NN time)))
      (NP (NNP Ben))
      (VP (VBD was)
        (ADJP (JJ tired) (IN out))))
    (PRN (, ,)
      (S
        (NP (NNP Tom))
        (VP (VBD had)
          (VP (VBN traded)
            (NP (DT the) (JJ next) (NN chance))
            (PP (TO to)
              (NP
                (NP (NNP Billy) (NNP Fisher))
                (PP (IN for)
                  (NP (DT a) (NN kite))))))))
      (, ,))
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD was)
            (VP (VBN worn)
              (PRT (RP out))))))
      (, ,)
      (NP (NNP Johnny) (NNP Miller))
      (VP (VBD bought)
        (PP (IN in) (IN for)
          (NP
            (NP (DT a) (JJ dead) (NN rat))
            (CC and)
            (NP (DT a) (NN string))))
        (S
          (VP (TO to)
            (VP (VB swing)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBD withXand)
                    (ADVP
                      (ADVP (RB so) (RB on))
                      (, ,)
                      (CC and)
                      (ADVP (RB so) (RB on))
                      (, ,))
                    (NP (NN hour))
                    (PP (IN after)
                      (NP (NN hour)))))))))))
    (. .)))

case(time-3, By-1)
det(time-3, the-2)
nmod:by(tired-6, time-3)
nsubj(tired-6, Ben-4)
cop(tired-6, was-5)
root(ROOT-0, tired-6)
dep(tired-6, out-7)
nsubj(traded-11, Tom-9)
aux(traded-11, had-10)
dep(tired-6, traded-11)
det(chance-14, the-12)
amod(chance-14, next-13)
dobj(traded-11, chance-14)
case(Fisher-17, to-15)
compound(Fisher-17, Billy-16)
nmod:to(traded-11, Fisher-17)
case(kite-20, for-18)
det(kite-20, a-19)
nmod:for(Fisher-17, kite-20)
cc(tired-6, and-22)
advmod(worn-26, when-23)
nsubjpass(worn-26, he-24)
auxpass(worn-26, was-25)
advcl(bought-31, worn-26)
compound:prt(worn-26, out-27)
compound(Miller-30, Johnny-29)
nsubj(bought-31, Miller-30)
nsubj(swing-41, Miller-30)
conj:and(tired-6, bought-31)
case(rat-36, in-32)
case(rat-36, for-33)
det(rat-36, a-34)
amod(rat-36, dead-35)
nmod:for(bought-31, rat-36)
cc(rat-36, and-37)
det(string-39, a-38)
nmod:for(bought-31, string-39)
conj:and(rat-36, string-39)
mark(swing-41, to-40)
xcomp(bought-31, swing-41)
nsubj(withXand-43, it-42)
ccomp(swing-41, withXand-43)
advmod(on-45, so-44)
advmod(and-47, on-45)
advmod(withXand-43, and-47)
advmod(on-49, so-48)
advmod(and-47, on-49)
dobj(withXand-43, hour-51)
case(hour-53, after-52)
nmod:after(withXand-43, hour-53)

(ROOT
  (S (CC And)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP
          (NP (DT the) (NN middle))
          (PP (IN of)
            (NP (DT the) (NN afternoon))))
        (VP (VBD came) (, ,)
          (PP (IN from)
            (S
              (VP (VBG being)
                (NP
                  (NP (DT a) (JJ poverty-stricken) (NN boy))
                  (PP (IN in)
                    (NP (DT the) (NN morning))))))))))
    (, ,)
    (NP (NNP Tom))
    (VP (VBD was)
      (VP (VBG rolling)
        (PP (IN in)
          (NP (NN wealth)))))
    (. .)))

cc(rolling-21, And-1)
advmod(came-8, when-2)
det(middle-4, the-3)
nsubj(came-8, middle-4)
case(afternoon-7, of-5)
det(afternoon-7, the-6)
nmod:of(middle-4, afternoon-7)
advcl(rolling-21, came-8)
mark(boy-14, from-10)
cop(boy-14, being-11)
det(boy-14, a-12)
amod(boy-14, poverty-stricken-13)
advcl(came-8, boy-14)
case(morning-17, in-15)
det(morning-17, the-16)
nmod:in(boy-14, morning-17)
nsubj(rolling-21, Tom-19)
aux(rolling-21, was-20)
root(ROOT-0, rolling-21)
case(wealth-23, in-22)
nmod:in(rolling-21, wealth-23)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (PRN (, ,)
        (PP (IN besides)
          (NP (DT the) (NNS things) (NN mentioned)))
        (, ,))
      (NP
        (NP (CD twelve) (NNS marbles))
        (, ,)
        (NP
          (NP (DT a) (NN piece))
          (PP (IN of)
            (NP
              (NP (JJ blue) (NNS bottle-glass))
              (, ,)
              (NP
                (NP (DT a) (NN key))
                (NP (DT that) (JJ wouldnt) (NN unlock) (NN anything)))
              (, ,)
              (NP
                (NP (DT a) (NN piece))
                (PP (IN of)
                  (NP (NN chalk)))))))
        (, ,)
        (NP (DT a) (NN toy) (NN soldier))
        (, ,)
        (NP (CD six) (NNS firecrackers))
        (, ,)
        (NP
          (NP (DT a) (NN kitten))
          (PP (IN with)
            (NP (RB only) (CD one) (NN eye))))
        (, ,)
        (NP (DT a) (NN doorknob))
        (, ,)
        (NP (DT a) (JJ rusty) (NN knife))
        (, ,)
        (NP
          (NP (CD four) (NNS pieces))
          (PP (IN of)
            (NP (JJ orange) (NN peel))))
        (, ,)
        (CC and)
        (NP (DT an) (JJ old) (NN window) (NN frame))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
case(mentioned-7, besides-4)
det(mentioned-7, the-5)
compound(mentioned-7, things-6)
dep(had-2, mentioned-7)
nummod(marbles-10, twelve-9)
dobj(had-2, marbles-10)
det(piece-13, a-12)
dobj(had-2, piece-13)
conj:and(marbles-10, piece-13)
case(bottle-glass-16, of-14)
amod(bottle-glass-16, blue-15)
nmod:of(piece-13, bottle-glass-16)
det(key-19, a-18)
appos(bottle-glass-16, key-19)
det(anything-23, that-20)
amod(anything-23, wouldnt-21)
compound(anything-23, unlock-22)
dep(key-19, anything-23)
det(piece-26, a-25)
appos(bottle-glass-16, piece-26)
case(chalk-28, of-27)
nmod:of(piece-26, chalk-28)
det(soldier-32, a-30)
compound(soldier-32, toy-31)
dobj(had-2, soldier-32)
conj:and(marbles-10, soldier-32)
nummod(firecrackers-35, six-34)
dobj(had-2, firecrackers-35)
conj:and(marbles-10, firecrackers-35)
det(kitten-38, a-37)
dobj(had-2, kitten-38)
conj:and(marbles-10, kitten-38)
case(eye-42, with-39)
advmod(eye-42, only-40)
nummod(eye-42, one-41)
nmod:with(kitten-38, eye-42)
det(doorknob-45, a-44)
dobj(had-2, doorknob-45)
conj:and(marbles-10, doorknob-45)
det(knife-49, a-47)
amod(knife-49, rusty-48)
dobj(had-2, knife-49)
conj:and(marbles-10, knife-49)
nummod(pieces-52, four-51)
dobj(had-2, pieces-52)
conj:and(marbles-10, pieces-52)
case(peel-55, of-53)
amod(peel-55, orange-54)
nmod:of(pieces-52, peel-55)
cc(marbles-10, and-57)
det(frame-61, an-58)
amod(frame-61, old-59)
compound(frame-61, window-60)
dobj(had-2, frame-61)
conj:and(marbles-10, frame-61)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (VP (VBN had)
          (NP (DT a)
            (ADJP (JJ nice) (JJ idle))
            (NN time))
          (NP
            (NP (PDT all) (DT the) (JJ whileXand) (NN plenty))
            (PP (IN of)
              (NP (NN companyXand)))))))
    (NP (DT the) (NN fence))
    (VP (VBD had)
      (NP
        (NP (CD three) (NNS coats))
        (PP (IN of)
          (NP (NN whitewash))))
      (PP (IN on)
        (NP (PRP it))))
    (. !)))

nsubj(had-3, He-1)
aux(had-3, had-2)
dep(had-16, had-3)
det(time-7, a-4)
amod(idle-6, nice-5)
amod(time-7, idle-6)
iobj(had-3, time-7)
det:predet(plenty-11, all-8)
det(plenty-11, the-9)
amod(plenty-11, whileXand-10)
dobj(had-3, plenty-11)
case(companyXand-13, of-12)
nmod:of(plenty-11, companyXand-13)
det(fence-15, the-14)
nsubj(had-16, fence-15)
root(ROOT-0, had-16)
nummod(coats-18, three-17)
dobj(had-16, coats-18)
case(whitewash-20, of-19)
nmod:of(coats-18, whitewash-20)
case(it-22, on-21)
nmod:on(had-16, it-22)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (VBP hadnt)
          (S
            (VP (VB run)
              (PRT (RP out))
              (PP (IN of)
                (NP (NN whitewash))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN bankrupted)
          (NP
            (NP (DT every) (NN boy))
            (PP (IN in)
              (NP (DT the) (NN village)))))))
    (. .)))

mark(hadnt-3, If-1)
nsubj(hadnt-3, he-2)
advcl(bankrupted-12, hadnt-3)
ccomp(hadnt-3, run-4)
compound:prt(run-4, out-5)
case(whitewash-7, of-6)
nmod:of(run-4, whitewash-7)
nsubj(bankrupted-12, he-9)
aux(bankrupted-12, would-10)
aux(bankrupted-12, have-11)
root(ROOT-0, bankrupted-12)
det(boy-14, every-13)
dobj(bankrupted-12, boy-14)
case(village-17, in-15)
det(village-17, the-16)
nmod:in(boy-14, village-17)

(ROOT
  (S
    (NP (NNP Tom))
    (VP (VBD said)
      (PP (TO to)
        (NP (PRP himself)))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was) (RB not)
            (PP (JJ such)
              (NP (DT a) (JJ hollow) (NN world)))
            (, ,)
            (ADVP (IN after) (DT all))))))
    (. .)))

nsubj(said-2, Tom-1)
root(ROOT-0, said-2)
case(himself-4, to-3)
nmod:to(said-2, himself-4)
mark(world-12, that-5)
nsubj(world-12, it-6)
cop(world-12, was-7)
neg(world-12, not-8)
case(world-12, such-9)
det(world-12, a-10)
amod(world-12, hollow-11)
ccomp(said-2, world-12)
case(all-15, after-14)
advmod(world-12, all-15)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (VP (VBN discovered)
          (NP
            (NP (DT a) (JJ great) (NN law))
            (PP (IN of)
              (NP (JJ human) (NN action)))))))
    (: :)
    (S
      (SBAR (IN in) (NN order)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP
                (NP (DT a) (NN man) (NN covet))
                (NP (DT a) (NN thing)))))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP (RB only))
        (ADJP (JJ necessary)
          (S
            (VP (TO to)
              (VP (VB make)
                (S
                  (NP (DT the) (NN thing))
                  (ADJP (JJ difficult)
                    (S
                      (VP (TO to)
                        (VP (VB attain))))))))))))
    (. .)))

nsubj(discovered-3, He-1)
aux(discovered-3, had-2)
root(ROOT-0, discovered-3)
det(law-6, a-4)
amod(law-6, great-5)
dobj(discovered-3, law-6)
case(action-9, of-7)
amod(action-9, human-8)
nmod:of(law-6, action-9)
mark(make-14, in-11)
mwe(in-11, order-12)
mark(make-14, to-13)
advcl(necessary-24, make-14)
det(covet-17, a-15)
compound(covet-17, man-16)
dobj(make-14, covet-17)
det(thing-19, a-18)
dep(covet-17, thing-19)
nsubj(necessary-24, it-21)
nsubj(make-26, it-21)
cop(necessary-24, is-22)
advmod(necessary-24, only-23)
parataxis(discovered-3, necessary-24)
mark(make-26, to-25)
xcomp(necessary-24, make-26)
det(thing-28, the-27)
nsubj(difficult-29, thing-28)
nsubj(attain-31, thing-28)
xcomp(make-26, difficult-29)
mark(attain-31, to-30)
xcomp(difficult-29, attain-31)

