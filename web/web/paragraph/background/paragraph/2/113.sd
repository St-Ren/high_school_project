(ROOT
  (NP
    (NP (NNP Unit) (CD 8) (NNP Always) (NNP Open))
    (, ,)
    (NP (NNP Always) (NNP Convenient))
    (. .)))

compound(Open-4, Unit-1)
nummod(Open-4, 8-2)
compound(Open-4, Always-3)
root(ROOT-0, Open-4)
compound(Convenient-7, Always-6)
appos(Open-4, Convenient-7)

(ROOT
  (S
    (NP (JJ Convenience) (NNS stores))
    (VP (VBP are)
      (ADVP (RB definitely))
      (NP
        (NP (DT a) (JJ common) (NN sight))
        (PP (IN in)
          (NP (NNP Taiwan)))))
    (. .)))

amod(stores-2, Convenience-1)
nsubj(sight-7, stores-2)
cop(sight-7, are-3)
advmod(sight-7, definitely-4)
det(sight-7, a-5)
amod(sight-7, common-6)
root(ROOT-0, sight-7)
case(Taiwan-9, in-8)
nmod:in(sight-7, Taiwan-9)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Taiwans) (JJ bustling) (NNS cities)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is) (RB not)
      (ADJP (JJ surprising)
        (ADVP (IN at) (DT all))
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (CD two) (NN convenience) (NNS stores))
              (PP (IN on)
                (NP (CD one) (NN block))))))))
    (. .)))

case(cities-4, In-1)
compound(cities-4, Taiwans-2)
amod(cities-4, bustling-3)
nmod:in(surprising-9, cities-4)
nsubj(surprising-9, it-6)
nsubj(see-13, it-6)
cop(surprising-9, is-7)
neg(surprising-9, not-8)
root(ROOT-0, surprising-9)
case(all-11, at-10)
nmod:at(surprising-9, all-11)
mark(see-13, to-12)
xcomp(surprising-9, see-13)
nummod(stores-16, two-14)
compound(stores-16, convenience-15)
dobj(see-13, stores-16)
case(block-19, on-17)
nummod(block-19, one-18)
nmod:on(see-13, block-19)

(ROOT
  (S
    (PP (RB Even) (IN in)
      (NP (DT the) (JJ quiet) (NNS suburbs)))
    (, ,)
    (NP (EX there))
    (ADVP (RB always))
    (VP (VBZ seems)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP
              (NP
                (QP (IN at) (JJS least) (CD one))
                (NN convenience) (NN store))
              (JJ open))
            (PP (IN for)
              (NP (NN business)))))))
    (. .)))

advmod(suburbs-5, Even-1)
case(suburbs-5, in-2)
det(suburbs-5, the-3)
amod(suburbs-5, quiet-4)
nmod:in(seems-9, suburbs-5)
expl(seems-9, there-7)
advmod(seems-9, always-8)
root(ROOT-0, seems-9)
mark(open-17, to-10)
cop(open-17, be-11)
case(least-13, at-12)
nmod:npmod(one-14, least-13)
nummod(store-16, one-14)
compound(store-16, convenience-15)
nmod:npmod(open-17, store-16)
xcomp(seems-9, open-17)
case(business-19, for-18)
nmod:for(open-17, business-19)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP it))
    (VP (MD should)
      (VP (VB come)
        (PP (IN as)
          (NP (DT no) (NN surprise)))
        (, ,)
        (ADVP (RB then))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (NNP Taiwan))
            (VP (VBZ has)
              (NP
                (NP (DT the) (JJS highest) (NN density))
                (PP (IN of)
                  (NP
                    (NP (NN convenience) (NNS stores))
                    (PP (IN in)
                      (NP (DT the) (NN world)))))))))))
    (. .)))

advmod(come-4, Perhaps-1)
nsubj(come-4, it-2)
aux(come-4, should-3)
root(ROOT-0, come-4)
case(surprise-7, as-5)
neg(surprise-7, no-6)
nmod:as(come-4, surprise-7)
advmod(come-4, then-9)
mark(has-13, that-11)
nsubj(has-13, Taiwan-12)
ccomp(come-4, has-13)
det(density-16, the-14)
amod(density-16, highest-15)
dobj(has-13, density-16)
case(stores-19, of-17)
compound(stores-19, convenience-18)
nmod:of(density-16, stores-19)
case(world-22, in-20)
det(world-22, the-21)
nmod:in(stores-19, world-22)

(ROOT
  (S
    (NP
      (NP (DT Another) (JJ common) (NN sight))
      (PP (IN in)
        (NP (NNP Taiwan))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NN convenience) (NNS stores))
          (VP (VBP are)
            (ADJP
              (ADVP (RBR more) (RB often))
              (SBAR (IN than)
                (FRAG (RB not)
                  (ADJP (JJ crowded)
                    (PP (IN with)
                      (NP (NNS people)))))))
            (, ,)
            (ADVP (RB especially))
            (PP (IN at)
              (NP (NNS mealtimes)))))))
    (. .)))

det(sight-3, Another-1)
amod(sight-3, common-2)
nsubj(is-6, sight-3)
case(Taiwan-5, in-4)
nmod:in(sight-3, Taiwan-5)
root(ROOT-0, is-6)
mark(often-12, that-7)
compound(stores-9, convenience-8)
nsubj(often-12, stores-9)
cop(often-12, are-10)
advmod(often-12, more-11)
ccomp(is-6, often-12)
mark(not-14, than-13)
dep(often-12, not-14)
dep(not-14, crowded-15)
case(people-17, with-16)
nmod:with(crowded-15, people-17)
advmod(often-12, especially-19)
case(mealtimes-21, at-20)
nmod:at(often-12, mealtimes-21)

(ROOT
  (S
    (NP
      (NP (DT Some) (NNS people))
      (, ,)
      (PP (IN for)
        (NP (NN instance)))
      (, ,))
    (ADVP (RB never))
    (VP (VBP start)
      (NP (PRP$ their) (NN day))
      (PP (IN without)
        (S
          (ADVP (RB first))
          (VP (VBG stopping)
            (PP (IN at)
              (NP
                (NP (DT a) (NN convenience) (NN store))
                (PP (IN for)
                  (NP
                    (NP (DT a) (NN cup))
                    (PP (IN of)
                      (NP (NN coffee)))))))))))
    (. .)))

det(people-2, Some-1)
nsubj(start-8, people-2)
case(instance-5, for-4)
nmod:for(people-2, instance-5)
neg(start-8, never-7)
root(ROOT-0, start-8)
nmod:poss(day-10, their-9)
nmod:tmod(start-8, day-10)
mark(stopping-13, without-11)
advmod(stopping-13, first-12)
advcl(start-8, stopping-13)
case(store-17, at-14)
det(store-17, a-15)
compound(store-17, convenience-16)
nmod:at(stopping-13, store-17)
case(cup-20, for-18)
det(cup-20, a-19)
nmod:for(store-17, cup-20)
case(coffee-22, of-21)
nmod:of(cup-20, coffee-22)

(ROOT
  (S
    (ADVP (RB Clearly))
    (, ,)
    (NP (NN convenience) (NNS stores))
    (VP (VBP have)
      (VP (VBN become)
        (ADJP (RB very) (JJ successful))
        (PP (IN by)
          (S
            (VP (VBG weaving)
              (NP (PRP themselves))
              (PP (IN into)
                (NP
                  (NP (DT the) (NN fabric))
                  (PP (IN of)
                    (NP
                      (NP (JJ everyday) (NN life))
                      (PP (IN in)
                        (NP (NNP Taiwan))))))))))))
    (. .)))

advmod(become-6, Clearly-1)
compound(stores-4, convenience-3)
nsubj(become-6, stores-4)
aux(become-6, have-5)
root(ROOT-0, become-6)
advmod(successful-8, very-7)
xcomp(become-6, successful-8)
mark(weaving-10, by-9)
advcl(become-6, weaving-10)
dobj(weaving-10, themselves-11)
case(fabric-14, into-12)
det(fabric-14, the-13)
nmod:into(weaving-10, fabric-14)
case(life-17, of-15)
amod(life-17, everyday-16)
nmod:of(fabric-14, life-17)
case(Taiwan-19, in-18)
nmod:in(life-17, Taiwan-19)

(ROOT
  (S
    (NP
      (NP (CD One) (JJ important) (NN reason))
      (PP (IN for)
        (NP
          (NP (DT the) (NN popularity))
          (PP (IN of)
            (NP
              (NP (NN convenience) (NNS stores))
              (PP (IN in)
                (NP (NNP Taiwan))))))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ wide) (NN variety))
        (PP (IN of)
          (NP (NNS services))))
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP (VBP offer)))))
    (. .)))

nummod(reason-3, One-1)
amod(reason-3, important-2)
nsubj(variety-15, reason-3)
case(popularity-6, for-4)
det(popularity-6, the-5)
nmod:for(reason-3, popularity-6)
case(stores-9, of-7)
compound(stores-9, convenience-8)
nmod:of(popularity-6, stores-9)
case(Taiwan-11, in-10)
nmod:in(stores-9, Taiwan-11)
cop(variety-15, is-12)
det(variety-15, the-13)
amod(variety-15, wide-14)
root(ROOT-0, variety-15)
case(services-17, of-16)
nmod:of(variety-15, services-17)
mark(offer-20, that-18)
nsubj(offer-20, they-19)
ccomp(variety-15, offer-20)

(ROOT
  (S
    (NP (DT These) (NNS services))
    (VP (VBP allow)
      (S
        (NP (NNS people))
        (VP (TO to)
          (VP (VB save)
            (NP (NN time))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBP run)
                  (NP (NNS errands))))))))
      (, ,)
      (SBAR (IN since)
        (S
          (NP (PRP they))
          (VP (MD can)
            (VP (VB take)
              (NP
                (NP (NN care))
                (PP (IN of)
                  (NP (PRP$ their) (JJ daily) (NNS needs))))
              (PP (IN in)
                (NP (CD one) (JJ convenient) (NN place))))))))
    (. .)))

det(services-2, These-1)
nsubj(allow-3, services-2)
root(ROOT-0, allow-3)
dobj(allow-3, people-4)
nsubj(save-6, people-4)
mark(save-6, to-5)
xcomp(allow-3, save-6)
dobj(save-6, time-7)
advmod(run-10, when-8)
nsubj(run-10, they-9)
advcl(save-6, run-10)
dobj(run-10, errands-11)
mark(take-16, since-13)
nsubj(take-16, they-14)
aux(take-16, can-15)
advcl(allow-3, take-16)
dobj(take-16, care-17)
case(needs-21, of-18)
nmod:poss(needs-21, their-19)
amod(needs-21, daily-20)
nmod:of(care-17, needs-21)
case(place-25, in-22)
nummod(place-25, one-23)
amod(place-25, convenient-24)
nmod:in(take-16, place-25)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN addition))
        (PP (TO to)
          (S
            (VP (VBG buying)
              (NP
                (NP (JJ different) (NNS types))
                (PP (IN of)
                  (NP (NN food)
                    (CC and)
                    (NNS drinks)))))))))
    (, ,)
    (NP (NNS people))
    (VP (MD can)
      (VP (VB pay)
        (NP
          (NP (PRP$ their) (NN phone) (NNS bills))
          (, ,)
          (NP (NN parking) (NNS fees))
          (, ,)
          (CC and)
          (NP (RB even) (NN traffic) (NNS fines)))))
    (. .)))

mark(buying-4, In-1)
mwe(In-1, addition-2)
mwe(In-1, to-3)
acl(pay-14, buying-4)
amod(types-6, different-5)
dobj(buying-4, types-6)
case(food-8, of-7)
nmod:of(types-6, food-8)
cc(food-8, and-9)
nmod:of(types-6, drinks-10)
conj:and(food-8, drinks-10)
nsubj(pay-14, people-12)
aux(pay-14, can-13)
root(ROOT-0, pay-14)
nmod:poss(bills-17, their-15)
compound(bills-17, phone-16)
dobj(pay-14, bills-17)
compound(fees-20, parking-19)
dobj(pay-14, fees-20)
conj:and(bills-17, fees-20)
cc(bills-17, and-22)
advmod(fines-25, even-23)
compound(fines-25, traffic-24)
dobj(pay-14, fines-25)
conj:and(bills-17, fines-25)

(ROOT
  (S
    (ADVP
      (NP (NNS Whats))
      (RBR more))
    (, ,)
    (NP (PRP they))
    (VP (MD can)
      (VP (VB withdraw)
        (NP (NN money))
        (PP (IN from)
          (NP
            (NP (DT an) (NNP ATM))
            (PP (IN in)
              (NP (DT these) (NNS stores)))))
        (ADVP (RB as) (RB well))))
    (. .)))

nmod:npmod(more-2, Whats-1)
advmod(withdraw-6, more-2)
nsubj(withdraw-6, they-4)
aux(withdraw-6, can-5)
root(ROOT-0, withdraw-6)
dobj(withdraw-6, money-7)
case(ATM-10, from-8)
det(ATM-10, an-9)
nmod:from(withdraw-6, ATM-10)
case(stores-13, in-11)
det(stores-13, these-12)
nmod:in(ATM-10, stores-13)
advmod(withdraw-6, as-14)
mwe(as-14, well-15)

(ROOT
  (S
    (PP (IN With)
      (NP (DT a) (NN hand) (NN pay-on-pickup) (NN service)))
    (, ,)
    (NP (NNS people))
    (VP (MD can)
      (VP
        (VP (VB shop)
          (PP (IN on)
            (NP (DT the) (NN Internet))))
        (CC and)
        (VP
          (ADVP (RB then))
          (VB collect)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP they))
              (VP (VBP have)
                (VP (VBN purchased)
                  (PP (IN at)
                    (NP (DT a) (NN convenience) (NN store)))
                  (ADVP (RB nearby)))))))))
    (. .)))

case(service-5, With-1)
det(service-5, a-2)
compound(service-5, hand-3)
compound(service-5, pay-on-pickup-4)
nmod:with(shop-9, service-5)
nsubj(shop-9, people-7)
nsubj(collect-15, people-7)
aux(shop-9, can-8)
root(ROOT-0, shop-9)
case(Internet-12, on-10)
det(Internet-12, the-11)
nmod:on(shop-9, Internet-12)
cc(shop-9, and-13)
advmod(collect-15, then-14)
conj:and(shop-9, collect-15)
dobj(purchased-19, what-16)
nsubj(purchased-19, they-17)
aux(purchased-19, have-18)
ccomp(collect-15, purchased-19)
case(store-23, at-20)
det(store-23, a-21)
compound(store-23, convenience-22)
nmod:at(purchased-19, store-23)
advmod(purchased-19, nearby-24)

(ROOT
  (S
    (ADVP (RB Also))
    (, ,)
    (NP (NNS people))
    (VP (VBP are)
      (ADJP (JJ able)
        (PP (TO to)
          (NP
            (NP (JJ pre-order) (JJ many) (JJ different) (NNS items))
            (, ,)
            (VP (VBG ranging)
              (PP (IN from)
                (NP (JJ local) (NN cuisine)))
              (PP (TO to)
                (NP (NN concert) (NNS tickets))))))))
    (. .)))

advmod(able-5, Also-1)
nsubj(able-5, people-3)
cop(able-5, are-4)
root(ROOT-0, able-5)
case(items-10, to-6)
amod(items-10, pre-order-7)
amod(items-10, many-8)
amod(items-10, different-9)
nmod:to(able-5, items-10)
acl(items-10, ranging-12)
case(cuisine-15, from-13)
amod(cuisine-15, local-14)
nmod:from(ranging-12, cuisine-15)
case(tickets-18, to-16)
compound(tickets-18, concert-17)
nmod:to(ranging-12, tickets-18)

(ROOT
  (S
    (NP
      (NP (JJS Best))
      (PP (IN of)
        (NP
          (NP (DT all))
          (, ,)
          (NP
            (NP (DT all))
            (PP (IN of)
              (NP (DT these) (NNS services)))))))
    (VP (VBP are)
      (ADJP (JJ available)
        (PP (IN at)
          (NP (DT all) (NNS times))))
      (SBAR (IN because)
        (S
          (NP (NN convenience) (NNS stores))
          (VP (VBP are)
            (NP
              (NP (JJ open) (JJ twenty-four) (NNS hours))
              (NP (DT a) (NN day)))))))
    (. .)))

nsubj(available-10, Best-1)
case(all-3, of-2)
nmod:of(Best-1, all-3)
appos(all-3, all-5)
case(services-8, of-6)
det(services-8, these-7)
nmod:of(all-5, services-8)
cop(available-10, are-9)
root(ROOT-0, available-10)
case(times-13, at-11)
det(times-13, all-12)
nmod:at(available-10, times-13)
mark(hours-20, because-14)
compound(stores-16, convenience-15)
nsubj(hours-20, stores-16)
cop(hours-20, are-17)
amod(hours-20, open-18)
amod(hours-20, twenty-four-19)
advcl(available-10, hours-20)
det(day-22, a-21)
dep(hours-20, day-22)

(ROOT
  (S
    (PP (IN Without)
      (NP (DT a) (NN doubt)))
    (, ,)
    (NP
      (NP (DT the) (NNS services))
      (SBAR (IN that)
        (S
          (NP (NN convenience) (NNS stores))
          (VP (VBP offer)))))
    (VP (VBP have)
      (VP (VBN changed)
        (NP (JJ peoples) (NN shopping) (NNS habits))))
    (. .)))

case(doubt-3, Without-1)
det(doubt-3, a-2)
nmod:without(changed-12, doubt-3)
det(services-6, the-5)
nsubj(changed-12, services-6)
mark(offer-10, that-7)
compound(stores-9, convenience-8)
nsubj(offer-10, stores-9)
dep(services-6, offer-10)
aux(changed-12, have-11)
root(ROOT-0, changed-12)
amod(habits-15, peoples-13)
compound(habits-15, shopping-14)
dobj(changed-12, habits-15)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (JJ several) (JJ clever) (NN marketing) (NNS strategies))
        (PP (IN behind)
          (NP (DT these) (NNS services)))))
    (. .)))

case(fact-2, In-1)
nmod:in(are-5, fact-2)
expl(are-5, there-4)
root(ROOT-0, are-5)
amod(strategies-9, several-6)
amod(strategies-9, clever-7)
compound(strategies-9, marketing-8)
nsubj(are-5, strategies-9)
case(services-12, behind-10)
det(services-12, these-11)
nmod:behind(strategies-9, services-12)

(ROOT
  (S
    (ADVP (RB First))
    (, ,)
    (NP
      (NP (DT the) (NN marketing) (NNS experts))
      (PP (IN of)
        (NP (JJS most) (NN convenience-store) (NNS chains))))
    (VP (VBP understand)
      (SBAR (IN that)
        (S
          (SBAR
            (X (DT the) (JJR more))
            (S
              (ADVP (RB often))
              (NP (NNS people))
              (VP (VBP go)
                (PP (TO to)
                  (NP (PRP$ their) (NNS stores))))))
          (, ,)
          (X (DT the)
            (ADJP (RBR more) (JJ likely)))
          (NP (PRP they))
          (VP (VBP are)
            (S
              (VP (TO to)
                (VP (VB buy)
                  (NP (NN something)))))))))
    (. .)))

advmod(understand-10, First-1)
det(experts-5, the-3)
compound(experts-5, marketing-4)
nsubj(understand-10, experts-5)
case(chains-9, of-6)
amod(chains-9, most-7)
compound(chains-9, convenience-store-8)
nmod:of(experts-5, chains-9)
root(ROOT-0, understand-10)
mark(are-25, that-11)
det(more-13, the-12)
dep(go-16, more-13)
advmod(go-16, often-14)
nsubj(go-16, people-15)
advcl(are-25, go-16)
case(stores-19, to-17)
nmod:poss(stores-19, their-18)
nmod:to(go-16, stores-19)
det(likely-23, the-21)
advmod(likely-23, more-22)
dep(are-25, likely-23)
nsubj(are-25, they-24)
nsubj(buy-27, they-24)
ccomp(understand-10, are-25)
mark(buy-27, to-26)
xcomp(are-25, buy-27)
dobj(buy-27, something-28)

(ROOT
  (S
    (NP (NNP Offering) (JJ many) (NNS services))
    (, ,)
    (PP (VBG according)
      (PP (TO to)
        (NP (DT these) (NN marketing) (NNS experts))))
    (, ,)
    (VP (VBZ creates)
      (NP (JJR more) (NNS opportunities))
      (PP (IN for)
        (NP (NN convenience) (NNS stores)))
      (S
        (VP (TO to)
          (VP (VB attract)
            (NP (NNS customers))))))
    (. .)))

compound(services-3, Offering-1)
amod(services-3, many-2)
nsubj(creates-11, services-3)
case(experts-9, according-5)
mwe(according-5, to-6)
det(experts-9, these-7)
compound(experts-9, marketing-8)
nmod:according_to(creates-11, experts-9)
root(ROOT-0, creates-11)
amod(opportunities-13, more-12)
dobj(creates-11, opportunities-13)
case(stores-16, for-14)
compound(stores-16, convenience-15)
nmod:for(creates-11, stores-16)
mark(attract-18, to-17)
advcl(creates-11, attract-18)
dobj(attract-18, customers-19)

(ROOT
  (S
    (PP (IN As)
      (NP
        (NP (DT a) (NN result))
        (, ,)
        (SBAR
          (WHNP (WDT whatever))
          (S
            (NP (NNS customers) (NNS purposes))
            (VP (MD may)
              (VP (VB be)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP they))
                    (VP (VBP walk)
                      (PP (IN into)
                        (NP (DT a) (NN store))))))))))))
    (, ,)
    (NP (PRP they))
    (VP (MD will)
      (ADVP (RB probably))
      (VP (VB end)
        (PRT (RP up))
        (NP (NN buying) (NN something))))
    (. .)))

case(result-3, As-1)
det(result-3, a-2)
nmod:as(end-20, result-3)
dobj(be-9, whatever-5)
compound(purposes-7, customers-6)
nsubj(be-9, purposes-7)
aux(be-9, may-8)
acl:relcl(result-3, be-9)
advmod(walk-12, when-10)
nsubj(walk-12, they-11)
advcl(be-9, walk-12)
case(store-15, into-13)
det(store-15, a-14)
nmod:into(walk-12, store-15)
nsubj(end-20, they-17)
aux(end-20, will-18)
advmod(end-20, probably-19)
root(ROOT-0, end-20)
compound:prt(end-20, up-21)
compound(something-23, buying-22)
dobj(end-20, something-23)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP (DT a) (JJ freelance) (NN designer))
    (VP (MD might)
      (VP (VB stop)
        (PP (IN by)
          (NP (DT a) (NN convenience) (NN store)))
        (S
          (VP (TO to)
            (VP
              (VP (VB make)
                (NP (DT some) (NNS copies)))
              (CC and)
              (ADVP (RB then))
              (VP (VB get)
                (NP (DT a) (NN sandwich))
                (PP (IN before)
                  (S
                    (VP (VBG walking)
                      (PRT (RP up))
                      (PP (TO to)
                        (NP (DT the) (NN counter))))))))))))
    (. .)))

case(example-2, For-1)
nmod:for(stop-8, example-2)
det(designer-6, a-4)
amod(designer-6, freelance-5)
nsubj(stop-8, designer-6)
nsubj(make-14, designer-6)
nsubj(get-19, designer-6)
aux(stop-8, might-7)
root(ROOT-0, stop-8)
case(store-12, by-9)
det(store-12, a-10)
compound(store-12, convenience-11)
nmod:by(stop-8, store-12)
mark(make-14, to-13)
xcomp(stop-8, make-14)
det(copies-16, some-15)
dobj(make-14, copies-16)
cc(make-14, and-17)
advmod(get-19, then-18)
xcomp(stop-8, get-19)
conj:and(make-14, get-19)
det(sandwich-21, a-20)
dobj(get-19, sandwich-21)
mark(walking-23, before-22)
advcl(get-19, walking-23)
compound:prt(walking-23, up-24)
case(counter-27, to-25)
det(counter-27, the-26)
nmod:to(walking-23, counter-27)

(ROOT
  (S
    (ADVP (LS Second))
    (, ,)
    (NP (NNS people))
    (VP (VBP get)
      (NP (DT the) (NN impression))
      (PP (IN from)
        (NP (NNS advertisements)))
      (SBAR (IN that)
        (S
          (NP (NN convenience) (NNS stores))
          (VP (MD can)
            (VP (VB take)
              (NP
                (NP (NN care))
                (PP (IN of)
                  (NP (PRP$ their) (JJ daily) (NNS needs)))))))))
    (. .)))

advmod(get-4, Second-1)
nsubj(get-4, people-3)
root(ROOT-0, get-4)
det(impression-6, the-5)
dobj(get-4, impression-6)
case(advertisements-8, from-7)
nmod:from(get-4, advertisements-8)
mark(take-13, that-9)
compound(stores-11, convenience-10)
nsubj(take-13, stores-11)
aux(take-13, can-12)
ccomp(get-4, take-13)
dobj(take-13, care-14)
case(needs-18, of-15)
nmod:poss(needs-18, their-16)
amod(needs-18, daily-17)
nmod:of(care-14, needs-18)

(ROOT
  (S
    (NP (JJ Many) (NNS people))
    (, ,)
    (ADVP (RB thus))
    (, ,)
    (VP (VBP tend)
      (S
        (VP (TO to)
          (VP (VB consider)
            (S
              (NP (NN convenience) (NNS stores))
              (ADJP (JJ reliable))))))
      (, ,)
      (SBAR (RB particularly) (IN because)
        (S
          (NP (DT these) (NNS stores))
          (VP (VBP provide)
            (NP
              (NP (JJ various) (NNS kinds))
              (PP (IN of)
                (NP (NNS supplies))))))))
    (. .)))

amod(people-2, Many-1)
nsubj(tend-6, people-2)
nsubj(consider-8, people-2)
advmod(tend-6, thus-4)
root(ROOT-0, tend-6)
mark(consider-8, to-7)
xcomp(tend-6, consider-8)
compound(stores-10, convenience-9)
nsubj(reliable-11, stores-10)
xcomp(consider-8, reliable-11)
advmod(provide-17, particularly-13)
mark(provide-17, because-14)
det(stores-16, these-15)
nsubj(provide-17, stores-16)
advcl(tend-6, provide-17)
amod(kinds-19, various-18)
dobj(provide-17, kinds-19)
case(supplies-21, of-20)
nmod:of(kinds-19, supplies-21)

(ROOT
  (S
    (SBAR
      (WHNP (WDT Whatever))
      (S
        (NP (NNS people))
        (VP (MD may)
          (VP (VB need)))))
    (, ,)
    (NP (NN convenience) (NNS stores))
    (VP (VBP have)
      (NP
        (NP (DT these) (NNS items))
        (VP (VBN stacked)
          (PP (IN on)
            (NP (PRP$ their) (NNS shelves)))
          (ADVP (RB already)))))
    (. .)))

dobj(need-4, Whatever-1)
nsubj(need-4, people-2)
aux(need-4, may-3)
advcl(have-8, need-4)
compound(stores-7, convenience-6)
nsubj(have-8, stores-7)
root(ROOT-0, have-8)
det(items-10, these-9)
dobj(have-8, items-10)
acl(items-10, stacked-11)
case(shelves-14, on-12)
nmod:poss(shelves-14, their-13)
nmod:on(stacked-11, shelves-14)
advmod(stacked-11, already-15)

(ROOT
  (S
    (ADVP (RB Finally))
    (, ,)
    (NP (NN convenience) (NNS stores))
    (VP (VBP combine)
      (NP
        (NP (JJ regular) (NNS services))
        (PP (IN with)
          (NP (JJ special) (NNS sales) (NNS promotions))))
      (PP
        (ADVP (RB once))
        (IN in)
        (NP (DT a) (NN while))))
    (. .)))

advmod(combine-5, Finally-1)
compound(stores-4, convenience-3)
nsubj(combine-5, stores-4)
root(ROOT-0, combine-5)
amod(services-7, regular-6)
dobj(combine-5, services-7)
case(promotions-11, with-8)
amod(promotions-11, special-9)
compound(promotions-11, sales-10)
nmod:with(services-7, promotions-11)
advmod(while-15, once-12)
case(while-15, in-13)
det(while-15, a-14)
nmod:in(combine-5, while-15)

(ROOT
  (S
    (PP (IN Because)
      (PP (IN of)
        (NP (DT this))))
    (, ,)
    (NP (DT some) (NNS people))
    (VP (VBP are)
      (VP (VBN tempted)
        (CC and)
        (VBN motivated)
        (S
          (VP (TO to)
            (VP
              (VP (VB pop)
                (PP (IN into)
                  (NP (NN convenience) (NNS stores))))
              (CC and)
              (VP (VB purchase)
                (NP (JJR more) (NNS products))))))))
    (. .)))

case(this-3, Because-1)
case(this-3, of-2)
nmod:of(tempted-8, this-3)
det(people-6, some-5)
nsubjpass(tempted-8, people-6)
nsubjpass(motivated-10, people-6)
nsubj(pop-12, people-6)
nsubj(purchase-17, people-6)
auxpass(tempted-8, are-7)
root(ROOT-0, tempted-8)
cc(tempted-8, and-9)
conj:and(tempted-8, motivated-10)
mark(pop-12, to-11)
xcomp(tempted-8, pop-12)
case(stores-15, into-13)
compound(stores-15, convenience-14)
nmod:into(pop-12, stores-15)
cc(pop-12, and-16)
xcomp(tempted-8, purchase-17)
conj:and(pop-12, purchase-17)
amod(products-19, more-18)
dobj(purchase-17, products-19)

(ROOT
  (S
    (NP (DT These) (NNS strategies))
    (VP
      (VP (VB stimulate)
        (NP (NN consumption)))
      (CC and)
      (VP (VB have)
        (VP (VBN become)
          (NP
            (NP (JJ essential) (NNS ingredients))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ huge) (NN success))
                (PP (IN of)
                  (NP (NN convenience) (NNS stores))))))
          (PP (IN in)
            (NP (NNP Taiwan))))))
    (. .)))

det(strategies-2, These-1)
nsubj(stimulate-3, strategies-2)
nsubj(become-7, strategies-2)
root(ROOT-0, stimulate-3)
dobj(stimulate-3, consumption-4)
cc(stimulate-3, and-5)
aux(become-7, have-6)
conj:and(stimulate-3, become-7)
amod(ingredients-9, essential-8)
xcomp(become-7, ingredients-9)
case(success-13, of-10)
det(success-13, the-11)
amod(success-13, huge-12)
nmod:of(ingredients-9, success-13)
case(stores-16, of-14)
compound(stores-16, convenience-15)
nmod:of(success-13, stores-16)
case(Taiwan-18, in-17)
nmod:in(become-7, Taiwan-18)

(ROOT
  (S
    (ADVP (RB Apparently))
    (, ,)
    (NP
      (NP (DT the) (JJ ever-growing) (NN convenience-store) (NN industry))
      (PP (IN in)
        (NP (NNP Taiwan))))
    (VP (VBZ has)
      (VP (VBN been)
        (VP (VBN built)
          (PP (IN upon)
            (NP
              (NP (DT a) (JJ win-win) (NN arrangement))
              (PP (IN for)
                (NP
                  (NP (PDT both) (DT the) (NNS stores))
                  (CC and)
                  (NP (PRP$ their) (NNS customers)))))))))
    (. .)))

advmod(built-11, Apparently-1)
det(industry-6, the-3)
amod(industry-6, ever-growing-4)
compound(industry-6, convenience-store-5)
nsubjpass(built-11, industry-6)
case(Taiwan-8, in-7)
nmod:in(industry-6, Taiwan-8)
aux(built-11, has-9)
auxpass(built-11, been-10)
root(ROOT-0, built-11)
case(arrangement-15, upon-12)
det(arrangement-15, a-13)
amod(arrangement-15, win-win-14)
nmod:upon(built-11, arrangement-15)
case(stores-19, for-16)
det:predet(stores-19, both-17)
det(stores-19, the-18)
nmod:for(arrangement-15, stores-19)
cc(stores-19, and-20)
nmod:poss(customers-22, their-21)
nmod:for(arrangement-15, customers-22)
conj:and(stores-19, customers-22)

(ROOT
  (S
    (NP (JJ Convenience) (NNS stores))
    (VP (VBP help)
      (S
        (NP (NNS people))
        (VP
          (VP (VB get)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP they))
                (VP (VBP want)))))
          (CC and)
          (VP (VB save)
            (NP (PRP$ their) (JJ precious) (NN time))))))
    (. .)))

amod(stores-2, Convenience-1)
nsubj(help-3, stores-2)
root(ROOT-0, help-3)
nsubj(get-5, people-4)
nsubj(save-10, people-4)
ccomp(help-3, get-5)
dobj(want-8, what-6)
nsubj(want-8, they-7)
ccomp(get-5, want-8)
cc(get-5, and-9)
ccomp(help-3, save-10)
conj:and(get-5, save-10)
nmod:poss(time-13, their-11)
amod(time-13, precious-12)
dobj(save-10, time-13)

(ROOT
  (S
    (PP (IN In)
      (NP (NN return)))
    (, ,)
    (S
      (NP (DT these) (NNS customers))
      (ADVP (RB usually))
      (VP (VB purchase)
        (NP (JJR more) (NNS products))
        (PP (IN from)
          (NP (DT these) (NNS stores)))))
    (, ,)
    (CC and)
    (S
      (NP (DT these) (NNS stores))
      (, ,)
      (ADVP (RB consequently))
      (, ,)
      (VP (VBP earn)
        (NP (JJR more) (NNS profits))))
    (. .)))

case(return-2, In-1)
nmod:in(purchase-7, return-2)
det(customers-5, these-4)
nsubj(purchase-7, customers-5)
advmod(purchase-7, usually-6)
root(ROOT-0, purchase-7)
amod(products-9, more-8)
dobj(purchase-7, products-9)
case(stores-12, from-10)
det(stores-12, these-11)
nmod:from(purchase-7, stores-12)
cc(purchase-7, and-14)
det(stores-16, these-15)
nsubj(earn-20, stores-16)
advmod(earn-20, consequently-18)
conj:and(purchase-7, earn-20)
amod(profits-22, more-21)
dobj(earn-20, profits-22)

(ROOT
  (S
    (NP (DT This)
      (ADJP (RB mutually) (JJ beneficial))
      (NN relationship))
    (ADVP (RB certainly))
    (VP (VBZ goes)
      (NP (DT a) (JJ long) (NN way))
      (PP (IN toward)
        (S
          (VP (VBG explaining)
            (SBAR
              (WHADVP (WRB why))
              (S
                (NP
                  (NP (NN convenience) (NNS stores))
                  (PP (IN in)
                    (NP (NNP Taiwan))))
                (VP (VBP are)
                  (ADVP (RB always))
                  (ADJP
                    (ADJP (JJ open))
                    (CC and)
                    (ADJP (RB always) (JJ convenient))))))))))
    (. .)))

det(relationship-4, This-1)
advmod(beneficial-3, mutually-2)
amod(relationship-4, beneficial-3)
nsubj(goes-6, relationship-4)
advmod(goes-6, certainly-5)
root(ROOT-0, goes-6)
det(way-9, a-7)
amod(way-9, long-8)
dobj(goes-6, way-9)
mark(explaining-11, toward-10)
advcl(goes-6, explaining-11)
advmod(open-19, why-12)
compound(stores-14, convenience-13)
nsubj(open-19, stores-14)
nsubj(convenient-22, stores-14)
case(Taiwan-16, in-15)
nmod:in(stores-14, Taiwan-16)
cop(open-19, are-17)
advmod(open-19, always-18)
advcl(explaining-11, open-19)
cc(open-19, and-20)
advmod(convenient-22, always-21)
advcl(explaining-11, convenient-22)
conj:and(open-19, convenient-22)

(ROOT
  (NP (NNP XBy) (NNP Theodore) (NNP Pigott)))

compound(Pigott-3, XBy-1)
compound(Pigott-3, Theodore-2)
root(ROOT-0, Pigott-3)

