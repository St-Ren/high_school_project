(ROOT
  (NP (NNP Yummys) (NNP Blog) (. .)))

compound(Blog-2, Yummys-1)
root(ROOT-0, Blog-2)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ different) (NN face))
      (PP (IN of)
        (NP (NNP Taiwan))))
    (VP (VBZ comes)
      (ADJP (JJ alive)
        (PP (IN with)
          (NP
            (NP (DT the) (NN night))
            (VP (VBG falling)
              (PP (IN over)
                (NP
                  (NP (NNS towns)
                    (CC and)
                    (NNS cities))
                  (PP (IN of)
                    (NP (NNP Taiwan))))))))))
    (. .)))

det(face-3, A-1)
amod(face-3, different-2)
nsubj(comes-6, face-3)
case(Taiwan-5, of-4)
nmod:of(face-3, Taiwan-5)
root(ROOT-0, comes-6)
xcomp(comes-6, alive-7)
case(night-10, with-8)
det(night-10, the-9)
nmod:with(alive-7, night-10)
acl(night-10, falling-11)
case(towns-13, over-12)
nmod:over(falling-11, towns-13)
cc(towns-13, and-14)
nmod:over(falling-11, cities-15)
conj:and(towns-13, cities-15)
case(Taiwan-17, of-16)
nmod:of(towns-13, Taiwan-17)

(ROOT
  (S
    (NP
      (NP (NNP Street) (NNP stalls))
      (, ,)
      (NP (NN sidewalk) (NNS vendors))
      (CC and)
      (NP (JJ small) (NNS canteens)))
    (VP (VBP create)
      (NP
        (NP (DT a) (JJ special) (NN scene))
        (PP (IN of)
          (NP (NNP Taiwans) (NN night) (NN life)))))
    (. .)))

compound(stalls-2, Street-1)
nsubj(create-9, stalls-2)
compound(vendors-5, sidewalk-4)
conj:and(stalls-2, vendors-5)
nsubj(create-9, vendors-5)
cc(stalls-2, and-6)
amod(canteens-8, small-7)
conj:and(stalls-2, canteens-8)
nsubj(create-9, canteens-8)
root(ROOT-0, create-9)
det(scene-12, a-10)
amod(scene-12, special-11)
dobj(create-9, scene-12)
case(life-16, of-13)
compound(life-16, Taiwans-14)
compound(life-16, night-15)
nmod:of(scene-12, life-16)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (NN trip))
      (PP (TO to)
        (NP (NNP Taiwan))))
    (VP (MD will)
      (ADVP (RB never))
      (VP (VB be)
        (ADJP (JJ complete)
          (PP (IN without)
            (S
              (VP (VBG paying)
                (NP (DT a) (NN visit))
                (PP (TO to)
                  (NP (NN night) (NNS markets)))))))))
    (. .)))

nmod:poss(trip-2, Your-1)
nsubj(complete-8, trip-2)
case(Taiwan-4, to-3)
nmod:to(trip-2, Taiwan-4)
aux(complete-8, will-5)
neg(complete-8, never-6)
cop(complete-8, be-7)
root(ROOT-0, complete-8)
mark(paying-10, without-9)
advcl(complete-8, paying-10)
det(visit-12, a-11)
dobj(paying-10, visit-12)
case(markets-15, to-13)
compound(markets-15, night-14)
nmod:to(paying-10, markets-15)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP offer)
      (S
        (NP (PRP you))
        (NP (DT a) (JJ good) (NN chance)
          (S
            (VP
              (VP (TO to)
                (VP (VB shop)
                  (PP (IN for)
                    (NP (NNS bargains)))))
              (CONJP (RB as) (RB well) (IN as))
              (VP (TO to)
                (VP (VB feel)
                  (NP
                    (NP (DT the) (NN pulse))
                    (PP (IN of)
                      (NP (NNP Taiwans) (NN night) (NN life)))))))))))
    (. .)))

nsubj(offer-2, They-1)
root(ROOT-0, offer-2)
nsubj(chance-6, you-3)
det(chance-6, a-4)
amod(chance-6, good-5)
xcomp(offer-2, chance-6)
mark(shop-8, to-7)
dep(chance-6, shop-8)
case(bargains-10, for-9)
nmod:for(shop-8, bargains-10)
cc(shop-8, as-11)
mwe(as-11, well-12)
mwe(as-11, as-13)
mark(feel-15, to-14)
dep(chance-6, feel-15)
conj:and(shop-8, feel-15)
det(pulse-17, the-16)
dobj(feel-15, pulse-17)
case(life-21, of-18)
compound(life-21, Taiwans-19)
compound(life-21, night-20)
nmod:of(pulse-17, life-21)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (ADVP (RB simply))
      (VP (VB enjoy)
        (S
          (NP (PRP yourself))
          (VP
            (VP (VBG shopping))
            (, ,)
            (VP (VBG eating))
            (, ,)
            (CC and)
            (VP (VBG strolling)
              (PP (IN with)
                (NP (PRP$ your) (NNS friends)))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN cool))
                  (PP (IN of)
                    (NP (DT the) (NN evening))))))))))
    (. .)))

nsubj(enjoy-4, You-1)
aux(enjoy-4, can-2)
advmod(enjoy-4, simply-3)
root(ROOT-0, enjoy-4)
nsubj(shopping-6, yourself-5)
nsubj(eating-8, yourself-5)
nsubj(strolling-11, yourself-5)
ccomp(enjoy-4, shopping-6)
ccomp(enjoy-4, eating-8)
conj:and(shopping-6, eating-8)
cc(shopping-6, and-10)
ccomp(enjoy-4, strolling-11)
conj:and(shopping-6, strolling-11)
case(friends-14, with-12)
nmod:poss(friends-14, your-13)
nmod:with(strolling-11, friends-14)
case(cool-17, in-15)
det(cool-17, the-16)
nmod:in(strolling-11, cool-17)
case(evening-20, of-18)
det(evening-20, the-19)
nmod:of(cool-17, evening-20)

(ROOT
  (S
    (NP (DT Every) (NN night) (NN market))
    (VP (VBZ has)
      (NP (PRP$ its) (JJ own) (NNS specialties)))
    (. .)))

det(market-3, Every-1)
compound(market-3, night-2)
nsubj(has-4, market-3)
root(ROOT-0, has-4)
nmod:poss(specialties-7, its-5)
amod(specialties-7, own-6)
dobj(has-4, specialties-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP plan)
          (S
            (VP (TO to)
              (VP (VB spend)
                (NP (RB only) (DT a) (JJ short) (NN time))
                (PP (IN in)
                  (NP (NNP Taiwan)))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP suggest)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP begin)
            (PP (IN with)
              (NP
                (NP (JJ Taiwanese) (NN cuisine))
                (PP (IN in)
                  (NP (DT the) (NNP Shihlin) (NNP Night) (NNP Market)))))
            (PP (IN in)
              (NP (NNP Taipei)))))))
    (. .)))

mark(plan-3, If-1)
nsubj(plan-3, you-2)
nsubj(spend-5, you-2)
advcl(suggest-14, plan-3)
mark(spend-5, to-4)
xcomp(plan-3, spend-5)
advmod(time-9, only-6)
det(time-9, a-7)
amod(time-9, short-8)
dobj(spend-5, time-9)
case(Taiwan-11, in-10)
nmod:in(spend-5, Taiwan-11)
nsubj(suggest-14, I-13)
root(ROOT-0, suggest-14)
mark(begin-17, that-15)
nsubj(begin-17, you-16)
ccomp(suggest-14, begin-17)
case(cuisine-20, with-18)
amod(cuisine-20, Taiwanese-19)
nmod:with(begin-17, cuisine-20)
case(Market-25, in-21)
det(Market-25, the-22)
compound(Market-25, Shihlin-23)
compound(Market-25, Night-24)
nmod:in(cuisine-20, Market-25)
case(Taipei-27, in-26)
nmod:in(begin-17, Taipei-27)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (NP (PRP$ my) (JJ favorite) (NN night) (NN market))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD can)
        (VP (VB find)
          (NP (DT the) (NNS islands))
          (ADVP
            (NP (JJ best-known) (NNS snacks))
            (RB there)))))
    (. .)))

nsubj(market-6, It-1)
cop(market-6, is-2)
nmod:poss(market-6, my-3)
amod(market-6, favorite-4)
compound(market-6, night-5)
root(ROOT-0, market-6)
cc(market-6, and-7)
nsubj(find-10, you-8)
aux(find-10, can-9)
conj:and(market-6, find-10)
det(islands-12, the-11)
dobj(find-10, islands-12)
amod(snacks-14, best-known-13)
nmod:npmod(there-15, snacks-14)
advmod(find-10, there-15)

(ROOT
  (S
    (NP (RB Now))
    (ADVP (RB just))
    (VP (VBP see)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NNP Ive))
          (VP (VBD got)
            (PP (IN for)
              (NP (PRP you)))))))
    (. .)))

nsubj(see-3, Now-1)
advmod(see-3, just-2)
root(ROOT-0, see-3)
dobj(got-6, what-4)
nsubj(got-6, Ive-5)
ccomp(see-3, got-6)
case(you-8, for-7)
nmod:for(got-6, you-8)

(ROOT
  (S
    (NP (NNP Bun))
    (PP (IN in)
      (NP (DT a) (NNP Bun)))
    (PRN (-LRB- -LRB-)
      (NP (NNP Da) (NNP Bing) (NNP Bao) (NNP Xiao) (NNP Bing))
      (-RRB- -RRB-))
    (NP
      (NP (NNP Da) (NNP Bing) (NNP Bao) (NNP Xiao) (NNP Bing))
      (, ,)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT the)
            (ADJP (RBS most) (JJ famous))
            (NNS snacks))))
      (, ,))
    (VP (VBZ is)
      (ADVP (RB surely))
      (NP
        (NP (NN something))
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD cant)
              (VP (VB miss)
                (PP (IN at)
                  (NP (DT the) (NNP Shihlin) (NNP Night) (NNP Market)))))))))
    (. .)))

nsubj(something-27, Bun-1)
case(Bun-4, in-2)
det(Bun-4, a-3)
nmod:in(something-27, Bun-4)
compound(Bing-10, Da-6)
compound(Bing-10, Bing-7)
compound(Bing-10, Bao-8)
compound(Bing-10, Xiao-9)
dep(something-27, Bing-10)
compound(Bing-16, Da-12)
compound(Bing-16, Bing-13)
compound(Bing-16, Bao-14)
compound(Bing-16, Xiao-15)
nsubj(something-27, Bing-16)
appos(Bing-16, one-18)
case(snacks-23, of-19)
det(snacks-23, the-20)
advmod(famous-22, most-21)
amod(snacks-23, famous-22)
nmod:of(one-18, snacks-23)
cop(something-27, is-25)
advmod(something-27, surely-26)
root(ROOT-0, something-27)
nsubj(miss-30, you-28)
aux(miss-30, cant-29)
acl:relcl(something-27, miss-30)
case(Market-35, at-31)
det(Market-35, the-32)
compound(Market-35, Shihlin-33)
compound(Market-35, Night-34)
nmod:at(miss-30, Market-35)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Da))
        (VP (VBG bing)
          (PP (IN in)
            (NP (NNP Chinese)))))
      (VP (VBZ means)
        (NP (DT a) (JJR bigger) (NN bun))))
    (, ,)
    (CC and)
    (S
      (NP (NN xiao) (NN bing))
      (VP (VBZ means)
        (NP (DT a) (JJR smaller) (NN one))))
    (. .)))

nsubj(means-5, Da-1)
acl(Da-1, bing-2)
case(Chinese-4, in-3)
nmod:in(bing-2, Chinese-4)
root(ROOT-0, means-5)
det(bun-8, a-6)
amod(bun-8, bigger-7)
dobj(means-5, bun-8)
cc(means-5, and-10)
compound(bing-12, xiao-11)
nsubj(means-13, bing-12)
conj:and(means-5, means-13)
det(one-16, a-14)
amod(one-16, smaller-15)
dobj(means-13, one-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (VP (VBN called)
        (NP
          (NP (NN bun))
          (PP (IN in)
            (NP (DT a) (NN bun))))
        (SBAR (IN because)
          (S
            (PP (IN inside)
              (NP (DT the) (JJ big) (NN bun)))
            (NP (EX there))
            (VP (VBZ is)
              (NP (DT a) (JJ crispy) (NN xiao) (NN bing)))))))
    (. .)))

nsubjpass(called-3, It-1)
auxpass(called-3, is-2)
root(ROOT-0, called-3)
dobj(called-3, bun-4)
case(bun-7, in-5)
det(bun-7, a-6)
nmod:in(bun-4, bun-7)
mark(is-14, because-8)
case(bun-12, inside-9)
det(bun-12, the-10)
amod(bun-12, big-11)
nmod:inside(is-14, bun-12)
expl(is-14, there-13)
advcl(called-3, is-14)
det(bing-18, a-15)
amod(bing-18, crispy-16)
compound(bing-18, xiao-17)
nsubj(is-14, bing-18)

(ROOT
  (S (CC Or)
    (NP (PRP you))
    (VP (MD could)
      (VP (VB say)
        (SBAR
          (S
            (NP (DT the) (JJ small) (NN bun))
            (VP (VBZ is)
              (VP (VBN wrapped)
                (PP (IN in)
                  (NP (DT the) (NNP da) (NN bing)))))))))
    (. .)))

cc(say-4, Or-1)
nsubj(say-4, you-2)
aux(say-4, could-3)
root(ROOT-0, say-4)
det(bun-7, the-5)
amod(bun-7, small-6)
nsubjpass(wrapped-9, bun-7)
auxpass(wrapped-9, is-8)
ccomp(say-4, wrapped-9)
case(bing-13, in-10)
det(bing-13, the-11)
compound(bing-13, da-12)
nmod:in(wrapped-9, bing-13)

(ROOT
  (S
    (PP (IN With)
      (NP (DT this) (NN snack)))
    (NP (PRP you))
    (VP (MD will)
      (VP (VB have)
        (NP (JJ many) (JJ different) (NNS choices))))
    (. .)))

case(snack-3, With-1)
det(snack-3, this-2)
nmod:with(have-6, snack-3)
nsubj(have-6, you-4)
aux(have-6, will-5)
root(ROOT-0, have-6)
amod(choices-9, many-7)
amod(choices-9, different-8)
dobj(have-6, choices-9)

(ROOT
  (S
    (NP (PRP$ My) (NN favorite))
    (VP (VBZ is)
      (NP
        (NP (JJ sweet) (NNS peanuts))
        (PP (IN with)
          (NP (JJ salty) (NN curry)))))
    (. .)))

nmod:poss(favorite-2, My-1)
nsubj(peanuts-5, favorite-2)
cop(peanuts-5, is-3)
amod(peanuts-5, sweet-4)
root(ROOT-0, peanuts-5)
case(curry-8, with-6)
amod(curry-8, salty-7)
nmod:with(peanuts-5, curry-8)

(ROOT
  (S
    (NP
      (NP (RB Just) (DT the) (NN sound))
      (PP (IN of)
        (NP (DT this) (JJ crispy) (NN snack))))
    (VP (VBZ makes)
      (NP (PRP$ my) (NN mouth) (NN water)))
    (. .)))

advmod(sound-3, Just-1)
det(sound-3, the-2)
nsubj(makes-8, sound-3)
case(snack-7, of-4)
det(snack-7, this-5)
amod(snack-7, crispy-6)
nmod:of(sound-3, snack-7)
root(ROOT-0, makes-8)
nmod:poss(water-11, my-9)
compound(water-11, mouth-10)
dobj(makes-8, water-11)

(ROOT
  (S
    (NP (NNP Super-Sized) (NNP Huge) (NNP Chicken) (NNP Steak))
    (PRN (-LRB- -LRB-)
      (NP (NNP Hao) (NNP Da) (NNP Ji) (NNP Pai))
      (-RRB- -RRB-))
    (NP (NNP Hao) (NNP Da) (NNP Chicken) (NNP Steak))
    (VP (VBZ is)
      (VP (VBN said)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT the) (JJS earliest) (NN chicken) (NN steak))
                (PP (IN in)
                  (NP (NNP Taiwan)))))))))
    (. .)))

compound(Steak-4, Super-Sized-1)
compound(Steak-4, Huge-2)
compound(Steak-4, Chicken-3)
nsubjpass(said-16, Steak-4)
nsubj(steak-22, Steak-4)
compound(Pai-9, Hao-6)
compound(Pai-9, Da-7)
compound(Pai-9, Ji-8)
dep(said-16, Pai-9)
compound(Steak-14, Hao-11)
compound(Steak-14, Da-12)
compound(Steak-14, Chicken-13)
nsubjpass(said-16, Steak-14)
nsubj(steak-22, Steak-14)
auxpass(said-16, is-15)
root(ROOT-0, said-16)
mark(steak-22, to-17)
cop(steak-22, be-18)
det(steak-22, the-19)
amod(steak-22, earliest-20)
compound(steak-22, chicken-21)
xcomp(said-16, steak-22)
case(Taiwan-24, in-23)
nmod:in(steak-22, Taiwan-24)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP see)
          (NP
            (NP (DT a) (NN row))
            (PP (IN of)
              (NP (DT these) (JJ golden) (NN chicken) (NNS steaks)))))))
    (, ,)
    (NP (NN dont))
    (VP (VB be)
      (VP (VBN shocked)
        (PP (IN by)
          (NP (PRP$ their) (NN size)))))
    (. .)))

mark(see-3, If-1)
nsubj(see-3, you-2)
advcl(shocked-14, see-3)
det(row-5, a-4)
dobj(see-3, row-5)
case(steaks-10, of-6)
det(steaks-10, these-7)
amod(steaks-10, golden-8)
compound(steaks-10, chicken-9)
nmod:of(row-5, steaks-10)
nsubjpass(shocked-14, dont-12)
auxpass(shocked-14, be-13)
root(ROOT-0, shocked-14)
case(size-17, by-15)
nmod:poss(size-17, their-16)
nmod:by(shocked-14, size-17)

(ROOT
  (S (-LRB- -LRB-)
    (NP (DT Each) (NN one))
    (VP (MD might)
      (VP (VB be)
        (ADJP
          (ADJP (JJR larger))
          (SBAR (IN than)
            (S
              (NP (DT a) (NNS persons))
              (VP (VBP face)))))))
    (-RRB- -RRB-) (. .)))

det(one-3, Each-2)
nsubj(larger-6, one-3)
aux(larger-6, might-4)
cop(larger-6, be-5)
root(ROOT-0, larger-6)
mark(face-10, than-7)
det(persons-9, a-8)
nsubj(face-10, persons-9)
ccomp(larger-6, face-10)

(ROOT
  (S
    (VP (VB Have)
      (S
        (NP (DT a) (NN bite)
          (CC and)
          (NN youll))
        (VP (VB find)
          (NP
            (NP (DT the) (NN skin) (NN crispy))
            (, ,)
            (NP (DT the) (NN meat) (NN tender))
            (CC and)
            (NP (NN juicy))))))
    (. .)))

root(ROOT-0, Have-1)
det(bite-3, a-2)
nsubj(find-6, bite-3)
cc(bite-3, and-4)
conj:and(bite-3, youll-5)
nsubj(find-6, youll-5)
ccomp(Have-1, find-6)
det(crispy-9, the-7)
compound(crispy-9, skin-8)
dobj(find-6, crispy-9)
det(tender-13, the-11)
compound(tender-13, meat-12)
dobj(find-6, tender-13)
conj:and(crispy-9, tender-13)
cc(crispy-9, and-14)
dobj(find-6, juicy-15)
conj:and(crispy-9, juicy-15)

(ROOT
  (S
    (NP
      (NP (NNP Stir-Fried) (NNP Squid))
      (PRN (-LRB- -LRB-)
        (NP (NNP Sheng) (NNP Chao) (NNP Hua) (NNP Zhi))
        (-RRB- -RRB-)))
    (SBAR (IN As)
      (S
        (NP (PRP you))
        (VP (MD can)
          (VP (VB see)))))
    (, ,)
    (NP (JJ sliced) (JJ fresh) (NN squid))
    (VP (VBZ is)
      (VP (VBN stir-fried)
        (PP (IN with)
          (NP
            (NP
              (ADJP (JJ garlic) (, ,) (JJ sliced))
              (NN bamboo) (NNS shoots))
            (, ,)
            (CC and)
            (NP
              (NP (JJ amazing) (NNS spices))
              (PP (IN of)
                (NP (DT all) (NNS kinds))))))))
    (. .)))

compound(Squid-2, Stir-Fried-1)
nsubjpass(stir-fried-18, Squid-2)
compound(Zhi-7, Sheng-4)
compound(Zhi-7, Chao-5)
compound(Zhi-7, Hua-6)
appos(Squid-2, Zhi-7)
mark(see-12, As-9)
nsubj(see-12, you-10)
aux(see-12, can-11)
advcl(stir-fried-18, see-12)
amod(squid-16, sliced-14)
amod(squid-16, fresh-15)
nsubjpass(stir-fried-18, squid-16)
auxpass(stir-fried-18, is-17)
root(ROOT-0, stir-fried-18)
case(shoots-24, with-19)
amod(sliced-22, garlic-20)
amod(shoots-24, sliced-22)
compound(shoots-24, bamboo-23)
nmod:with(stir-fried-18, shoots-24)
cc(shoots-24, and-26)
amod(spices-28, amazing-27)
nmod:with(stir-fried-18, spices-28)
conj:and(shoots-24, spices-28)
case(kinds-31, of-29)
det(kinds-31, all-30)
nmod:of(spices-28, kinds-31)

(ROOT
  (S
    (PP (IN Within)
      (NP (NNS seconds)))
    (NP (PRP it))
    (VP (MD will)
      (VP (VB be)
        (PP (IN on)
          (NP (PRP$ your) (NN table)))))
    (. .)))

case(seconds-2, Within-1)
nmod:within(table-8, seconds-2)
nsubj(table-8, it-3)
aux(table-8, will-4)
cop(table-8, be-5)
case(table-8, on-6)
nmod:poss(table-8, your-7)
root(ROOT-0, table-8)

(ROOT
  (S
    (NP (DT This) (NN dish))
    (VP (VBZ has)
      (NP
        (NP (DT a) (RB very) (JJ special) (NN taste))
        (SBAR (IN because)
          (S
            (NP (NN everything))
            (VP (VBZ is)
              (VP (VBN boiled)
                (PP (IN in)
                  (NP (DT a) (JJ thick) (NN soup)))))))))
    (. .)))

det(dish-2, This-1)
nsubj(has-3, dish-2)
root(ROOT-0, has-3)
det(taste-7, a-4)
advmod(taste-7, very-5)
amod(taste-7, special-6)
dobj(has-3, taste-7)
mark(boiled-11, because-8)
nsubjpass(boiled-11, everything-9)
auxpass(boiled-11, is-10)
dep(taste-7, boiled-11)
case(soup-15, in-12)
det(soup-15, a-13)
amod(soup-15, thick-14)
nmod:in(boiled-11, soup-15)

(ROOT
  (S
    (S
      (ADJP (JJ Sweet)
        (CC and)
        (JJ sour))
      (PP (IN in)
        (NP (NN taste))))
    (, ,)
    (NP (NNP Sheng) (NNP Chao) (NNP Hua) (NNP Zhi))
    (VP (MD will)
      (ADVP (RB really))
      (VP (VB satisfy)
        (NP (PRP you))))
    (. .)))

ccomp(satisfy-13, Sweet-1)
cc(Sweet-1, and-2)
conj:and(Sweet-1, sour-3)
ccomp(satisfy-13, sour-3)
case(taste-5, in-4)
dep(Sweet-1, taste-5)
compound(Zhi-10, Sheng-7)
compound(Zhi-10, Chao-8)
compound(Zhi-10, Hua-9)
nsubj(satisfy-13, Zhi-10)
aux(satisfy-13, will-11)
advmod(satisfy-13, really-12)
root(ROOT-0, satisfy-13)
dobj(satisfy-13, you-14)

(ROOT
  (S
    (NP (NNP Shihlin) (NNP Big) (NNP Sausages))
    (PRN (-LRB- -LRB-)
      (NP (NNP Shihlin) (NNP Da) (NNP Xiangchang))
      (-RRB- -RRB-))
    (NP (DT This) (NN snack))
    (VP
      (VP (VBZ looks)
        (PP (IN like)
          (NP (DT a) (JJ hot) (NN dog))))
      (CC but)
      (VP (VBZ is)
        (ADJP (RB much) (JJR bigger))))
    (. .)))

compound(Sausages-3, Shihlin-1)
compound(Sausages-3, Big-2)
nsubj(looks-11, Sausages-3)
nsubj(bigger-19, Sausages-3)
compound(Xiangchang-7, Shihlin-5)
compound(Xiangchang-7, Da-6)
dep(looks-11, Xiangchang-7)
det(snack-10, This-9)
nsubj(looks-11, snack-10)
root(ROOT-0, looks-11)
case(dog-15, like-12)
det(dog-15, a-13)
amod(dog-15, hot-14)
nmod:like(looks-11, dog-15)
cc(looks-11, but-16)
cop(bigger-19, is-17)
advmod(bigger-19, much-18)
conj:but(looks-11, bigger-19)

(ROOT
  (S
    (NP (NNP Dont))
    (VP (VB be)
      (VP (VBN shocked)
        (PP (IN by)
          (NP (DT the) (JJ huge) (JJ barbecued) (NN sausage)))))
    (. .)))

nsubjpass(shocked-3, Dont-1)
auxpass(shocked-3, be-2)
root(ROOT-0, shocked-3)
case(sausage-8, by-4)
det(sausage-8, the-5)
amod(sausage-8, huge-6)
amod(sausage-8, barbecued-7)
nmod:by(shocked-3, sausage-8)

(ROOT
  (FRAG
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (ADJP (JJ willing)
            (S
              (VP (TO to)
                (VP (VB pay)
                  (NP (JJR more)))))))))
    (, ,)
    (WHADVP (WRB why))
    (RB not)
    (VP (VB try)
      (NP (DT the) (JJ deluxe) (NN one)))
    (. ?)))

mark(willing-4, If-1)
nsubj(willing-4, you-2)
nsubj(pay-6, you-2)
cop(willing-4, are-3)
root(ROOT-0, willing-4)
mark(pay-6, to-5)
xcomp(willing-4, pay-6)
dobj(pay-6, more-7)
dep(willing-4, why-9)
neg(try-11, not-10)
dep(willing-4, try-11)
det(one-14, the-12)
amod(one-14, deluxe-13)
dobj(try-11, one-14)

(ROOT
  (S
    (NP
      (NP (PRP$ Its) (JJ past) (NN midnight))
      (UCP
        (ADVP (RB now))
        (CC and)
        (ADJP (JJ Ive))))
    (ADVP (RB only))
    (VP (VBD put)
      (S
        (NP
          (NP (DT a) (JJ few))
          (PP (IN of)
            (NP (DT the) (JJ many) (NNS snacks))))
        (ADJP (JJ available)
          (PP (IN at)
            (NP
              (NP (NNP Shihlin) (NNP Night) (NNP Market))
              (PP (IN on)
                (NP (PRP$ my) (JJ night-market) (NN blog))))))))
    (. .)))

nmod:poss(midnight-3, Its-1)
amod(midnight-3, past-2)
nsubj(put-8, midnight-3)
advmod(midnight-3, now-4)
cc(now-4, and-5)
advmod(midnight-3, Ive-6)
conj:and(now-4, Ive-6)
advmod(put-8, only-7)
root(ROOT-0, put-8)
det(few-10, a-9)
nsubj(available-15, few-10)
case(snacks-14, of-11)
det(snacks-14, the-12)
amod(snacks-14, many-13)
nmod:of(few-10, snacks-14)
xcomp(put-8, available-15)
case(Market-19, at-16)
compound(Market-19, Shihlin-17)
compound(Market-19, Night-18)
nmod:at(available-15, Market-19)
case(blog-23, on-20)
nmod:poss(blog-23, my-21)
amod(blog-23, night-market-22)
nmod:on(Market-19, blog-23)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (JJ many) (JJ other) (JJ special) (NNS dishes))
        (, ,)
        (PP (VBG including)
          (NP
            (NP (NNS frogs) (NNS eggs))
            (SBAR
              (S (-LRB- -LRB-)
                (NP (NNP Dont))
                (VP (VBP worry))))))))
    (. !)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(dishes-6, many-3)
amod(dishes-6, other-4)
amod(dishes-6, special-5)
nsubj(are-2, dishes-6)
case(eggs-10, including-8)
compound(eggs-10, frogs-9)
nmod:including(dishes-6, eggs-10)
nsubj(worry-13, Dont-12)
acl:relcl(eggs-10, worry-13)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP dont)
      (VP (VB come)
        (PP (IN from)
          (NP (JJ real) (NNS frogs)))))
    (. !) (-RRB- -RRB-)))

nsubj(dont-2, They-1)
root(ROOT-0, dont-2)
xcomp(dont-2, come-3)
case(frogs-6, from-4)
amod(frogs-6, real-5)
nmod:from(come-3, frogs-6)

(ROOT
  (NP
    (NP (, ,) (JJ oyster) (NN omelets))
    (PRN (, ,)
      (CC and)
      (ADVP (RB stinky))
      (NP (NNP tofu)))
    (. .)))

amod(omelets-3, oyster-2)
root(ROOT-0, omelets-3)
cc(tofu-7, and-5)
dep(tofu-7, stinky-6)
dep(omelets-3, tofu-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP$ my) (NN stomach))
        (VP (VBD were)
          (ADJP (RB as) (JJ huge))
          (PP (IN as)
            (NP (DT the) (NNP Titanic))))))
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (VP (VB love)
        (S
          (VP (TO to)
            (VP (VB try)
              (NP (NN everything))
              (PP (IN in)
                (NP (DT a) (JJ single) (NN visit))))))))
    (. .)))

mark(huge-6, If-1)
nmod:poss(stomach-3, my-2)
nsubj(huge-6, stomach-3)
cop(huge-6, were-4)
advmod(huge-6, as-5)
advcl(love-13, huge-6)
case(Titanic-9, as-7)
det(Titanic-9, the-8)
nmod:as(huge-6, Titanic-9)
nsubj(love-13, I-11)
nsubj(try-15, I-11)
aux(love-13, would-12)
root(ROOT-0, love-13)
mark(try-15, to-14)
xcomp(love-13, try-15)
dobj(try-15, everything-16)
case(visit-20, in-17)
det(visit-20, a-18)
amod(visit-20, single-19)
nmod:in(try-15, visit-20)

(ROOT
  (SINV
    (S
      (NP (JJ Next) (NN time))
      (NP (PRP you))
      (VP (VBP come)
        (PP (TO to)
          (NP (NNP Taiwan)))))
    (, ,)
    (VP (VBP make)
      (ADJP (JJ sure)))
    (NP
      (NP
        (NP (PRP you))
        (PP (IN save)
          (NP (DT a) (NN night))))
      (CC or)
      (NP
        (NP (CD two))
        (PP (IN for)
          (NP
            (NP (DT a) (NN visit))
            (PP (TO to)
              (NP (PRP$ our) (JJ exciting) (NN night) (NNS markets)))))))
    (. .)))

amod(time-2, Next-1)
nsubj(come-4, time-2)
nsubj(come-4, you-3)
ccomp(make-8, come-4)
case(Taiwan-6, to-5)
nmod:to(come-4, Taiwan-6)
root(ROOT-0, make-8)
xcomp(make-8, sure-9)
nsubj(make-8, you-10)
case(night-13, save-11)
det(night-13, a-12)
nmod:save(you-10, night-13)
cc(you-10, or-14)
nsubj(make-8, two-15)
conj:or(you-10, two-15)
case(visit-18, for-16)
det(visit-18, a-17)
nmod:for(two-15, visit-18)
case(markets-23, to-19)
nmod:poss(markets-23, our-20)
amod(markets-23, exciting-21)
compound(markets-23, night-22)
nmod:to(visit-18, markets-23)

(ROOT
  (S
    (NP (PRP They))
    (ADVP (RB never))
    (VP (VBP sleep))
    (. !)))

nsubj(sleep-3, They-1)
neg(sleep-3, never-2)
root(ROOT-0, sleep-3)

(ROOT
  (S
    (VP (VB Write)
      (NP (DT a) (NN reply)
        (S
          (VP (TO to)
            (VP (VB Yummy)
              (S
                (NP (PRP You))
                (VP (VB know)
                  (FRAG
                    (SBARQ
                      (WHNP (WP what))
                      (. ?))))))))))))

root(ROOT-0, Write-1)
det(reply-3, a-2)
dobj(Write-1, reply-3)
mark(Yummy-5, to-4)
acl(reply-3, Yummy-5)
nsubj(know-7, You-6)
ccomp(Yummy-5, know-7)
dep(know-7, what-8)

(ROOT
  (S
    (NP
      (NP (NNP Mr.) (NNP Sage))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ teaches)
            (SBAR
              (S
                (NP (PRP us))
                (VP (VBD math)
                  (ADVP (RB here))
                  (PP (IN in)
                    (NP (DT the) (NNPS States)))))))))
      (, ,))
    (VP (VBZ plans)
      (S
        (VP (TO to)
          (VP (VB visit)
            (NP (NNP Taiwan))
            (NP (JJ next) (NN month))))))
    (. .)))

compound(Sage-2, Mr.-1)
nsubj(teaches-5, Sage-2)
nsubj(plans-13, Sage-2)
nsubj(visit-15, Sage-2)
ref(Sage-2, who-4)
acl:relcl(Sage-2, teaches-5)
nsubj(math-7, us-6)
ccomp(teaches-5, math-7)
advmod(math-7, here-8)
case(States-11, in-9)
det(States-11, the-10)
nmod:in(math-7, States-11)
root(ROOT-0, plans-13)
mark(visit-15, to-14)
xcomp(plans-13, visit-15)
dobj(visit-15, Taiwan-16)
amod(month-18, next-17)
nmod:tmod(visit-15, month-18)

(ROOT
  (SQ (MD Can)
    (NP (PRP you))
    (VP
      (VP (VB be)
        (NP (PRP$ his) (NN guide)))
      (, ,)
      (VP (VB please)))
    (. ?)))

aux(guide-5, Can-1)
nsubj(guide-5, you-2)
cop(guide-5, be-3)
nmod:poss(guide-5, his-4)
root(ROOT-0, guide-5)
dep(guide-5, please-7)

(ROOT
  (PRN (: --)
    (PP (IN by)
      (S
        (VP (VBG Christy)
          (NP (NNP Murphy)))))))

mark(Christy-3, by-2)
root(ROOT-0, Christy-3)
dobj(Christy-3, Murphy-4)

