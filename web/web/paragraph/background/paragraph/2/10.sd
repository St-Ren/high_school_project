(ROOT
  (S
    (NP (NN Lesson) (CD Ten))
    (VP (VBZ Its)
      (NP (DT a) (NNP New) (NNP World) (NNP Record)))
    (. !)))

nsubj(Its-3, Lesson-1)
nummod(Lesson-1, Ten-2)
root(ROOT-0, Its-3)
det(Record-7, a-4)
compound(Record-7, New-5)
compound(Record-7, World-6)
dobj(Its-3, Record-7)

(ROOT
  (S
    (S
      (NP (DT The) (NN name) (NNP Sir) (NNP Hugh) (NNP Beaver))
      (VP (MD may) (RB not)
        (VP (VB mean)
          (ADVP (RB much)
            (PP (TO to)
              (NP (JJS most) (NNS people)))))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (PRP$ his) (NN brainchild))
        (, ,)
        (NP (DT the) (NNP Guinness) (NNP World) (NNPS Records))
        (, ,))
      (VP (VBZ is)
        (VP (VBN known)
          (PP (IN around)
            (NP (DT the) (NN world))))))
    (. .)))

det(Beaver-5, The-1)
compound(Beaver-5, name-2)
compound(Beaver-5, Sir-3)
compound(Beaver-5, Hugh-4)
nsubj(mean-8, Beaver-5)
aux(mean-8, may-6)
neg(mean-8, not-7)
root(ROOT-0, mean-8)
advmod(mean-8, much-9)
case(people-12, to-10)
amod(people-12, most-11)
nmod:to(much-9, people-12)
cc(mean-8, but-14)
nmod:poss(brainchild-16, his-15)
nsubjpass(known-24, brainchild-16)
det(Records-21, the-18)
compound(Records-21, Guinness-19)
compound(Records-21, World-20)
appos(brainchild-16, Records-21)
auxpass(known-24, is-23)
conj:but(mean-8, known-24)
case(world-27, around-25)
det(world-27, the-26)
nmod:around(known-24, world-27)

(ROOT
  (S
    (S
      (NP (RB Here))
      (VP (VBZ is)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP it))
            (ADVP (DT all))
            (VP (VBD started))))))
    (: :)
    (S
      (NP (NNP Sir) (NNP Hugh))
      (VP (VBD was)
        (NP
          (NP (DT the) (VBG managing) (NN director))
          (PP (IN of)
            (NP (DT the) (NNP Guinness) (NNP Brewery))))))
    (. .)))

nsubj(is-2, Here-1)
root(ROOT-0, is-2)
advmod(started-6, how-3)
nsubj(started-6, it-4)
advmod(started-6, all-5)
ccomp(is-2, started-6)
compound(Hugh-9, Sir-8)
nsubj(director-13, Hugh-9)
cop(director-13, was-10)
det(director-13, the-11)
amod(director-13, managing-12)
parataxis(is-2, director-13)
case(Brewery-17, of-14)
det(Brewery-17, the-15)
compound(Brewery-17, Guinness-16)
nmod:of(director-13, Brewery-17)

(ROOT
  (S
    (PP
      (NP (CD One) (NN day))
      (IN in)
      (NP (CD 1951)))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (VP (VBG hunting)
        (PP (IN with)
          (NP
            (NP (DT some) (NNS friends))
            (PP (IN in)
              (NP (NNP Southern) (NNP Ireland)))))))
    (. .)))

nummod(day-2, One-1)
nmod:in(hunting-8, day-2)
case(day-2, in-3)
dep(day-2, 1951-4)
nsubj(hunting-8, he-6)
aux(hunting-8, was-7)
root(ROOT-0, hunting-8)
case(friends-11, with-9)
det(friends-11, some-10)
nmod:with(hunting-8, friends-11)
case(Ireland-14, in-12)
compound(Ireland-14, Southern-13)
nmod:in(friends-11, Ireland-14)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD shot)
        (PP (IN at)
          (NP
            (NP (DT a) (NN kind))
            (PP (IN of)
              (NP
                (NP (NN bird))
                (VP (VBN called)
                  (NP (DT the) (JJ golden) (NN plover)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD missed)))
    (. .)))

nsubj(shot-2, He-1)
root(ROOT-0, shot-2)
case(kind-5, at-3)
det(kind-5, a-4)
nmod:at(shot-2, kind-5)
case(bird-7, of-6)
nmod:of(kind-5, bird-7)
acl(bird-7, called-8)
det(plover-11, the-9)
amod(plover-11, golden-10)
dobj(called-8, plover-11)
cc(shot-2, but-13)
nsubj(missed-15, he-14)
conj:but(shot-2, missed-15)

(ROOT
  (S
    (NP (NNP Sir) (NNP Hugh))
    (VP (VBD said)
      (SBAR (IN that)
        (S (, ,)
          (PP (IN in)
            (NP (PRP$ his) (NN opinion)))
          (, ,)
          (NP (DT the) (JJ golden) (NN plover))
          (VP (VBD was)
            (NP
              (NP (DT the) (JJS fastest))
              (VP (VBG flying)
                (NP (NN game) (NN bird))
                (PP (IN in)
                  (NP
                    (NP (DT all))
                    (PP (IN of)
                      (NP (NNP Europe)))))))))))
    (. .)))

compound(Hugh-2, Sir-1)
nsubj(said-3, Hugh-2)
root(ROOT-0, said-3)
mark(fastest-15, that-4)
case(opinion-8, in-6)
nmod:poss(opinion-8, his-7)
nmod:in(fastest-15, opinion-8)
det(plover-12, the-10)
amod(plover-12, golden-11)
nsubj(fastest-15, plover-12)
cop(fastest-15, was-13)
det(fastest-15, the-14)
ccomp(said-3, fastest-15)
acl(fastest-15, flying-16)
compound(bird-18, game-17)
dobj(flying-16, bird-18)
case(all-20, in-19)
nmod:in(flying-16, all-20)
case(Europe-22, of-21)
nmod:of(all-20, Europe-22)

(ROOT
  (S
    (NP
      (NP (DT Some))
      (PP (IN of)
        (NP
          (NP (DT the) (NNS people))
          (PP (IN in)
            (NP (PRP$ his) (NN party))))))
    (VP (VBD disagreed))
    (. .)))

nsubj(disagreed-8, Some-1)
case(people-4, of-2)
det(people-4, the-3)
nmod:of(Some-1, people-4)
case(party-7, in-5)
nmod:poss(party-7, his-6)
nmod:in(people-4, party-7)
root(ROOT-0, disagreed-8)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD said)
      (SBAR (IN that)
        (S
          (NP (DT the) (JJS fastest) (NN game) (NN bird))
          (VP (VBD was)
            (NP
              (NP (DT another) (NN type))
              (PP (IN of)
                (NP
                  (NP (NN bird))
                  (, ,)
                  (NP (DT the) (NN grouse)))))))))
    (. .)))

nsubj(said-2, They-1)
root(ROOT-0, said-2)
mark(type-10, that-3)
det(bird-7, the-4)
amod(bird-7, fastest-5)
compound(bird-7, game-6)
nsubj(type-10, bird-7)
cop(type-10, was-8)
det(type-10, another-9)
ccomp(said-2, type-10)
case(bird-12, of-11)
nmod:of(type-10, bird-12)
det(grouse-15, the-14)
appos(bird-12, grouse-15)

(ROOT
  (S
    (NP (NNP Sir) (NNP Hugh))
    (VP (VBD decided)
      (S
        (VP (TO to)
          (VP (VB check)
            (NP (DT the) (NNS facts))))))
    (. .)))

compound(Hugh-2, Sir-1)
nsubj(decided-3, Hugh-2)
nsubj(check-5, Hugh-2)
root(ROOT-0, decided-3)
mark(check-5, to-4)
xcomp(decided-3, check-5)
det(facts-7, the-6)
dobj(check-5, facts-7)

(ROOT
  (S
    (S
      (NP
        (NP (PRP He))
        (CC and)
        (NP (PRP$ his) (NNS friends)))
      (VP (VBD searched)
        (PP (IN through)
          (NP (JJ many) (NN reference) (NNS books)))
        (PP (IN in)
          (NP (DT the) (NN library)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBP couldnt)
        (VP (VB find)
          (NP
            (NP (DT any) (NN information))
            (PP (IN about)
              (NP (DT the) (JJS fastest) (NN birdXor))))
          (UCP
            (NP
              (NP
                (NP (DT the) (JJS fastest) (NN anything))
                (, ,)
                (CC or)
                (NP (DT the) (JJS biggest))
                (, ,))
              (CC or)
              (NP
                (NP (DT the)
                  (ADJP (RBS most) (JJ expensive)))
                (, ,)
                (CC or)
                (NP (DT the) (JJS oldest))
                (, ,)))
            (CC and)
            (ADVP (RB so) (RB on))))))
    (. .)))

nsubj(searched-5, He-1)
cc(He-1, and-2)
nmod:poss(friends-4, his-3)
conj:and(He-1, friends-4)
nsubj(searched-5, friends-4)
root(ROOT-0, searched-5)
case(books-9, through-6)
amod(books-9, many-7)
compound(books-9, reference-8)
nmod:through(searched-5, books-9)
case(library-12, in-10)
det(library-12, the-11)
nmod:in(searched-5, library-12)
cc(searched-5, but-14)
nsubj(couldnt-16, they-15)
conj:but(searched-5, couldnt-16)
xcomp(couldnt-16, find-17)
det(information-19, any-18)
iobj(find-17, information-19)
case(birdXor-23, about-20)
det(birdXor-23, the-21)
amod(birdXor-23, fastest-22)
nmod:about(information-19, birdXor-23)
det(anything-26, the-24)
amod(anything-26, fastest-25)
dobj(find-17, anything-26)
cc(anything-26, or-28)
det(biggest-30, the-29)
dobj(find-17, biggest-30)
conj:or(anything-26, biggest-30)
cc(anything-26, or-32)
det(expensive-35, the-33)
advmod(expensive-35, most-34)
dobj(find-17, expensive-35)
conj:or(anything-26, expensive-35)
cc(expensive-35, or-37)
det(oldest-39, the-38)
conj:or(anything-26, oldest-39)
conj:or(expensive-35, oldest-39)
cc(anything-26, and-41)
advmod(on-43, so-42)
advmod(anything-26, on-43)

(ROOT
  (S
    (NP (NNP Sir) (NNP Hugh))
    (VP (VBD had)
      (NP (DT a) (JJ brilliant) (NN idea)))
    (. .)))

compound(Hugh-2, Sir-1)
nsubj(had-3, Hugh-2)
root(ROOT-0, had-3)
det(idea-6, a-4)
amod(idea-6, brilliant-5)
dobj(had-3, idea-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD realized)
      (SBAR
        (S
          (NP
            (NP (DT that))
            (, ,)
            (NP (DT every) (NN day))
            (, ,))
          (ADVP (RB there))
          (VP (VBD were)
            (NP
              (NP (NNS hundreds))
              (PP (IN of)
                (NP
                  (NP (NNS arguments))
                  (ADJP (JJ similar)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NN one))
                        (SBAR (IN that)
                          (S
                            (NP (PRP he))
                            (VP (VBD had)
                              (VP (VBN had)
                                (PP (IN with)
                                  (NP (PRP$ his) (NNS friends)))))))))))))))))
    (. .)))

nsubj(realized-2, He-1)
root(ROOT-0, realized-2)
nsubj(hundreds-10, that-3)
det(day-6, every-5)
appos(that-3, day-6)
advmod(hundreds-10, there-8)
cop(hundreds-10, were-9)
ccomp(realized-2, hundreds-10)
case(arguments-12, of-11)
nmod:of(hundreds-10, arguments-12)
amod(arguments-12, similar-13)
case(one-16, to-14)
det(one-16, the-15)
nmod:to(similar-13, one-16)
mark(had-20, that-17)
nsubj(had-20, he-18)
aux(had-20, had-19)
dep(one-16, had-20)
case(friends-23, with-21)
nmod:poss(friends-23, his-22)
nmod:with(had-20, friends-23)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD decided)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT a) (JJ thorough) (, ,) (JJ reliable) (NN guide))
            (PP (TO to)
              (NP (NNS records))))
          (VP (VBD was)
            (VP (VBN needed))))))
    (. .)))

nsubj(decided-2, He-1)
root(ROOT-0, decided-2)
mark(needed-12, that-3)
det(guide-8, a-4)
amod(guide-8, thorough-5)
amod(guide-8, reliable-7)
nsubjpass(needed-12, guide-8)
case(records-10, to-9)
nmod:to(guide-8, records-10)
auxpass(needed-12, was-11)
ccomp(decided-2, needed-12)

(ROOT
  (S
    (ADVP
      (NP (JJ Several) (NNS years))
      (RB later))
    (, ,)
    (PP (IN in)
      (NP (NNP September) (CD 1954)))
    (, ,)
    (NP (NNP Sir) (NNP Hugh))
    (VP (VBD approached)
      (NP
        (NP (NNP Norris))
        (CC and)
        (NP (NNP Ross) (NNP McWhirter))))
    (. .)))

amod(years-2, Several-1)
nmod:npmod(later-3, years-2)
advmod(approached-11, later-3)
case(September-6, in-5)
nmod:in(approached-11, September-6)
nummod(September-6, 1954-7)
compound(Hugh-10, Sir-9)
nsubj(approached-11, Hugh-10)
root(ROOT-0, approached-11)
dobj(approached-11, Norris-12)
cc(Norris-12, and-13)
compound(McWhirter-15, Ross-14)
dobj(approached-11, McWhirter-15)
conj:and(Norris-12, McWhirter-15)

(ROOT
  (S
    (NP (DT These) (JJ twin) (NNS brothers))
    (VP (VBD operated)
      (NP (DT a) (JJ fact-finding) (NN agency)))
    (. .)))

det(brothers-3, These-1)
amod(brothers-3, twin-2)
nsubj(operated-4, brothers-3)
root(ROOT-0, operated-4)
det(agency-7, a-5)
amod(agency-7, fact-finding-6)
dobj(operated-4, agency-7)

(ROOT
  (S
    (NP (NNP Sir) (NNP Hugh))
    (VP (VBD asked)
      (S
        (NP (PRP them))
        (VP (TO to)
          (VP (VB collect)
            (CC and)
            (VB publish)
            (NP
              (NP (DT a) (NN guide))
              (PP (TO to)
                (NP (NNS records))))
            (PP (IN in)
              (NP
                (NP
                  (QP (RB as) (JJ many))
                  (NNS fields))
                (ADJP (RB as) (JJ possible))))))))
    (. .)))

compound(Hugh-2, Sir-1)
nsubj(asked-3, Hugh-2)
root(ROOT-0, asked-3)
dobj(asked-3, them-4)
nsubj(collect-6, them-4)
nsubj(publish-8, them-4)
mark(collect-6, to-5)
xcomp(asked-3, collect-6)
cc(collect-6, and-7)
xcomp(asked-3, publish-8)
conj:and(collect-6, publish-8)
det(guide-10, a-9)
dobj(collect-6, guide-10)
case(records-12, to-11)
nmod:to(guide-10, records-12)
case(fields-16, in-13)
advmod(many-15, as-14)
nummod(fields-16, many-15)
nmod:in(collect-6, fields-16)
advmod(possible-18, as-17)
amod(fields-16, possible-18)

(ROOT
  (S
    (S
      (NP (DT The) (NNP McWhirter) (NNS brothers))
      (VP (VBD opened)
        (NP (DT a) (NNP Guinness) (NNPS Records) (NN office))
        (PP (IN in)
          (NP (NNP London)))))
    (, ,)
    (CC and)
    (S
      (PP (IN after)
        (NP
          (NP (DT a) (NN year))
          (PP (IN of)
            (NP (JJ hard) (NN work)))))
      (, ,)
      (NP (DT the) (JJ first) (JJ slim) (NN volume))
      (VP (VBD was)
        (VP (VBN published)
          (PP (IN in)
            (NP (DT the) (NNP U.K.))))))
    (PP (IN By)
      (NP
        (NP (DT the) (NN end))
        (PP (IN of)
          (NP (DT the) (NN year)))))
    (, ,)
    (S
      (NP (DT the) (NN book))
      (VP (VBD had)
        (VP (VBN climbed)
          (PP (TO to)
            (NP
              (NP (DT the) (NN top))
              (PP (IN of)
                (NP (DT the) (JJ British) (NN bestseller) (NN list))))))))
    (. .)))

det(brothers-3, The-1)
compound(brothers-3, McWhirter-2)
nsubj(opened-4, brothers-3)
root(ROOT-0, opened-4)
det(office-8, a-5)
compound(office-8, Guinness-6)
compound(office-8, Records-7)
dobj(opened-4, office-8)
case(London-10, in-9)
nmod:in(opened-4, London-10)
cc(opened-4, and-12)
case(year-15, after-13)
det(year-15, a-14)
nmod:after(published-25, year-15)
case(work-18, of-16)
amod(work-18, hard-17)
nmod:of(year-15, work-18)
det(volume-23, the-20)
amod(volume-23, first-21)
amod(volume-23, slim-22)
nsubjpass(published-25, volume-23)
auxpass(published-25, was-24)
conj:and(opened-4, published-25)
case(U.K.-28, in-26)
det(U.K.-28, the-27)
nmod:in(published-25, U.K.-28)
case(end-31, By-29)
det(end-31, the-30)
nmod:by(opened-4, end-31)
case(year-34, of-32)
det(year-34, the-33)
nmod:of(end-31, year-34)
det(book-37, the-36)
nsubj(climbed-39, book-37)
aux(climbed-39, had-38)
conj:and(opened-4, climbed-39)
case(top-42, to-40)
det(top-42, the-41)
nmod:to(climbed-39, top-42)
case(list-47, of-43)
det(list-47, the-44)
amod(list-47, British-45)
compound(list-47, bestseller-46)
nmod:of(top-42, list-47)

(ROOT
  (S
    (PP (IN In)
      (NP (CD 1956)))
    (, ,)
    (NP (DT the) (NNP Guinness) (NN Company))
    (VP (VBD published)
      (NP (DT the) (JJ record) (NN book))
      (PP (IN in)
        (NP (DT the) (NNP United) (NNPS States))))
    (. .)))

case(1956-2, In-1)
nmod:in(published-7, 1956-2)
det(Company-6, the-4)
compound(Company-6, Guinness-5)
nsubj(published-7, Company-6)
root(ROOT-0, published-7)
det(book-10, the-8)
amod(book-10, record-9)
dobj(published-7, book-10)
case(States-14, in-11)
det(States-14, the-12)
compound(States-14, United-13)
nmod:in(published-7, States-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT an) (JJ instant) (NN success))
      (NP (RB there))
      (, ,)
      (ADVP (RB too)))
    (. .)))

nsubj(success-5, It-1)
cop(success-5, was-2)
det(success-5, an-3)
amod(success-5, instant-4)
root(ROOT-0, success-5)
dep(success-5, there-6)
advmod(success-5, too-8)

(ROOT
  (S
    (S
      (VP (VBN Updated)
        (NP (DT every) (NN year))))
    (, ,)
    (NP
      (NP (DT the) (NN book))
      (PP (IN of)
        (NP (NNP Guinness) (NNP World) (NNPS Records))))
    (VP (VBZ has)
      (VP (VBN sold)
        (NP
          (QP (JJR more) (IN than) (CD ninety) (CD million))
          (NNS copies))
        (PP
          (PP (IN in)
            (NP (JJ seventy-seven) (JJ different) (NNS countries)))
          (CC and)
          (PP (IN in)
            (NP (JJ thirty-seven) (NNS languages))))))
    (. .)))

advcl(sold-12, Updated-1)
det(year-3, every-2)
nmod:tmod(Updated-1, year-3)
det(book-6, the-5)
nsubj(sold-12, book-6)
nsubj(sold-12', book-6)
case(Records-10, of-7)
compound(Records-10, Guinness-8)
compound(Records-10, World-9)
nmod:of(book-6, Records-10)
aux(sold-12, has-11)
root(ROOT-0, sold-12)
conj:and(sold-12, sold-12')
advmod(million-16, more-13)
mwe(more-13, than-14)
compound(million-16, ninety-15)
nummod(copies-17, million-16)
dobj(sold-12, copies-17)
case(countries-21, in-18)
amod(countries-21, seventy-seven-19)
amod(countries-21, different-20)
nmod:in(sold-12, countries-21)
cc(sold-12, and-22)
case(languages-25, in-23)
amod(languages-25, thirty-seven-24)
nmod:in(sold-12', languages-25)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (NN fact)))
      (, ,)
      (NP (DT the) (NN book))
      (VP (VBZ holds)
        (NP
          (NP (DT a) (NN record))
          (PP (IN of)
            (NP (PRP$ its) (JJ own))))))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBZ has)
        (VP (VBN sold)
          (NP (JJR more) (NNS copies))
          (PP (IN than)
            (NP
              (NP (DT any) (JJ other) (NN book))
              (PP (IN except)
                (NP
                  (NP (DT the) (NNP Bible))
                  (CC and)
                  (NP (DT the) (NNP Koran)))))))))
    (. .)))

case(fact-2, In-1)
nmod:in(holds-6, fact-2)
det(book-5, the-4)
nsubj(holds-6, book-5)
root(ROOT-0, holds-6)
det(record-8, a-7)
dobj(holds-6, record-8)
case(own-11, of-9)
nmod:poss(own-11, its-10)
nmod:of(record-8, own-11)
nsubj(sold-15, it-13)
aux(sold-15, has-14)
parataxis(holds-6, sold-15)
amod(copies-17, more-16)
dobj(sold-15, copies-17)
case(book-21, than-18)
det(book-21, any-19)
amod(book-21, other-20)
nmod:than(sold-15, book-21)
case(Bible-24, except-22)
det(Bible-24, the-23)
nmod:except(book-21, Bible-24)
cc(Bible-24, and-25)
det(Koran-27, the-26)
nmod:except(book-21, Koran-27)
conj:and(Bible-24, Koran-27)

(ROOT
  (S
    (NP (NNP Guinness) (NNP World) (NNPS Records))
    (VP (VBZ has)
      (VP (VBN been)
        (VP (VBN called)
          (NP (DT the) (JJ worlds)
            (ADJP (RBS most) (JJ readable))
            (NN reference) (NN book)))))
    (. .)))

compound(Records-3, Guinness-1)
compound(Records-3, World-2)
nsubjpass(called-6, Records-3)
aux(called-6, has-4)
auxpass(called-6, been-5)
root(ROOT-0, called-6)
det(book-12, the-7)
amod(book-12, worlds-8)
advmod(readable-10, most-9)
amod(book-12, readable-10)
compound(book-12, reference-11)
dobj(called-6, book-12)

(ROOT
  (S
    (NP (DT The) (NNS records))
    (VP (VBP are)
      (VP (VBN divided)
        (PP (IN into)
          (NP (NN thirteen) (NNS categories)))))
    (. .)))

det(records-2, The-1)
nsubjpass(divided-4, records-2)
auxpass(divided-4, are-3)
root(ROOT-0, divided-4)
case(categories-7, into-5)
compound(categories-7, thirteen-6)
nmod:into(divided-4, categories-7)

(ROOT
  (S
    (S
      (NP (DT Some) (NNS people))
      (VP (VBP use)
        (S
          (NP (DT the) (NN book))
          (VP (TO to)
            (VP (VB settle)
              (NP (NNS arguments))
              (PP (IN about)
                (NP (JJ scientific) (NNS facts))))))))
    (: ;)
    (S
      (NP (NNS others))
      (VP (VBP use)
        (S
          (NP (PRP it))
          (VP (TO to)
            (VP (VB resolve)
              (NP (NNS debates))
              (PP (IN about)
                (NP (NNS sports))))))))
    (. .)))

det(people-2, Some-1)
nsubj(use-3, people-2)
root(ROOT-0, use-3)
det(book-5, the-4)
dobj(use-3, book-5)
nsubj(settle-7, book-5)
mark(settle-7, to-6)
xcomp(use-3, settle-7)
dobj(settle-7, arguments-8)
case(facts-11, about-9)
amod(facts-11, scientific-10)
nmod:about(settle-7, facts-11)
nsubj(use-14, others-13)
parataxis(use-3, use-14)
dobj(use-14, it-15)
nsubj(resolve-17, it-15)
mark(resolve-17, to-16)
xcomp(use-14, resolve-17)
dobj(resolve-17, debates-18)
case(sports-20, about-19)
nmod:about(resolve-17, sports-20)

(ROOT
  (S
    (NP (JJS Most) (NNS people))
    (, ,)
    (ADVP (RB though))
    (, ,)
    (VP (VBP enjoy)
      (S
        (VP (VBG looking)
          (PP (IN through)
            (NP
              (NP (DT the) (NN book))
              (PP (IN for)
                (NP (JJ wacky) (NN world) (NNS records))))))))
    (. .)))

amod(people-2, Most-1)
nsubj(enjoy-6, people-2)
advmod(enjoy-6, though-4)
root(ROOT-0, enjoy-6)
xcomp(enjoy-6, looking-7)
case(book-10, through-8)
det(book-10, the-9)
nmod:through(looking-7, book-10)
case(records-14, for-11)
amod(records-14, wacky-12)
compound(records-14, world-13)
nmod:for(book-10, records-14)

(ROOT
  (S
    (NP
      (NP (CD One))
      (PP (IN of)
        (NP (DT the)
          (ADJP (RBS most) (JJ unusual)))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN record))
        (VP (VBN set)
          (PP (IN by)
            (NP
              (NP (NNP Christian) (NNP Adam))
              (PP (IN of)
                (NP (NNP Germany))))))))
    (. .)))

nsubj(record-8, One-1)
case(unusual-5, of-2)
det(unusual-5, the-3)
advmod(unusual-5, most-4)
nmod:of(One-1, unusual-5)
cop(record-8, is-6)
det(record-8, the-7)
root(ROOT-0, record-8)
acl(record-8, set-9)
case(Adam-12, by-10)
compound(Adam-12, Christian-11)
nmod:by(set-9, Adam-12)
case(Germany-14, of-13)
nmod:of(Adam-12, Germany-14)

(ROOT
  (S
    (NP (NNP Adam))
    (VP (VBD rode)
      (NP (PRP$ his) (NN bicycle))
      (S
        (ADVP
          (NP (CD 60.45) (NNS kilometers))
          (IN while))
        (VP (VBG playing)
          (NP (DT the) (NN violin)))))
    (. .)))

nsubj(rode-2, Adam-1)
root(ROOT-0, rode-2)
nmod:poss(bicycle-4, his-3)
dobj(rode-2, bicycle-4)
nummod(kilometers-6, 60.45-5)
advmod(playing-8, kilometers-6)
case(kilometers-6, while-7)
xcomp(rode-2, playing-8)
det(violin-10, the-9)
dobj(playing-8, violin-10)

(ROOT
  (S
    (S
      (ADJP (RBR More) (RB amazingly)))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (VP (VBG riding)
        (ADVP (RB backwards)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBD set)
                (NP (DT this) (NN record))))))))
    (. !)))

advmod(amazingly-2, More-1)
ccomp(riding-6, amazingly-2)
nsubj(riding-6, he-4)
aux(riding-6, was-5)
root(ROOT-0, riding-6)
advmod(riding-6, backwards-7)
advmod(set-10, when-8)
nsubj(set-10, he-9)
dep(backwards-7, set-10)
det(record-12, this-11)
dobj(set-10, record-12)

(ROOT
  (S (RB Then)
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (NNP David) (NNP Kremmer))
        (PP (IN from)
          (NP
            (NP (NNP Wisconsin) (, ,) (NNP U.S.A.))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBN stacked)
                  (NP (CD ten) (NN bowling) (NNS balls))
                  (PP (IN on)
                    (NP
                      (NP (NN top))
                      (PP (IN of)
                        (NP
                          (NP (DT each) (JJ other) (, ,)
                            (CC or)
                            (NNP John) (NNP Evans))
                          (PP (IN of)
                            (NP (DT the) (NNP U.K.)))))
                      (, ,)
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBN balanced)
                            (NP (DT a) (NN car))
                            (PP (IN on)
                              (NP (PRP$ his) (NN head)))
                            (PP (IN for)
                              (NP (JJ thirty-three) (NNS seconds)))))))))))))))
    (. .)))

advmod(was-3, Then-1)
expl(was-3, there-2)
root(ROOT-0, was-3)
compound(Kremmer-5, David-4)
nsubj(was-3, Kremmer-5)
case(U.S.A.-9, from-6)
compound(U.S.A.-9, Wisconsin-7)
nmod:from(Kremmer-5, U.S.A.-9)
nsubj(stacked-12, U.S.A.-9)
ref(U.S.A.-9, who-11)
acl:relcl(U.S.A.-9, stacked-12)
nummod(balls-15, ten-13)
compound(balls-15, bowling-14)
dobj(stacked-12, balls-15)
case(other-20, on-16)
mwe(on-16, top-17)
mwe(on-16, of-18)
det(other-20, each-19)
nmod:on_top_of(stacked-12, other-20)
nsubj(balanced-30, other-20)
cc(other-20, or-22)
compound(Evans-24, John-23)
nmod:on_top_of(stacked-12, Evans-24)
conj:or(other-20, Evans-24)
nsubj(balanced-30, Evans-24)
case(U.K.-27, of-25)
det(U.K.-27, the-26)
nmod:of(other-20, U.K.-27)
ref(other-20, who-29)
acl:relcl(other-20, balanced-30)
det(car-32, a-31)
dobj(balanced-30, car-32)
case(head-35, on-33)
nmod:poss(head-35, his-34)
nmod:on(balanced-30, head-35)
case(seconds-38, for-36)
amod(seconds-38, thirty-three-37)
nmod:for(balanced-30, seconds-38)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD can) (RB not)
              (VP (VB get)
                (NP (JJ enough) (NN information))
                (PP (IN about)
                  (NP
                    (NP (NNS records))
                    (PP (IN from)
                      (NP (DT the) (NN book)))))))))))
    (, ,)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (NNP Guinness) (NNP World) (NNPS Records) (NNP museums))
        (VP (VBN located)
          (PP
            (PP (IN throughout)
              (NP (NNP North) (NNP America)
                (CC and)
                (NNP Europe)))
            (, ,)
            (CC and)
            (ADVP (RB also))
            (PP (IN in)
              (NP (NNP Taiwan)))))))
    (. .)))

case(those-2, For-1)
nsubj(get-6, those-2)
nmod:for(are-16, those-2)
ref(those-2, who-3)
aux(get-6, can-4)
neg(get-6, not-5)
acl:relcl(those-2, get-6)
amod(information-8, enough-7)
dobj(get-6, information-8)
case(records-10, about-9)
nmod:about(get-6, records-10)
case(book-13, from-11)
det(book-13, the-12)
nmod:from(records-10, book-13)
expl(are-16, there-15)
root(ROOT-0, are-16)
compound(museums-20, Guinness-17)
compound(museums-20, World-18)
compound(museums-20, Records-19)
nsubj(are-16, museums-20)
acl(museums-20, located-21)
acl(museums-20, located-21')
acl(museums-20, located-21'')
conj:and(located-21, located-21')
conj:and(located-21, located-21'')
case(America-24, throughout-22)
compound(America-24, North-23)
nmod:throughout(located-21, America-24)
cc(located-21, and-25)
conj(America-24, Europe-26)
cc(located-21, and-28)
advmod(Taiwan-31, also-29)
case(Taiwan-31, in-30)
nmod:in(located-21', Taiwan-31)

(ROOT
  (S
    (NP (DT The) (NNP Taiwan) (NN museum))
    (VP (VBZ is)
      (ADJP (JJ unique)))
    (. .)))

det(museum-3, The-1)
compound(museum-3, Taiwan-2)
nsubj(unique-5, museum-3)
cop(unique-5, is-4)
root(ROOT-0, unique-5)

(ROOT
  (S
    (S
      (NP (PRP$ Its) (JJ main) (NN hall))
      (VP (VBZ resembles)
        (NP (DT an) (JJ enormous) (NNP Guinness) (NNP World) (NNPS Records) (NN book))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ its) (NN snack) (NN bar))
      (VP (VBZ looks)
        (PP (IN like)
          (NP (DT a) (JJ giant) (NN hamburger)))))
    (. .)))

nmod:poss(hall-3, Its-1)
amod(hall-3, main-2)
nsubj(resembles-4, hall-3)
root(ROOT-0, resembles-4)
det(book-10, an-5)
amod(book-10, enormous-6)
compound(book-10, Guinness-7)
compound(book-10, World-8)
compound(book-10, Records-9)
xcomp(resembles-4, book-10)
cc(resembles-4, and-12)
nmod:poss(bar-15, its-13)
compound(bar-15, snack-14)
nsubj(looks-16, bar-15)
conj:and(resembles-4, looks-16)
case(hamburger-20, like-17)
det(hamburger-20, a-18)
amod(hamburger-20, giant-19)
nmod:like(looks-16, hamburger-20)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD can)
        (ADVP (RB also))
        (VP (VB watch)
          (NP
            (NP (NNP Guinness) (NNP World) (NNPS Records))
            (: :)
            (NP
              (NP (NNP Primetime))
              (, ,)
              (NP (DT a) (JJ weekly) (NN television) (NN show)))))))
    (, ,)
    (CC or)
    (S
      (NP (PRP you))
      (VP (MD can)
        (VP (VB visit)
          (NP (DT the) (NNP Guinness) (NNP World) (NNPS Records) (NN website)))))
    (. .)))

nsubj(watch-4, You-1)
aux(watch-4, can-2)
advmod(watch-4, also-3)
root(ROOT-0, watch-4)
compound(Records-7, Guinness-5)
compound(Records-7, World-6)
dobj(watch-4, Records-7)
dep(Records-7, Primetime-9)
det(show-14, a-11)
amod(show-14, weekly-12)
compound(show-14, television-13)
appos(Primetime-9, show-14)
cc(watch-4, or-16)
nsubj(visit-19, you-17)
aux(visit-19, can-18)
conj:or(watch-4, visit-19)
det(website-24, the-20)
compound(website-24, Guinness-21)
compound(website-24, World-22)
compound(website-24, Records-23)
dobj(visit-19, website-24)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP like))))
    (, ,)
    (NP (PRP you))
    (VP (MD can)
      (VP (VB try)
        (S
          (VP (TO to)
            (VP (VB break)
              (NP (DT a) (NN world) (NN record)))))
        (NP (PRP yourself))))
    (. .)))

mark(like-3, If-1)
nsubj(like-3, you-2)
advcl(try-7, like-3)
nsubj(try-7, you-5)
aux(try-7, can-6)
root(ROOT-0, try-7)
mark(break-9, to-8)
xcomp(try-7, break-9)
det(record-12, a-10)
compound(record-12, world-11)
dobj(break-9, record-12)
dobj(try-7, yourself-13)
nsubj(break-9, yourself-13)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP dont)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ strong)
                (CC or)
                (JJ fast)
                (S
                  (VP (TO to)
                    (VP (VB set)
                      (NP (DT a) (JJ new) (NN record)))))))))))
    (. .)))

nsubj(dont-2, You-1)
root(ROOT-0, dont-2)
xcomp(dont-2, have-3)
mark(strong-6, to-4)
cop(strong-6, be-5)
xcomp(have-3, strong-6)
cc(strong-6, or-7)
xcomp(have-3, fast-8)
conj:or(strong-6, fast-8)
mark(set-10, to-9)
xcomp(strong-6, set-10)
det(record-13, a-11)
amod(record-13, new-12)
dobj(set-10, record-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (NP
            (NP (RB plenty))
            (PP (IN of)
              (NP (NN time)))))))
    (, ,)
    (NP (PRP you))
    (VP (MD can)
      (VP (VB grow)
        (NP (PRP$ your) (NN hair))
        (PP (TO to)
          (NP (DT a) (NN record) (NN length)))))
    (. .)))

mark(have-3, If-1)
nsubj(have-3, you-2)
advcl(grow-10, have-3)
dobj(have-3, plenty-4)
case(time-6, of-5)
nmod:of(plenty-4, time-6)
nsubj(grow-10, you-8)
aux(grow-10, can-9)
root(ROOT-0, grow-10)
nmod:poss(hair-12, your-11)
dobj(grow-10, hair-12)
case(length-16, to-13)
det(length-16, a-14)
compound(length-16, record-15)
nmod:to(grow-10, length-16)

(ROOT
  (S
    (NP
      (NP (DT A) (NN woman))
      (PP (IN in)
        (NP (NNP China)))
      (, ,)
      (SBAR
        (WHNP (WP$ whose) (NN hair))
        (S
          (VP (VBZ is)
            (ADJP
              (NP (CD 5.627) (NNS meters))
              (JJ long)))))
      (, ,))
    (VP (VBZ has)
      (NP (DT the) (JJ current) (NN record)))
    (. .)))

det(woman-2, A-1)
nmod:poss(hair-7, woman-2)
nsubj(has-13, woman-2)
case(China-4, in-3)
nmod:in(woman-2, China-4)
ref(woman-2, whose-6)
nsubj(long-11, hair-7)
cop(long-11, is-8)
nummod(meters-10, 5.627-9)
nmod:npmod(long-11, meters-10)
acl:relcl(woman-2, long-11)
root(ROOT-0, has-13)
det(record-16, the-14)
amod(record-16, current-15)
dobj(has-13, record-16)

(ROOT
  (S (CC Or)
    (NP (PRP you))
    (VP (MD could)
      (VP (VB break)
        (NP (DT the) (NN record))
        (PP (IN for)
          (S
            (VP (VBG getting)
              (PP (IN into)
                (NP
                  (NP (DT a) (NN bathtub))
                  (PP (IN with)
                    (NP (DT the)
                      (ADJP (RBS most) (JJ live))
                      (NNS venomous) (NNS snakes))))))))))
    (. .)))

cc(break-4, Or-1)
nsubj(break-4, you-2)
aux(break-4, could-3)
root(ROOT-0, break-4)
det(record-6, the-5)
dobj(break-4, record-6)
mark(getting-8, for-7)
advcl(break-4, getting-8)
case(bathtub-11, into-9)
det(bathtub-11, a-10)
nmod:into(getting-8, bathtub-11)
case(snakes-17, with-12)
det(snakes-17, the-13)
advmod(live-15, most-14)
amod(snakes-17, live-15)
compound(snakes-17, venomous-16)
nmod:with(bathtub-11, snakes-17)

(ROOT
  (S
    (NP
      (NP (CD Two) (NNS people))
      (PP (IN from)
        (NP (DT the) (NNP United) (NNPS States))))
    (VP (VBP hold)
      (NP (DT that) (NN record))
      (ADVP (RB now)))
    (. .)))

nummod(people-2, Two-1)
nsubj(hold-7, people-2)
case(States-6, from-3)
det(States-6, the-4)
compound(States-6, United-5)
nmod:from(people-2, States-6)
root(ROOT-0, hold-7)
det(record-9, that-8)
dobj(hold-7, record-9)
advmod(hold-7, now-10)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD got)
      (PP (IN into)
        (NP (DT a) (NN tub)))
      (PP (IN with)
        (NP (JJ seventy-six) (JJ live) (NNS rattlesnakes))))
    (. .)))

nsubj(got-2, They-1)
root(ROOT-0, got-2)
case(tub-5, into-3)
det(tub-5, a-4)
nmod:into(got-2, tub-5)
case(rattlesnakes-9, with-6)
amod(rattlesnakes-9, seventy-six-7)
amod(rattlesnakes-9, live-8)
nmod:with(got-2, rattlesnakes-9)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (SBAR (RB even) (IN if)
      (S
        (NP (PRP you))
        (VP (VBP do)
          (VP (VB officiallyreak)
            (NP (DT a) (NN record))))))
    (, ,)
    (NP (PRP you))
    (VP (MD may) (RB not)
      (VP (VB make)
        (NP (PRP it))
        (PP (IN into)
          (NP
            (NP (DT the) (NNS pages))
            (PP (IN of)
              (NP (DT the) (NN book)))))))
    (. .)))

case(course-2, Of-1)
nmod:of(make-15, course-2)
advmod(officiallyreak-8, even-4)
mark(officiallyreak-8, if-5)
nsubj(officiallyreak-8, you-6)
aux(officiallyreak-8, do-7)
advcl(make-15, officiallyreak-8)
det(record-10, a-9)
dobj(officiallyreak-8, record-10)
nsubj(make-15, you-12)
aux(make-15, may-13)
neg(make-15, not-14)
root(ROOT-0, make-15)
dobj(make-15, it-16)
case(pages-19, into-17)
det(pages-19, the-18)
nmod:into(make-15, pages-19)
case(book-22, of-20)
det(book-22, the-21)
nmod:of(pages-19, book-22)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD may)
        (ADVP (RB only))
        (VP (VB get)
          (NP
            (NP (DT a) (NN certificate))
            (SBAR
              (S
                (NP
                  (NP (NNS Thousands))
                  (PP (IN of)
                    (NP (NNS records))))
                (VP (VBP are)
                  (VP (VBN broken)
                    (ADVP (RB annually))))))))))
    (CC but)
    (S
      (NP
        (QP (RB only) (DT a) (JJ few) (CD hundred)))
      (VP (VBP are)
        (VP (VBN included)
          (PP (IN in)
            (NP (DT the) (JJ next) (NNS years) (NN book))))))
    (. .)))

nsubj(get-4, You-1)
aux(get-4, may-2)
advmod(get-4, only-3)
root(ROOT-0, get-4)
det(certificate-6, a-5)
dobj(get-4, certificate-6)
nsubjpass(broken-11, Thousands-7)
case(records-9, of-8)
nmod:of(Thousands-7, records-9)
auxpass(broken-11, are-10)
acl:relcl(certificate-6, broken-11)
advmod(broken-11, annually-12)
cc(get-4, but-13)
advmod(hundred-17, only-14)
advmod(hundred-17, a-15)
advmod(hundred-17, few-16)
nsubjpass(included-19, hundred-17)
auxpass(included-19, are-18)
conj:but(get-4, included-19)
case(book-24, in-20)
det(book-24, the-21)
amod(book-24, next-22)
compound(book-24, years-23)
nmod:in(included-19, book-24)

(ROOT
  (FRAG (CC And)
    (VP (VB be)
      (ADJP (JJ careful)))
    (. !)))

cc(careful-3, And-1)
cop(careful-3, be-2)
root(ROOT-0, careful-3)

(ROOT
  (S
    (NP (DT The) (NNP Guinness) (NN corporation))
    (VP (VBZ takes)
      (NP
        (NP (DT no) (NN responsibility))
        (PP (IN for)
          (NP (NNS accidents)
            (CC or)
            (NNS injuries)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD may)
              (VP (VB occur)
                (PP (IN during)
                  (NP (PRP$ your) (JJ record-breaking) (NN attempt)))))))))
    (. .)))

det(corporation-3, The-1)
compound(corporation-3, Guinness-2)
nsubj(takes-4, corporation-3)
root(ROOT-0, takes-4)
neg(responsibility-6, no-5)
dobj(takes-4, responsibility-6)
nsubj(occur-13, responsibility-6)
case(accidents-8, for-7)
nmod:for(responsibility-6, accidents-8)
cc(accidents-8, or-9)
nmod:for(responsibility-6, injuries-10)
conj:or(accidents-8, injuries-10)
ref(responsibility-6, that-11)
aux(occur-13, may-12)
acl:relcl(responsibility-6, occur-13)
case(attempt-17, during-14)
nmod:poss(attempt-17, your-15)
amod(attempt-17, record-breaking-16)
nmod:during(occur-13, attempt-17)

