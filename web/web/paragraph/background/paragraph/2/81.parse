(ROOT
  (S
    (NP (DT The) (NNP American) (NNP Geo) (NNP Prizm))
    (VP (VBD was)
      (VP (VBN made)
        (PP (IN at)
          (NP
            (NP (DT the) (JJ same) (NN factory))
            (PP (IN as)
              (NP
                (NP (DT the) (JJ Japanese)
                  (NX (NNP Toyota) (NNP Corolla)))
                (PP (IN from)
                  (NP (CD 1989) (TO to) (CD 2002)))))))))
    (. .)))

det(Prizm-4, The-1)
compound(Prizm-4, American-2)
compound(Prizm-4, Geo-3)
nsubjpass(made-6, Prizm-4)
auxpass(made-6, was-5)
root(ROOT-0, made-6)
case(factory-10, at-7)
det(factory-10, the-8)
amod(factory-10, same-9)
nmod:at(made-6, factory-10)
case(Corolla-15, as-11)
det(Corolla-15, the-12)
amod(Corolla-15, Japanese-13)
compound(Corolla-15, Toyota-14)
nmod:as(factory-10, Corolla-15)
case(2002-19, from-16)
nummod(2002-19, 1989-17)
dep(2002-19, to-18)
nmod:from(Corolla-15, 2002-19)

(ROOT
  (S (CC But)
    (, ,)
    (SBAR (RB even) (IN though)
      (S
        (NP (DT the) (JJ former))
        (VP (VBD sold)
          (PP (IN for)
            (ADVP
              (NP ($ US$) (CD 2,000))
              (RBR less)))
          (PP (IN than)
            (NP (DT the) (NN latter))))))
    (, ,)
    (NP
      (QP (RB twice) (RB as) (JJ many))
      (NNPS Toyotas))
    (VP (VBD were)
      (VP (VBN sold)))
    (. .)))

cc(sold-21, But-1)
advmod(sold-7, even-3)
mark(sold-7, though-4)
det(former-6, the-5)
nsubj(sold-7, former-6)
advcl(sold-21, sold-7)
case(less-11, for-8)
dep(2,000-10, US$-9)
nmod:npmod(less-11, 2,000-10)
advcl:for(sold-7, less-11)
case(latter-14, than-12)
det(latter-14, the-13)
nmod:than(sold-7, latter-14)
advmod(many-18, twice-16)
advmod(many-18, as-17)
nummod(Toyotas-19, many-18)
nsubjpass(sold-21, Toyotas-19)
auxpass(sold-21, were-20)
root(ROOT-0, sold-21)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (JJ European) (NNS consumers))
        (VP (VBD trusted)
          (NP (DT the) (NNP Toyota) (NN brand))
          (ADVP (RBR more) (IN than)))))
    (NP (NNP Geo)
      (CC and)
      (PRP they))
    (VP (VBD were)
      (ADJP (JJ happy)
        (S
          (VP (TO to)
            (VP (VB pay)
              (NP (JJR more))
              (PP (IN for)
                (NP (PRP it))))))))
    (. .)))

mark(trusted-4, Because-1)
amod(consumers-3, European-2)
nsubj(trusted-4, consumers-3)
advcl(happy-14, trusted-4)
det(brand-7, the-5)
compound(brand-7, Toyota-6)
dobj(trusted-4, brand-7)
advmod(trusted-4, more-8)
case(more-8, than-9)
nsubj(happy-14, Geo-10)
nsubj(pay-16, Geo-10)
cc(Geo-10, and-11)
conj:and(Geo-10, they-12)
nsubj(happy-14, they-12)
nsubj(pay-16, they-12)
cop(happy-14, were-13)
root(ROOT-0, happy-14)
mark(pay-16, to-15)
xcomp(happy-14, pay-16)
dobj(pay-16, more-17)
case(it-19, for-18)
nmod:for(pay-16, it-19)

(ROOT
  (S
    (NP
      (NP (NNP Today) (POS 's))
      (NNS consumers))
    (ADVP (RB often))
    (VP (VBP have)
      (NP
        (NP (NN difficulty))
        (VP (VBG deciding)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (TO to)
                (VP (VB buy)
                  (SBAR (IN because)
                    (S
                      (NP (JJ many) (NNS products))
                      (VP (VBP are) (RB not)
                        (ADJP (JJ different)
                          (PP (IN in)
                            (NP (NN quality)
                              (CC or)
                              (NNS features))))))))))))))
    (. .)))

nmod:poss(consumers-3, Today-1)
case(Today-1, 's-2)
nsubj(have-5, consumers-3)
advmod(have-5, often-4)
root(ROOT-0, have-5)
dobj(have-5, difficulty-6)
acl(difficulty-6, deciding-7)
nsubj(buy-10, what-8)
mark(buy-10, to-9)
ccomp(deciding-7, buy-10)
mark(different-16, because-11)
amod(products-13, many-12)
nsubj(different-16, products-13)
cop(different-16, are-14)
neg(different-16, not-15)
advcl(buy-10, different-16)
case(quality-18, in-17)
nmod:in(different-16, quality-18)
cc(quality-18, or-19)
nmod:in(different-16, features-20)
conj:or(quality-18, features-20)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP
      (ADJP (JJR more)
        (CC and)
        (JJR more))
      (NNS people))
    (VP (VBP rely)
      (PP (IN on)
        (NP (NN brand) (NNS names))))
    (. .)))

advmod(rely-7, Therefore-1)
amod(people-6, more-3)
cc(more-3, and-4)
conj:and(more-3, more-5)
amod(people-6, more-5)
nsubj(rely-7, people-6)
root(ROOT-0, rely-7)
case(names-10, on-8)
compound(names-10, brand-9)
nmod:on(rely-7, names-10)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (DT a) (NN brand) (NN name))
    (VP (VBZ has)
      (VP (VBN become)
        (NP (DT an) (NN asset))))
    (. .)))

case(fact-2, In-1)
nmod:in(become-8, fact-2)
det(name-6, a-4)
compound(name-6, brand-5)
nsubj(become-8, name-6)
aux(become-8, has-7)
root(ROOT-0, become-8)
det(asset-10, an-9)
xcomp(become-8, asset-10)

(ROOT
  (S
    (NP (DT The) (NNP Coca-Cola) (NN brand) (NN name))
    (VP (VBZ is)
      (VP (VBN valued)
        (PP (IN at)
          (NP
            (NP
              (QP ($ US$) (CD 84) (CD billion)))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (NP
                    (NP (CD 59) (NN percent))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN company) (POS 's))
                        (NN market) (NN value)))))))))))
    (. .)))

det(name-4, The-1)
compound(name-4, Coca-Cola-2)
compound(name-4, brand-3)
nsubjpass(valued-6, name-4)
auxpass(valued-6, is-5)
root(ROOT-0, valued-6)
case(US$-8, at-7)
nmod:at(valued-6, US$-8)
nsubj(percent-15, US$-8)
compound(billion-10, 84-9)
nummod(US$-8, billion-10)
ref(US$-8, which-12)
cop(percent-15, is-13)
nummod(percent-15, 59-14)
acl:relcl(US$-8, percent-15)
case(value-21, of-16)
det(company-18, the-17)
nmod:poss(value-21, company-18)
case(company-18, 's-19)
compound(value-21, market-20)
nmod:of(percent-15, value-21)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB make)
          (NP (JJR more) (NN money)))))
    (, ,)
    (NP (NNS executives))
    (VP (MD must)
      (VP (VB have)
        (NP
          (NP (DT a) (JJ deep) (NN understanding))
          (PP (IN of)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (NNS brands))
                (VP (VBP are))))))
        (, ,)
        (SBAR
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP they))
              (VP (VBP help)
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (NP (NN money))
                      (PP (IN for)
                        (NP (DT the) (NN company)))))))))
          (, ,)
          (CC and)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP they))
              (VP (VBP affect)
                (NP (DT a) (NN company))))))))
    (. .)))

mark(make-2, To-1)
advcl(have-8, make-2)
amod(money-4, more-3)
dobj(make-2, money-4)
nsubj(have-8, executives-6)
aux(have-8, must-7)
root(ROOT-0, have-8)
det(understanding-11, a-9)
amod(understanding-11, deep-10)
dobj(have-8, understanding-11)
mark(are-15, of-12)
dobj(are-15, what-13)
nsubj(are-15, brands-14)
acl(understanding-11, are-15)
advmod(help-19, how-17)
nsubj(help-19, they-18)
nsubj(make-21, they-18)
dep(have-8, help-19)
mark(make-21, to-20)
xcomp(help-19, make-21)
dobj(make-21, money-22)
case(company-25, for-23)
det(company-25, the-24)
nmod:for(make-21, company-25)
cc(help-19, and-27)
advmod(affect-30, how-28)
nsubj(affect-30, they-29)
dep(have-8, affect-30)
conj:and(help-19, affect-30)
det(company-32, a-31)
dobj(affect-30, company-32)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD may)
      (VP (VB have)
        (VP (VBN noticed)
          (SBAR (IN that)
            (S
              (NP (NNS brands))
              (VP (VBP are)
                (NP
                  (NP (DT a) (NN part))
                  (PP (IN of)
                    (NP (PRP$ your) (JJ everyday) (NNS lives))))))))))
    (. .)))

nsubj(noticed-4, You-1)
aux(noticed-4, may-2)
aux(noticed-4, have-3)
root(ROOT-0, noticed-4)
mark(part-9, that-5)
nsubj(part-9, brands-6)
cop(part-9, are-7)
det(part-9, a-8)
ccomp(noticed-4, part-9)
case(lives-13, of-10)
nmod:poss(lives-13, your-11)
amod(lives-13, everyday-12)
nmod:of(part-9, lives-13)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (NN example))
        (, ,)
        (NP
          (NP (JJ first) (NN thing))
          (PP (IN in)
            (NP (DT the) (NN morning))))))
    (, ,)
    (NP (PRP you))
    (VP (MD can)
      (VP (VB go)
        (PP (IN for)
          (NP
            (NP (DT a) (NN run))
            (VP (VBG wearing)
              (NP (NNP Nike) (NNS shoes)))))))
    (. .)))

case(example-2, For-1)
nmod:for(go-12, example-2)
amod(thing-5, first-4)
appos(example-2, thing-5)
case(morning-8, in-6)
det(morning-8, the-7)
nmod:in(thing-5, morning-8)
nsubj(go-12, you-10)
aux(go-12, can-11)
root(ROOT-0, go-12)
case(run-15, for-13)
det(run-15, a-14)
nmod:for(go-12, run-15)
acl(run-15, wearing-16)
compound(shoes-18, Nike-17)
dobj(wearing-16, shoes-18)

(ROOT
  (S
    (ADVP (RB Then))
    (, ,)
    (NP (PRP you))
    (VP (MD might)
      (VP
        (VP (VB drive)
          (PP (TO to)
            (NP
              (NP (DT the) (NN office))
              (PP (IN in)
                (NP (DT a) (JJ new) (NNP Lexus))))))
        (, ,)
        (CC and)
        (VP (VB stop)
          (PRT (RP along))
          (NP
            (NP (DT the) (NN way))
            (PP (IN for)
              (NP
                (NP (DT a) (NN cup))
                (PP (IN of)
                  (NP (NN coffee))))))
          (PP (IN at)
            (NP (NNP Starbucks))))))
    (. .)))

advmod(drive-5, Then-1)
nsubj(drive-5, you-3)
nsubj(stop-15, you-3)
aux(drive-5, might-4)
root(ROOT-0, drive-5)
case(office-8, to-6)
det(office-8, the-7)
nmod:to(drive-5, office-8)
case(Lexus-12, in-9)
det(Lexus-12, a-10)
amod(Lexus-12, new-11)
nmod:in(office-8, Lexus-12)
cc(drive-5, and-14)
conj:and(drive-5, stop-15)
compound:prt(stop-15, along-16)
det(way-18, the-17)
dobj(stop-15, way-18)
case(cup-21, for-19)
det(cup-21, a-20)
nmod:for(way-18, cup-21)
case(coffee-23, of-22)
nmod:of(cup-21, coffee-23)
case(Starbucks-25, at-24)
nmod:at(stop-15, Starbucks-25)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (DT these))
    (VP (VBP are) (RB not)
      (ADVP (RB just))
      (NP
        (NP (NNS shoes))
        (, ,)
        (NP (NNS cars))
        (, ,)
        (CC and)
        (NP (NN coffee))))
    (. .)))

advmod(shoes-7, However-1)
nsubj(shoes-7, these-3)
cop(shoes-7, are-4)
neg(shoes-7, not-5)
advmod(shoes-7, just-6)
root(ROOT-0, shoes-7)
conj:and(shoes-7, cars-9)
cc(shoes-7, and-11)
conj:and(shoes-7, coffee-12)

(ROOT
  (S
    (NP (DT These))
    (VP (VBP are)
      (NP (NNS brands)))
    (. .)))

nsubj(brands-3, These-1)
cop(brands-3, are-2)
root(ROOT-0, brands-3)

(ROOT
  (S
    (NP (DT The) (NNS names))
    (VP (VBP seem)
      (S
        (VP (TO to)
          (VP (VB promise)
            (NP (DT a) (JJ certain) (NN quality)
              (CC and)
              (NN style))
            (SBAR (IN that)
              (S
                (NP (PRP you))
                (VP (VBP rely)
                  (PRT (RP on)))))))))
    (. .)))

det(names-2, The-1)
nsubj(seem-3, names-2)
nsubj(promise-5, names-2)
root(ROOT-0, seem-3)
mark(promise-5, to-4)
xcomp(seem-3, promise-5)
det(quality-8, a-6)
amod(quality-8, certain-7)
dobj(promise-5, quality-8)
cc(quality-8, and-9)
dobj(promise-5, style-10)
conj:and(quality-8, style-10)
mark(rely-13, that-11)
nsubj(rely-13, you-12)
ccomp(promise-5, rely-13)
compound:prt(rely-13, on-14)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ other) (NNS words)))
    (, ,)
    (NP (DT a) (NN brand))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN combination))
          (PP (IN of)
            (NP
              (NP (DT the) (NN product) (POS 's))
              (NN image))))
        (, ,)
        (NP
          (NP (DT the) (NNS promises))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ makes)
                (PP (TO to)
                  (NP (NNS consumers)))))))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (NNS values))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ stands)
                (PP (IN for))))))))
    (. .)))

case(words-3, In-1)
amod(words-3, other-2)
nmod:in(combination-9, words-3)
det(brand-6, a-5)
nsubj(combination-9, brand-6)
cop(combination-9, is-7)
det(combination-9, a-8)
root(ROOT-0, combination-9)
case(image-14, of-10)
det(product-12, the-11)
nmod:poss(image-14, product-12)
case(product-12, 's-13)
nmod:of(combination-9, image-14)
det(promises-17, the-16)
conj:and(combination-9, promises-17)
nsubj(makes-19, it-18)
acl:relcl(promises-17, makes-19)
case(consumers-21, to-20)
nmod:to(makes-19, consumers-21)
cc(combination-9, and-23)
det(values-25, the-24)
conj:and(combination-9, values-25)
nsubj(stands-27, it-26)
acl:relcl(values-25, stands-27)
nmod(stands-27, for-28)

(ROOT
  (S
    (NP
      (NP (DT The) (NN promise))
      (PP (IN of)
        (NP (NNP Nokia)))
      (, ,)
      (PP (IN for)
        (NP (NN example)))
      (, ,))
    (VP (VBZ is)
      (ADJP (JJ consistent) (NN quality)))
    (. .)))

det(promise-2, The-1)
nsubj(quality-11, promise-2)
case(Nokia-4, of-3)
nmod:of(promise-2, Nokia-4)
case(example-7, for-6)
nmod:for(promise-2, example-7)
cop(quality-11, is-9)
dep(quality-11, consistent-10)
root(ROOT-0, quality-11)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (NN addition)))
      (, ,)
      (NP (NNS brands))
      (VP (VBP encourage)
        (S
          (NP (NNS consumers))
          (VP (TO to)
            (VP (VB choose)
              (NP (NNS products))
              (PP (VBN based)
                (PP (IN on)
                  (NP (JJ certain) (NN personality)
                    (CC or)
                    (NN lifestyle) (NNS characteristics)))))))))
    (: :)
    (S
      (NP (NNP Levi) (POS 's))
      (VP (VBZ stands)
        (PP (IN for)
          (NP (NN individualism)))
        (SBAR (IN while)
          (S
            (NP (NNP Nike))
            (VP (VBZ represents)
              (NP (DT a) (`` ``)
                (S
                  (ADVP (RB just))
                  (VP (VB do)
                    (NP (PRP it))))
                ('' '') (NN way))
              (PP (IN of)
                (S
                  (VP (VBG thinking)))))))))
    (. .)))

case(addition-2, In-1)
nmod:in(encourage-5, addition-2)
nsubj(encourage-5, brands-4)
root(ROOT-0, encourage-5)
dobj(encourage-5, consumers-6)
nsubj(choose-8, consumers-6)
mark(choose-8, to-7)
xcomp(encourage-5, choose-8)
dobj(choose-8, products-9)
case(personality-13, based-10)
mwe(based-10, on-11)
amod(personality-13, certain-12)
advcl:based_on(choose-8, personality-13)
cc(personality-13, or-14)
compound(characteristics-16, lifestyle-15)
advcl:based_on(choose-8, characteristics-16)
conj:or(personality-13, characteristics-16)
nsubj(stands-20, Levi-18)
case(Levi-18, 's-19)
parataxis(encourage-5, stands-20)
case(individualism-22, for-21)
nmod:for(stands-20, individualism-22)
mark(represents-25, while-23)
nsubj(represents-25, Nike-24)
advcl(stands-20, represents-25)
det(way-32, a-26)
advmod(do-29, just-28)
dep(way-32, do-29)
dobj(do-29, it-30)
dobj(represents-25, way-32)
mark(thinking-34, of-33)
advcl(represents-25, thinking-34)

(ROOT
  (S
    (NP
      (NP (NNS Companies))
      (PP (IN with)
        (NP (JJ strong) (NNS brands))))
    (VP (VBP make)
      (NP (JJ huge) (NNS benefits)))
    (. .)))

nsubj(make-5, Companies-1)
case(brands-4, with-2)
amod(brands-4, strong-3)
nmod:with(Companies-1, brands-4)
root(ROOT-0, make-5)
amod(benefits-7, huge-6)
dobj(make-5, benefits-7)

(ROOT
  (S
    (NP
      (NP (DT Some))
      (PP (IN of)
        (NP (DT these) (NNS benefits))))
    (VP (VBP are)
      (VP (VBN described)
        (SBAR (IN as)
          (S
            (VP (VBZ follows) (: :)
              (S
                (NP (NNP Brands))
                (VP (VB drive)
                  (NP (NN consumer) (NN choice)))))))))
    (. .)))

nsubjpass(described-6, Some-1)
case(benefits-4, of-2)
det(benefits-4, these-3)
nmod:of(Some-1, benefits-4)
auxpass(described-6, are-5)
root(ROOT-0, described-6)
mark(follows-8, as-7)
advcl(described-6, follows-8)
nsubj(drive-11, Brands-10)
ccomp(follows-8, drive-11)
compound(choice-13, consumer-12)
dobj(drive-11, choice-13)

(ROOT
  (S
    (NP (NNS Consumers))
    (VP (VBP are)
      (ADJP (RBR more) (JJ likely)
        (S
          (VP (TO to)
            (VP
              (VP (VB do)
                (NP (NN business))
                (PP (IN with)
                  (NP
                    (NP (NNS brands))
                    (SBAR
                      (S
                        (NP (PRP they))
                        (VP (VBP know)))))))
              (, ,)
              (VP (VB respect))
              (, ,)
              (CC and)
              (VP (VB trust)))))))
    (. .)))

nsubj(likely-4, Consumers-1)
nsubj(do-6, Consumers-1)
nsubj(respect-13, Consumers-1)
nsubj(trust-16, Consumers-1)
cop(likely-4, are-2)
advmod(likely-4, more-3)
root(ROOT-0, likely-4)
mark(do-6, to-5)
xcomp(likely-4, do-6)
dobj(do-6, business-7)
case(brands-9, with-8)
nmod:with(do-6, brands-9)
nsubj(know-11, they-10)
acl:relcl(brands-9, know-11)
xcomp(likely-4, respect-13)
conj:and(do-6, respect-13)
cc(do-6, and-15)
xcomp(likely-4, trust-16)
conj:and(do-6, trust-16)

(ROOT
  (S
    (NP (NNP Brands))
    (VP (VBP increase)
      (NP (NN consumer) (NN loyalty)))
    (. .)))

nsubj(increase-2, Brands-1)
root(ROOT-0, increase-2)
compound(loyalty-4, consumer-3)
dobj(increase-2, loyalty-4)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (NNS consumers))
        (VP (VBP are)
          (ADJP (RBR more) (JJ likely)
            (S
              (VP (TO to)
                (VP (VB choose)
                  (NP
                    (NP (NNS brands))
                    (SBAR
                      (S
                        (NP (PRP they))
                        (VP (VBP know)
                          (CC and)
                          (VBP trust))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ makes)
      (NP (NN sense))
      (SBAR (IN that)
        (S
          (NP (NNS consumers))
          (VP (VBP have)
            (NP (DT the) (JJS strongest) (NN loyalty))
            (PP (TO to)
              (NP
                (NP (NNS companies))
                (PP (IN with)
                  (NP (JJ good) (NNS brands)))))))))
    (. .)))

mark(likely-5, Because-1)
nsubj(likely-5, consumers-2)
nsubj(choose-7, consumers-2)
cop(likely-5, are-3)
advmod(likely-5, more-4)
advcl(makes-15, likely-5)
mark(choose-7, to-6)
xcomp(likely-5, choose-7)
dobj(choose-7, brands-8)
nsubj(know-10, they-9)
nsubj(trust-12, they-9)
acl:relcl(brands-8, know-10)
cc(know-10, and-11)
acl:relcl(brands-8, trust-12)
conj:and(know-10, trust-12)
nsubj(makes-15, it-14)
root(ROOT-0, makes-15)
dobj(makes-15, sense-16)
mark(have-19, that-17)
nsubj(have-19, consumers-18)
ccomp(makes-15, have-19)
det(loyalty-22, the-20)
amod(loyalty-22, strongest-21)
dobj(have-19, loyalty-22)
case(companies-24, to-23)
nmod:to(have-19, companies-24)
case(brands-27, with-25)
amod(brands-27, good-26)
nmod:with(companies-24, brands-27)

(ROOT
  (S
    (NP (NNP Brands))
    (VP (VB assist)
      (NP (JJ new) (NN market) (NN entry)))
    (. .)))

nsubj(assist-2, Brands-1)
root(ROOT-0, assist-2)
amod(entry-5, new-3)
compound(entry-5, market-4)
dobj(assist-2, entry-5)

(ROOT
  (S
    (NP
      (NP (NNS Companies))
      (PP (IN with)
        (NP (JJ strong) (NNS brands))))
    (VP (VBP are)
      (ADJP (RBR more) (JJ likely)
        (S
          (VP (TO to)
            (VP
              (ADVP (RB successfully))
              (VB enter)
              (NP (JJ new) (NNS markets)))))))
    (. .)))

nsubj(likely-7, Companies-1)
nsubj(enter-10, Companies-1)
case(brands-4, with-2)
amod(brands-4, strong-3)
nmod:with(Companies-1, brands-4)
cop(likely-7, are-5)
advmod(likely-7, more-6)
root(ROOT-0, likely-7)
mark(enter-10, to-8)
advmod(enter-10, successfully-9)
xcomp(likely-7, enter-10)
amod(markets-12, new-11)
dobj(enter-10, markets-12)

(ROOT
  (S
    (NP (DT The) (NNP Disney) (NN brand) (NN name))
    (VP (VBZ is)
      (ADJP (RB so) (JJ strong))
      (SBAR (IN that)
        (S
          (NP (DT the) (NNP Disney) (NNP Cruise) (NNP Line))
          (VP (VBD became)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP (DT the)
                  (ADJP (RBS most) (JJ successful))
                  (JJ new) (NN product) (NNS launches))))
            (PP (IN on)
              (NP (NN record)))))))
    (. .)))

det(name-4, The-1)
compound(name-4, Disney-2)
compound(name-4, brand-3)
nsubj(strong-7, name-4)
cop(strong-7, is-5)
advmod(strong-7, so-6)
root(ROOT-0, strong-7)
mark(became-13, that-8)
det(Line-12, the-9)
compound(Line-12, Disney-10)
compound(Line-12, Cruise-11)
nsubj(became-13, Line-12)
ccomp(strong-7, became-13)
xcomp(became-13, one-14)
case(launches-21, of-15)
det(launches-21, the-16)
advmod(successful-18, most-17)
amod(launches-21, successful-18)
amod(launches-21, new-19)
compound(launches-21, product-20)
nmod:of(one-14, launches-21)
case(record-23, on-22)
nmod:on(became-13, record-23)

(ROOT
  (S
    (NP (NNP Brands))
    (VP (VBP allow)
      (PP (IN for)
        (NP (JJR higher) (NNS prices))))
    (. .)))

nsubj(allow-2, Brands-1)
root(ROOT-0, allow-2)
case(prices-5, for-3)
amod(prices-5, higher-4)
nmod:for(allow-2, prices-5)

(ROOT
  (S
    (NP
      (NP (NNP Mercedes-Benz))
      (, ,)
      (PP (IN for)
        (NP (NN example)))
      (, ,))
    (VP (VBZ is)
      (ADJP (RB so) (JJ famous)
        (PP (IN for)
          (NP (PRP$ its) (JJ high) (NN quality))))
      (SBAR (IN that)
        (S
          (NP (PRP$ its) (NN SUV))
          (VP (VBZ has)
            (VP (VBN been)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB sell)
                      (PP (IN at)
                        (NP (DT a) (JJ high) (NN price)))))))
              (, ,)
              (PP (IN despite)
                (NP (DT the) (NN fact)))
              (SBAR (IN that)
                (S
                  (NP (NNP Mercedes))
                  (VP (VBD had)
                    (ADVP (RB never))
                    (VP (VBN made)
                      (NP (NNS SUVs))
                      (ADVP (RB before)))))))))))
    (. .)))

nsubj(famous-8, Mercedes-Benz-1)
case(example-4, for-3)
nmod:for(Mercedes-Benz-1, example-4)
cop(famous-8, is-6)
advmod(famous-8, so-7)
root(ROOT-0, famous-8)
case(quality-12, for-9)
nmod:poss(quality-12, its-10)
amod(quality-12, high-11)
nmod:for(famous-8, quality-12)
mark(able-18, that-13)
nmod:poss(SUV-15, its-14)
nsubj(able-18, SUV-15)
nsubj(sell-20, SUV-15)
aux(able-18, has-16)
cop(able-18, been-17)
ccomp(famous-8, able-18)
mark(sell-20, to-19)
xcomp(able-18, sell-20)
case(price-24, at-21)
det(price-24, a-22)
amod(price-24, high-23)
nmod:at(sell-20, price-24)
case(fact-28, despite-26)
det(fact-28, the-27)
nmod:despite(able-18, fact-28)
mark(made-33, that-29)
nsubj(made-33, Mercedes-30)
aux(made-33, had-31)
neg(made-33, never-32)
ccomp(able-18, made-33)
dobj(made-33, SUVs-34)
advmod(made-33, before-35)

(ROOT
  (S
    (NP (NNP Brands))
    (VP (VBP attract)
      (NP (NNS employees)))
    (. .)))

nsubj(attract-2, Brands-1)
root(ROOT-0, attract-2)
dobj(attract-2, employees-3)

(ROOT
  (S
    (PP (VBG According)
      (PP (TO to)
        (NP
          (NP (DT a) (NN survey))
          (PP (IN of)
            (NP (NNP MBA) (NNS graduates))))))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (VP (VBG choosing)
          (SBAR
            (WHNP (WDT which) (NN job))
            (S
              (VP (TO to)
                (VP (VB accept))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBD ranked)
      (NP
        (NP (DT the) (NN company) (POS 's))
        (NN brand) (NN name))
      (PP (IN as)
        (NP
          (NP (DT the) (NN number) (CD one) (NN thing))
          (VP (VBG affecting)
            (NP (PRP$ their) (NN decision))))))
    (. .)))

case(survey-4, According-1)
mwe(According-1, to-2)
det(survey-4, a-3)
nmod:according_to(ranked-17, survey-4)
case(graduates-7, of-5)
compound(graduates-7, MBA-6)
nmod:of(survey-4, graduates-7)
advmod(choosing-10, when-9)
advcl(ranked-17, choosing-10)
det(job-12, which-11)
nsubj(accept-14, job-12)
mark(accept-14, to-13)
ccomp(choosing-10, accept-14)
nsubj(ranked-17, they-16)
root(ROOT-0, ranked-17)
det(company-19, the-18)
nmod:poss(name-22, company-19)
case(company-19, 's-20)
compound(name-22, brand-21)
dobj(ranked-17, name-22)
case(thing-27, as-23)
det(thing-27, the-24)
compound(thing-27, number-25)
nummod(thing-27, one-26)
nmod:as(ranked-17, thing-27)
acl(thing-27, affecting-28)
nmod:poss(decision-30, their-29)
dobj(affecting-28, decision-30)

(ROOT
  (S
    (NP
      (NP (NN Brand) (NN name))
      (PP (IN of)
        (NP (DT the) (NN company))))
    (VP (VBD was)
      (ADVP
        (NP (CD 25) (NN percent))
        (JJR higher))
      (PP (IN than)
        (NP (NN salary)))
      (PP (IN on)
        (NP
          (NP (DT the) (NN list))
          (PP (IN of)
            (NP (NNS considerations))))))
    (. .)))

compound(name-2, Brand-1)
nsubj(salary-11, name-2)
case(company-5, of-3)
det(company-5, the-4)
nmod:of(name-2, company-5)
cop(salary-11, was-6)
nummod(percent-8, 25-7)
nmod:npmod(higher-9, percent-8)
advmod(salary-11, higher-9)
case(salary-11, than-10)
root(ROOT-0, salary-11)
case(list-14, on-12)
det(list-14, the-13)
nmod:on(salary-11, list-14)
case(considerations-16, of-15)
nmod:of(list-14, considerations-16)

(ROOT
  (S
    (ADVP (RB Finally))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT a) (NN company))
        (VP (VBZ is)
          (ADJP (VBN concerned)
            (PP (IN with)
              (S
                (VP (VBG making)
                  (NP (NN money)))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD must)
      (VP (VB build)
        (NP (PRP$ its) (NN brand) (NN name))))
    (. .)))

advmod(build-14, Finally-1)
mark(concerned-7, if-3)
det(company-5, a-4)
nsubjpass(concerned-7, company-5)
auxpass(concerned-7, is-6)
advcl(build-14, concerned-7)
mark(making-9, with-8)
advcl(concerned-7, making-9)
dobj(making-9, money-10)
nsubj(build-14, it-12)
aux(build-14, must-13)
root(ROOT-0, build-14)
nmod:poss(name-17, its-15)
compound(name-17, brand-16)
dobj(build-14, name-17)

(ROOT
  (S
    (NP (DT A) (JJ strong) (NN brand))
    (VP (MD can)
      (VP (VB carry)
        (NP (DT a) (NN company))
        (PP
          (PP (IN into)
            (NP (JJ new) (NNS markets)))
          (, ,)
          (PP (IN through)
            (NP (NN change)))
          (, ,)
          (CC and)
          (PP (IN beyond)
            (NP (DT the) (NN competition))))))
    (. .)))

det(brand-3, A-1)
amod(brand-3, strong-2)
nsubj(carry-5, brand-3)
nsubj(carry-5', brand-3)
nsubj(carry-5'', brand-3)
aux(carry-5, can-4)
root(ROOT-0, carry-5)
conj:and(carry-5, carry-5')
conj:and(carry-5, carry-5'')
det(company-7, a-6)
dobj(carry-5, company-7)
case(markets-10, into-8)
amod(markets-10, new-9)
nmod:into(carry-5, markets-10)
case(change-13, through-12)
nmod:through(carry-5'', change-13)
cc(carry-5, and-15)
case(competition-18, beyond-16)
det(competition-18, the-17)
nmod:beyond(carry-5', competition-18)

