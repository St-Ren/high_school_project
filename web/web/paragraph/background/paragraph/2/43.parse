(ROOT
  (S
    (S
      (VP (VB Recycle)
        (NP (PRP$ your) (NN cell) (NNS phones))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD may)
        (VP (VB rescue)
          (NP (JJ African) (NNS gorillas)))))
    (. .)))

root(ROOT-0, Recycle-1)
nmod:poss(phones-4, your-2)
compound(phones-4, cell-3)
dobj(Recycle-1, phones-4)
cc(Recycle-1, and-6)
nsubj(rescue-9, you-7)
aux(rescue-9, may-8)
conj:and(Recycle-1, rescue-9)
amod(gorillas-11, African-10)
dobj(rescue-9, gorillas-11)

(ROOT
  (SQ
    (SBAR
      (WHNP (WDT What) (NN kind))
      (S
        (PP (IN of)
          (NP (NN connection)))
        (, ,)
        (NP (PRP you))
        (VP (MD may)
          (VP (VB ask)))))
    (, ,) (MD could)
    (NP (EX there))
    (ADVP (RB possibly))
    (VP (VB be)
      (ADVP (RB here)))
    (. ?)))

det(kind-2, What-1)
dobj(ask-8, kind-2)
case(connection-4, of-3)
nmod:of(ask-8, connection-4)
nsubj(ask-8, you-6)
aux(ask-8, may-7)
dep(be-13, ask-8)
aux(be-13, could-10)
expl(be-13, there-11)
advmod(be-13, possibly-12)
root(ROOT-0, be-13)
advmod(be-13, here-14)

(ROOT
  (S
    (ADVP (RB Well))
    (, ,)
    (S
      (VP (TO to)
        (VP (VB understand)
          (NP (DT this) (NN connection)))))
    (, ,)
    (NP (PRP we))
    (ADVP (RB first))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB know)
            (SBAR
              (WHNP (WP what))
              (S
                (NP
                  (NP (NNS problems))
                  (NP (PRP$ your) (NN cell) (NNS phones)))
                (VP (MD might)
                  (VP (VB cause)))))))))
    (. .)))

advmod(need-10, Well-1)
mark(understand-4, to-3)
advcl(need-10, understand-4)
det(connection-6, this-5)
dobj(understand-4, connection-6)
nsubj(need-10, we-8)
nsubj(know-12, we-8)
advmod(need-10, first-9)
root(ROOT-0, need-10)
mark(know-12, to-11)
xcomp(need-10, know-12)
dobj(cause-19, what-13)
nsubj(cause-19, problems-14)
nmod:poss(phones-17, your-15)
compound(phones-17, cell-16)
dep(problems-14, phones-17)
aux(cause-19, might-18)
ccomp(know-12, cause-19)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (ADVP (RB already))
        (NP
          (NP (NNS billions))
          (PP (IN of)
            (NP
              (NP (NN cell) (NN phone) (NNS users))
              (ADVP (RB worldwide)))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN number))
      (VP (VBZ is)
        (ADVP (RB still))
        (VP (VBG increasing))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
advmod(are-2, already-3)
nsubj(are-2, billions-4)
case(users-8, of-5)
compound(users-8, cell-6)
compound(users-8, phone-7)
nmod:of(billions-4, users-8)
advmod(users-8, worldwide-9)
cc(are-2, and-11)
det(number-13, the-12)
nsubj(increasing-16, number-13)
aux(increasing-16, is-14)
advmod(increasing-16, still-15)
conj:and(are-2, increasing-16)

(ROOT
  (S
    (NP (JJ Many) (NNS users))
    (ADVP (RB even))
    (VP (VBP have)
      (NP
        (QP (JJR more) (IN than) (CD one))
        (NN cell) (NN phone)))
    (. .)))

amod(users-2, Many-1)
nsubj(have-4, users-2)
advmod(have-4, even-3)
root(ROOT-0, have-4)
advmod(one-7, more-5)
mwe(more-5, than-6)
nummod(phone-9, one-7)
compound(phone-9, cell-8)
dobj(have-4, phone-9)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ average) (NN lifespan))
        (PP (IN of)
          (NP (DT a) (NN cell) (NN phone))))
      (, ,)
      (PP (VBG according)
        (PP (TO to)
          (NP (JJ many) (NNS studies))))
      (, ,)
      (VP (VBZ is)
        (NP
          (QP (JJR less) (IN than) (CD two))
          (NNS years))))
    (, ,) (IN so)
    (S
      (NP
        (NP (NNS billions))
        (PP (IN of)
          (NP (NN cell) (NNS phones))))
      (VP (VBP are)
        (ADVP (IN out)
          (PP (IN of)
            (NP (NN use))))
        (NP (DT every) (NN year))))
    (. .)))

det(lifespan-3, The-1)
amod(lifespan-3, average-2)
nsubj(years-18, lifespan-3)
case(phone-7, of-4)
det(phone-7, a-5)
compound(phone-7, cell-6)
nmod:of(lifespan-3, phone-7)
case(studies-12, according-9)
mwe(according-9, to-10)
amod(studies-12, many-11)
nmod:according_to(years-18, studies-12)
cop(years-18, is-14)
advmod(two-17, less-15)
mwe(less-15, than-16)
nummod(years-18, two-17)
root(ROOT-0, years-18)
dep(years-18, so-20)
nsubj(year-30, billions-21)
case(phones-24, of-22)
compound(phones-24, cell-23)
nmod:of(billions-21, phones-24)
cop(year-30, are-25)
case(use-28, out-26)
mwe(out-26, of-27)
nmod:out_of(year-30, use-28)
det(year-30, every-29)
parataxis(years-18, year-30)

(ROOT
  (SQ (VBP Have)
    (NP (PRP you))
    (VP
      (ADVP (RB ever))
      (VBN wondered)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ happens)
            (PP (TO to)
              (NP (DT all)
                (ADJP (DT these) (JJ old))
                (NN cell) (NNS phones)))))))
    (. ?)))

aux(wondered-4, Have-1)
nsubj(wondered-4, you-2)
advmod(wondered-4, ever-3)
root(ROOT-0, wondered-4)
nsubj(happens-6, what-5)
ccomp(wondered-4, happens-6)
case(phones-12, to-7)
det(phones-12, all-8)
det(old-10, these-9)
amod(phones-12, old-10)
compound(phones-12, cell-11)
nmod:to(happens-6, phones-12)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP
      (NP (CD 2) (NN %))
      (PP (IN of)
        (NP (JJ old) (NN cell) (NNS phones))))
    (VP (MD will)
      (ADVP (RB simply))
      (VP (VB be)
        (VP (VBN thrown)
          (PRT (RP away)))))
    (. .)))

case(fact-2, In-1)
nmod:in(thrown-13, fact-2)
nummod(%-5, 2-4)
nsubjpass(thrown-13, %-5)
case(phones-9, of-6)
amod(phones-9, old-7)
compound(phones-9, cell-8)
nmod:of(%-5, phones-9)
aux(thrown-13, will-10)
advmod(thrown-13, simply-11)
auxpass(thrown-13, be-12)
root(ROOT-0, thrown-13)
compound:prt(thrown-13, away-14)

(ROOT
  (S
    (NP (DT Another)
      (ADJP (CD 7) (NN %)))
    (VP
      (VP (VBP are)
        (VP (VBG lying)
          (PRT (RP around))
          (PP (IN in)
            (NP
              (NP (NNS people) (POS 's))
              (NNS drawers)))))
      (, ,)
      (CC and)
      (VP (MD may)
        (ADVP (RB also))
        (VP (VB end)
          (PRT (RP up))
          (PP (IN in)
            (NP (NNS landfills))))))
    (. .)))

det(%-3, Another-1)
compound(%-3, 7-2)
nsubj(lying-5, %-3)
nsubj(end-15, %-3)
aux(lying-5, are-4)
root(ROOT-0, lying-5)
compound:prt(lying-5, around-6)
case(drawers-10, in-7)
nmod:poss(drawers-10, people-8)
case(people-8, 's-9)
nmod:in(lying-5, drawers-10)
cc(lying-5, and-12)
aux(end-15, may-13)
advmod(end-15, also-14)
conj:and(lying-5, end-15)
compound:prt(end-15, up-16)
case(landfills-18, in-17)
nmod:in(end-15, landfills-18)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ other) (NNS words)))
    (, ,)
    (NP
      (NP (CD 9) (NN %))
      (PP (IN of)
        (NP (JJ old) (NN cell) (NNS phones))))
    (VP (VBP are)
      (VP (VBN treated)
        (PP (IN as)
          (NP (NN trash)))
        (, ,)
        (SBAR (IN although)
          (S
            (NP
              (NP (JJS most))
              (PP (IN of)
                (NP (PRP them))))
            (VP (VBP are)
              (ADVP (RB still))
              (ADJP (JJ usable)))))))
    (. .)))

case(words-3, In-1)
amod(words-3, other-2)
nmod:in(treated-12, words-3)
nummod(%-6, 9-5)
nsubjpass(treated-12, %-6)
case(phones-10, of-7)
amod(phones-10, old-8)
compound(phones-10, cell-9)
nmod:of(%-6, phones-10)
auxpass(treated-12, are-11)
root(ROOT-0, treated-12)
case(trash-14, as-13)
nmod:as(treated-12, trash-14)
mark(usable-22, although-16)
nsubj(usable-22, most-17)
case(them-19, of-18)
nmod:of(most-17, them-19)
cop(usable-22, are-20)
advmod(usable-22, still-21)
advcl(treated-12, usable-22)

(ROOT
  (S
    (NP
      (QP (RB Only) (CD 5))
      (NN %))
    (VP (VBP are)
      (VP (VBN recycled)))
    (. .)))

advmod(5-2, Only-1)
nummod(%-3, 5-2)
nsubjpass(recycled-5, %-3)
auxpass(recycled-5, are-4)
root(ROOT-0, recycled-5)

(ROOT
  (S
    (PP (IN Among)
      (NP (DT these) (JJ recycled) (NN cell) (NNS phones)))
    (, ,)
    (S
      (NP (DT some))
      (VP (VBP are)
        (VP (VBN refurbished)
          (PP (IN for)
            (NP (NN resale))))))
    (, ,)
    (CC and)
    (S
      (NP (DT some))
      (VP (VBP are)
        (VP (VBN donated)
          (PP (IN for)
            (NP (NN charity)
              (CC or)
              (NN emergency) (NN use))))))
    (. .)))

case(phones-5, Among-1)
det(phones-5, these-2)
amod(phones-5, recycled-3)
compound(phones-5, cell-4)
nmod:among(refurbished-9, phones-5)
nsubjpass(refurbished-9, some-7)
auxpass(refurbished-9, are-8)
root(ROOT-0, refurbished-9)
case(resale-11, for-10)
nmod:for(refurbished-9, resale-11)
cc(refurbished-9, and-13)
nsubjpass(donated-16, some-14)
auxpass(donated-16, are-15)
conj:and(refurbished-9, donated-16)
case(use-21, for-17)
compound(use-21, charity-18)
cc(charity-18, or-19)
conj:or(charity-18, emergency-20)
compound(use-21, emergency-20)
nmod:for(donated-16, use-21)

(ROOT
  (S
    (NP (DT The) (NN rest))
    (VP (VBP are)
      (VP (VBN broken)
        (PP (IN into)
          (NP (PRP$ their) (JJ essential) (NNS elements)))
        (PP (IN for)
          (NP (JJ other) (NNS uses)))))
    (. .)))

det(rest-2, The-1)
nsubjpass(broken-4, rest-2)
auxpass(broken-4, are-3)
root(ROOT-0, broken-4)
case(elements-8, into-5)
nmod:poss(elements-8, their-6)
amod(elements-8, essential-7)
nmod:into(broken-4, elements-8)
case(uses-11, for-9)
amod(uses-11, other-10)
nmod:for(broken-4, uses-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD may)
      (ADVP (RB already))
      (VP (VB know)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADJP (JJ important))
              (SBAR (IN that)
                (S
                  (NP (JJ old) (NN cell) (NNS phones))
                  (VP (VB be)
                    (VP (VBN recycled))))))))))
    (. .)))

nsubj(know-4, You-1)
aux(know-4, may-2)
advmod(know-4, already-3)
root(ROOT-0, know-4)
advmod(important-8, why-5)
nsubj(important-8, it-6)
cop(important-8, is-7)
ccomp(know-4, important-8)
mark(recycled-14, that-9)
amod(phones-12, old-10)
compound(phones-12, cell-11)
nsubjpass(recycled-14, phones-12)
auxpass(recycled-14, be-13)
ccomp(important-8, recycled-14)

(ROOT
  (S
    (NP (JJ Cell) (NNS phones))
    (VP (VBP contain)
      (NP
        (NP (JJ many) (JJ dangerous) (NNS chemicals))
        (, ,)
        (PP (JJ such) (IN as)
          (NP (NN copper)
            (CC or)
            (NN lead)))))
    (. .)))

amod(phones-2, Cell-1)
nsubj(contain-3, phones-2)
root(ROOT-0, contain-3)
amod(chemicals-6, many-4)
amod(chemicals-6, dangerous-5)
dobj(contain-3, chemicals-6)
case(copper-10, such-8)
mwe(such-8, as-9)
nmod:such_as(chemicals-6, copper-10)
cc(copper-10, or-11)
nmod:such_as(chemicals-6, lead-12)
conj:or(copper-10, lead-12)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (VP (VBN known)
        (PP (IN as)
          (NP
            (NP
              (NP (NNP Persistent) (, ,) (NNP Bioaccumulative) (, ,)
                (CC and)
                (NNP Toxic) (NNP Chemicals))
              (PRN (-LRB- -LRB-)
                (NP (NNP PBTs))
                (-RRB- -RRB-)))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (MD will)
                  (VP
                    (VP (VB stay)
                      (PP (IN in)
                        (NP
                          (NP (PRP$ our) (NN environment))
                          (PP (IN for)
                            (NP (DT a) (JJ long) (NN time))))))
                    (CC and)
                    (VP (VB harm)
                      (NP (VBG living) (NNS creatures)))))))))))
    (. .)))

nsubjpass(known-3, They-1)
auxpass(known-3, are-2)
root(ROOT-0, known-3)
case(Bioaccumulative-7, as-4)
compound(Bioaccumulative-7, Persistent-5)
nmod:as(known-3, Bioaccumulative-7)
nsubj(stay-18, Bioaccumulative-7)
nsubj(harm-27, Bioaccumulative-7)
cc(Bioaccumulative-7, and-9)
compound(Chemicals-11, Toxic-10)
nmod:as(known-3, Chemicals-11)
conj:and(Bioaccumulative-7, Chemicals-11)
nsubj(stay-18, Chemicals-11)
appos(Bioaccumulative-7, PBTs-13)
ref(Bioaccumulative-7, which-16)
aux(stay-18, will-17)
acl:relcl(Bioaccumulative-7, stay-18)
case(environment-21, in-19)
nmod:poss(environment-21, our-20)
nmod:in(stay-18, environment-21)
case(time-25, for-22)
det(time-25, a-23)
amod(time-25, long-24)
nmod:for(environment-21, time-25)
cc(stay-18, and-26)
acl:relcl(Bioaccumulative-7, harm-27)
conj:and(stay-18, harm-27)
amod(creatures-29, living-28)
dobj(harm-27, creatures-29)

(ROOT
  (S
    (NP (DT Some) (NNS people))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (VP (VBP are)
      (ADJP (JJ imaginative) (RB enough)
        (S
          (VP (TO to)
            (VP (VB believe)
              (S
                (VP (VBG recycling)
                  (SBAR
                    (S
                      (NP (JJ old) (NN cell) (NNS phones))
                      (VP (MD may)
                        (VP (VB have)
                          (NP (NN something))
                          (S
                            (VP (TO to)
                              (VP (VB do)
                                (PP (IN with)
                                  (NP
                                    (NP (DT the) (NN well-being))
                                    (PP (IN of)
                                      (NP (JJ far-away) (JJ African) (NNS gorillas)))))))))))))))))))
    (. .)))

det(people-2, Some-1)
nsubj(imaginative-7, people-2)
nsubj(believe-10, people-2)
advmod(imaginative-7, however-4)
cop(imaginative-7, are-6)
root(ROOT-0, imaginative-7)
advmod(imaginative-7, enough-8)
mark(believe-10, to-9)
xcomp(imaginative-7, believe-10)
xcomp(believe-10, recycling-11)
amod(phones-14, old-12)
compound(phones-14, cell-13)
nsubj(have-16, phones-14)
aux(have-16, may-15)
ccomp(recycling-11, have-16)
dobj(have-16, something-17)
mark(do-19, to-18)
advcl(have-16, do-19)
case(well-being-22, with-20)
det(well-being-22, the-21)
nmod:with(do-19, well-being-22)
case(gorillas-26, of-23)
amod(gorillas-26, far-away-24)
amod(gorillas-26, African-25)
nmod:of(well-being-22, gorillas-26)

(ROOT
  (SINV
    (S
      (NP
        (NP (DT The) (NN key))
        (PP (TO to)
          (NP (PDT such) (DT a) (NN connection))))
      (VP (VBZ lies)
        (PP (IN in)
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP (DT the) (NNPS PBTs)))))))
    (, ,)
    (VP (VBD called))
    (NP
      (NP (NN coltan))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBZ is)
            (ADVP (RB widely))
            (VP (VBN used)
              (PP (IN in)
                (NP (NN cell) (NNS phones))))))))
    (. .)))

det(key-2, The-1)
nsubj(lies-7, key-2)
case(connection-6, to-3)
det:predet(connection-6, such-4)
det(connection-6, a-5)
nmod:to(key-2, connection-6)
ccomp(called-14, lies-7)
case(one-9, in-8)
nmod:in(lies-7, one-9)
case(PBTs-12, of-10)
det(PBTs-12, the-11)
nmod:of(one-9, PBTs-12)
root(ROOT-0, called-14)
nsubj(called-14, coltan-15)
nsubjpass(used-20, coltan-15)
ref(coltan-15, which-17)
auxpass(used-20, is-18)
advmod(used-20, widely-19)
acl:relcl(coltan-15, used-20)
case(phones-23, in-21)
compound(phones-23, cell-22)
nmod:in(used-20, phones-23)

(ROOT
  (S
    (NP
      (NP (JJ Eighty) (NN percent))
      (PP (IN of)
        (NP
          (NP (DT the) (NN world) (POS 's))
          (JJ known) (NN coltan) (NN supply))))
    (VP (VBZ is)
      (PP (IN from)
        (NP
          (NP (DT the) (JJ Democratic) (NN Republic))
          (PP (IN of)
            (NP (DT the) (NNP Congo)))))
      (, ,)
      (PP (IN in)
        (NP
          (NP (JJ central) (NNP Africa))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ is)
                (ADVP (RB also))
                (NP
                  (NP (NN home))
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN world) (POS 's))
                      (VBN endangered) (NNS gorillas))))))))))
    (. .)))

amod(percent-2, Eighty-1)
nsubj(Republic-14, percent-2)
case(supply-9, of-3)
det(world-5, the-4)
nmod:poss(supply-9, world-5)
case(world-5, 's-6)
amod(supply-9, known-7)
compound(supply-9, coltan-8)
nmod:of(percent-2, supply-9)
cop(Republic-14, is-10)
case(Republic-14, from-11)
det(Republic-14, the-12)
amod(Republic-14, Democratic-13)
root(ROOT-0, Republic-14)
case(Congo-17, of-15)
det(Congo-17, the-16)
nmod:of(Republic-14, Congo-17)
case(Africa-21, in-19)
amod(Africa-21, central-20)
nmod:in(Republic-14, Africa-21)
nsubj(home-26, Africa-21)
ref(Africa-21, which-23)
cop(home-26, is-24)
advmod(home-26, also-25)
acl:relcl(Africa-21, home-26)
case(gorillas-32, to-27)
det(world-29, the-28)
nmod:poss(gorillas-32, world-29)
case(world-29, 's-30)
amod(gorillas-32, endangered-31)
nmod:to(home-26, gorillas-32)

(ROOT
  (S
    (SBAR (IN In) (NN order)
      (S
        (VP (TO to)
          (VP (VB mine)
            (NP (DT the) (NN coltan))))))
    (, ,)
    (NP (NNS workers))
    (ADVP (RB often))
    (VP (VBP overrun)
      (CC and)
      (VBP destroy)
      (NP (DT the) (JJ once-protected) (NN gorilla) (NN habitat)))
    (. .)))

mark(mine-4, In-1)
mwe(In-1, order-2)
mark(mine-4, to-3)
advcl(overrun-10, mine-4)
det(coltan-6, the-5)
dobj(mine-4, coltan-6)
nsubj(overrun-10, workers-8)
nsubj(destroy-12, workers-8)
advmod(overrun-10, often-9)
root(ROOT-0, overrun-10)
cc(overrun-10, and-11)
conj:and(overrun-10, destroy-12)
det(habitat-16, the-13)
amod(habitat-16, once-protected-14)
compound(habitat-16, gorilla-15)
dobj(overrun-10, habitat-16)

(ROOT
  (S
    (PP (IN Over)
      (NP
        (NP (DT the) (NN period))
        (PP (IN of)
          (NP
            (QP (RB just) (DT a) (JJ few))
            (NNS years)))))
    (, ,)
    (NP (EX there))
    (VP (VBZ has)
      (VP (VBN been)
        (NP
          (NP (DT a)
            (ADJP (CD 9) (NN %))
            (NN decline))
          (PP (IN in)
            (NP (DT the) (NN gorilla) (NN population))))))
    (. .)))

case(period-3, Over-1)
det(period-3, the-2)
nmod:over(decline-16, period-3)
case(years-8, of-4)
advmod(few-7, just-5)
advmod(few-7, a-6)
nummod(years-8, few-7)
nmod:of(period-3, years-8)
expl(decline-16, there-10)
aux(decline-16, has-11)
cop(decline-16, been-12)
det(decline-16, a-13)
compound(%-15, 9-14)
amod(decline-16, %-15)
root(ROOT-0, decline-16)
case(population-20, in-17)
det(population-20, the-18)
compound(population-20, gorilla-19)
nmod:in(decline-16, population-20)

(ROOT
  (S
    (PP (IN Because)
      (PP (IN of)
        (NP (DT the) (JJ worldwide) (NN cell) (NN phone) (NN boom))))
    (, ,)
    (NP
      (NP (DT the) (VBG increasing) (NN demand))
      (PP (IN for)
        (NP (NN coltan))))
    (VP (VBZ is)
      (ADJP (JJ unavoidable)))
    (. .)))

case(boom-7, Because-1)
case(boom-7, of-2)
det(boom-7, the-3)
amod(boom-7, worldwide-4)
compound(boom-7, cell-5)
compound(boom-7, phone-6)
nmod:of(unavoidable-15, boom-7)
det(demand-11, the-9)
amod(demand-11, increasing-10)
nsubj(unavoidable-15, demand-11)
case(coltan-13, for-12)
nmod:for(demand-11, coltan-13)
cop(unavoidable-15, is-14)
root(ROOT-0, unavoidable-15)

(ROOT
  (X
    (ADVP (RB However))
    (, ,)
    (X (WP what))
    (NP
      (NP (RB about) (DT the) (NN future))
      (PP (IN of)
        (NP (DT these) (JJ endangered) (NNS gorillas))))
    (. ?)))

dep(future-6, However-1)
dep(future-6, what-3)
advmod(future-6, about-4)
det(future-6, the-5)
root(ROOT-0, future-6)
case(gorillas-10, of-7)
det(gorillas-10, these-8)
amod(gorillas-10, endangered-9)
nmod:of(future-6, gorillas-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Santa) (NNP Barbara) (NNP Zoo))
      (CC and)
      (NP
        (NP (CD 8) (JJ other) (NNS zoos))
        (PP (IN across)
          (NP (DT the) (NNP United) (NNPS States)))))
    (VP (VBP hope)
      (S
        (VP (TO to)
          (VP (VB come)
            (PP (TO to)
              (NP (PRP$ their) (NN rescue)))))))
    (. .)))

det(Zoo-4, The-1)
compound(Zoo-4, Santa-2)
compound(Zoo-4, Barbara-3)
nsubj(hope-13, Zoo-4)
nsubj(come-15, Zoo-4)
cc(Zoo-4, and-5)
nummod(zoos-8, 8-6)
amod(zoos-8, other-7)
conj:and(Zoo-4, zoos-8)
nsubj(hope-13, zoos-8)
nsubj(come-15, zoos-8)
case(States-12, across-9)
det(States-12, the-10)
compound(States-12, United-11)
nmod:across(zoos-8, States-12)
root(ROOT-0, hope-13)
mark(come-15, to-14)
xcomp(hope-13, come-15)
case(rescue-18, to-16)
nmod:poss(rescue-18, their-17)
nmod:to(come-15, rescue-18)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (VP (VBG running)
        (NP
          (NP (DT a) (NN program))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ highlights)
                (NP
                  (NP (DT this) (NN connection))
                  (PP (IN between)
                    (NP (NN coltan)
                      (CC and)
                      (NNS gorillas))))))))))
    (. .)))

nsubj(running-3, They-1)
aux(running-3, are-2)
root(ROOT-0, running-3)
det(program-5, a-4)
dobj(running-3, program-5)
nsubj(highlights-7, program-5)
ref(program-5, that-6)
acl:relcl(program-5, highlights-7)
det(connection-9, this-8)
dobj(highlights-7, connection-9)
case(coltan-11, between-10)
nmod:between(connection-9, coltan-11)
cc(coltan-11, and-12)
nmod:between(connection-9, gorillas-13)
conj:and(coltan-11, gorillas-13)

(ROOT
  (S
    (NP (PRP They))
    (VP (VB educate)
      (NP (NNS people))
      (S
        (VP (TO to)
          (VP (VB recycle)
            (NP (PRP$ their) (JJ old) (NN cell) (NNS phones)))))
      (, ,)
      (S
        (VP (VBG hoping)
          (S
            (VP (TO to)
              (VP (VB reduce)
                (NP
                  (NP (DT the) (NN demand))
                  (PP (IN for)
                    (NP (NN coltan))))))))))
    (. .)))

nsubj(educate-2, They-1)
root(ROOT-0, educate-2)
dobj(educate-2, people-3)
mark(recycle-5, to-4)
advcl(educate-2, recycle-5)
nmod:poss(phones-9, their-6)
amod(phones-9, old-7)
compound(phones-9, cell-8)
dobj(recycle-5, phones-9)
xcomp(educate-2, hoping-11)
mark(reduce-13, to-12)
xcomp(hoping-11, reduce-13)
det(demand-15, the-14)
dobj(reduce-13, demand-15)
case(coltan-17, for-16)
nmod:for(demand-15, coltan-17)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VB refurbish)
        (NP
          (NP (DT the) (JJ collected) (JJ old) (NN cell) (NNS phones))
          (PP (IN for)
            (NP (NN resale)))))
      (, ,)
      (CC and)
      (VP (VB use)
        (NP (DT the) (NN money)
          (S
            (VP (TO to)
              (VP (VB support)
                (NP (NN rescue) (NNS projects))
                (PP (IN for)
                  (NP (DT the) (NNS gorillas)))))))))
    (. .)))

nsubj(refurbish-2, They-1)
nsubj(use-12, They-1)
root(ROOT-0, refurbish-2)
det(phones-7, the-3)
amod(phones-7, collected-4)
amod(phones-7, old-5)
compound(phones-7, cell-6)
dobj(refurbish-2, phones-7)
case(resale-9, for-8)
nmod:for(phones-7, resale-9)
cc(refurbish-2, and-11)
conj:and(refurbish-2, use-12)
det(money-14, the-13)
dobj(use-12, money-14)
mark(support-16, to-15)
acl(money-14, support-16)
compound(projects-18, rescue-17)
dobj(support-16, projects-18)
case(gorillas-21, for-19)
det(gorillas-21, the-20)
nmod:for(support-16, gorillas-21)

(ROOT
  (S
    (ADVP (RB Maybe))
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ over-optimistic)
        (S
          (VP (TO to)
            (VP (VB assume)
              (SBAR (IN that)
                (S
                  (S
                    (VP (VBG recycling)
                      (NP (JJ old) (NN cell) (NNS phones))))
                  (VP (MD can)
                    (VP (VB rescue)
                      (NP (DT the) (NNS gorillas))
                      (PP (IN from)
                        (NP (NN extinction))))))))))))
    (. .)))

advmod(over-optimistic-4, Maybe-1)
nsubj(over-optimistic-4, it-2)
nsubj(assume-6, it-2)
cop(over-optimistic-4, is-3)
root(ROOT-0, over-optimistic-4)
mark(assume-6, to-5)
xcomp(over-optimistic-4, assume-6)
mark(rescue-13, that-7)
csubj(rescue-13, recycling-8)
amod(phones-11, old-9)
compound(phones-11, cell-10)
dobj(recycling-8, phones-11)
aux(rescue-13, can-12)
ccomp(assume-6, rescue-13)
det(gorillas-15, the-14)
dobj(rescue-13, gorillas-15)
case(extinction-17, from-16)
nmod:from(rescue-13, extinction-17)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (DT this) (NN program))
    (VP (VBZ raises)
      (NP (JJ public) (NN awareness))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ negligent)
              (S
                (VP (TO to)
                  (VP (VB throw)
                    (PRT (RP away))
                    (NP (JJ outdated) (NN cell) (NNS phones))
                    (PP (RB instead) (IN of)
                      (S
                        (VP (VBG recycling)
                          (NP (PRP them)))))))))))))
    (. .)))

advmod(raises-5, However-1)
det(program-4, this-3)
nsubj(raises-5, program-4)
root(ROOT-0, raises-5)
amod(awareness-7, public-6)
dobj(raises-5, awareness-7)
mark(negligent-11, that-8)
nsubj(negligent-11, it-9)
nsubj(throw-13, it-9)
cop(negligent-11, is-10)
ccomp(raises-5, negligent-11)
mark(throw-13, to-12)
xcomp(negligent-11, throw-13)
compound:prt(throw-13, away-14)
amod(phones-17, outdated-15)
compound(phones-17, cell-16)
dobj(throw-13, phones-17)
mark(recycling-20, instead-18)
mwe(instead-18, of-19)
advcl(throw-13, recycling-20)
dobj(recycling-20, them-21)

(ROOT
  (S
    (CONJP (RB Not) (JJ only))
    (SINV (VBZ does)
      (NP (PRP it))
      (VP (VB pollute)
        (NP (DT the) (NN environment))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ endangers)
        (NP
          (NP (DT the) (NN survival))
          (PP (IN of)
            (NP
              (NP (DT a) (NN species))
              (PP (RB somewhere) (IN on)
                (NP (PRP$ our) (NN planet))))))))
    (. .)))

neg(only-2, Not-1)
cc:preconj(pollute-5, only-2)
aux(pollute-5, does-3)
nsubj(pollute-5, it-4)
root(ROOT-0, pollute-5)
det(environment-7, the-6)
dobj(pollute-5, environment-7)
cc(pollute-5, but-9)
nsubj(endangers-11, it-10)
conj:but(pollute-5, endangers-11)
det(survival-13, the-12)
dobj(endangers-11, survival-13)
case(species-16, of-14)
det(species-16, a-15)
nmod:of(survival-13, species-16)
advmod(planet-20, somewhere-17)
case(planet-20, on-18)
nmod:poss(planet-20, our-19)
nmod:on(species-16, planet-20)

(ROOT
  (S (RB So)
    (VP (VB think)
      (ADVP (RB twice))
      (SBAR (IN before)
        (S
          (NP (PRP you))
          (VP (VBP get)
            (NP (DT a) (JJ new) (NN cell) (NN phone))))))
    (. .)))

advmod(think-2, So-1)
root(ROOT-0, think-2)
advmod(think-2, twice-3)
mark(get-6, before-4)
nsubj(get-6, you-5)
advcl(think-2, get-6)
det(phone-10, a-7)
amod(phone-10, new-8)
compound(phone-10, cell-9)
dobj(get-6, phone-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP do)
          (VP (VB need)
            (NP (DT a) (JJ new) (NN one))))))
    (, ,)
    (VP (VB be)
      (ADJP (JJ sure)
        (S
          (VP (TO to)
            (VP (VB recycle)
              (NP (PRP$ your) (JJ old) (NN one)))))))
    (. .)))

mark(need-4, If-1)
nsubj(need-4, you-2)
aux(need-4, do-3)
advcl(sure-10, need-4)
det(one-7, a-5)
amod(one-7, new-6)
dobj(need-4, one-7)
cop(sure-10, be-9)
root(ROOT-0, sure-10)
mark(recycle-12, to-11)
xcomp(sure-10, recycle-12)
nmod:poss(one-15, your-13)
amod(one-15, old-14)
dobj(recycle-12, one-15)

