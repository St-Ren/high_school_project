(ROOT
  (NP
    (NP (NNP M-E-M-O))
    (: :)
    (NP
      (NP (NNP Four) (NNP Tips))
      (PP (IN for)
        (NP (DT a) (NNP Better) (NN Memory))))
    (. .)))

root(ROOT-0, M-E-M-O-1)
compound(Tips-4, Four-3)
dep(M-E-M-O-1, Tips-4)
case(Memory-8, for-5)
det(Memory-8, a-6)
compound(Memory-8, Better-7)
nmod:for(Tips-4, Memory-8)

(ROOT
  (S (`` ``)
    (VP (VB Memorize)
      (NP (DT these) (NNS words)))
    (. .) ('' '')))

root(ROOT-0, Memorize-2)
det(words-4, these-3)
dobj(Memorize-2, words-4)

(ROOT
  (S (`` ``)
    (VP (VB Learn)
      (NP (DT this) (NN spelling) (NN rule)))
    (. .) ('' '')))

root(ROOT-0, Learn-2)
det(rule-5, this-3)
compound(rule-5, spelling-4)
dobj(Learn-2, rule-5)

(ROOT
  (S (`` ``)
    (VP (VB Do) (RB n't)
      (VP (VB forget)
        (NP (DT the) (NN quiz))
        (NP (NN tomorrow))))
    (. .) ('' '')))

aux(forget-4, Do-2)
neg(forget-4, n't-3)
root(ROOT-0, forget-4)
det(quiz-6, the-5)
dobj(forget-4, quiz-6)
nmod:tmod(forget-4, tomorrow-7)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB remember)
              (NP
                (NP (NNS things))
                (NP (DT every) (NN day))))))))
    (, ,)
    (CC but)
    (S
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (VBP do))))
      (NP (PRP you))
      (VP (VBP do)
        (NP (PRP it))))
    (. ?)))

nsubj(have-2, You-1)
nsubj(remember-4, You-1)
root(ROOT-0, have-2)
mark(remember-4, to-3)
xcomp(have-2, remember-4)
dobj(remember-4, things-5)
det(day-7, every-6)
dep(things-5, day-7)
cc(have-2, but-9)
advmod(do-11, how-10)
advcl(do-13, do-11)
nsubj(do-13, you-12)
conj:but(have-2, do-13)
dobj(do-13, it-14)

(ROOT
  (S
    (NP (PRP You))
    (VP
      (VP (VB find)
        (NP (DT a) (NN telephone) (NN number))
        (PP (IN in)
          (NP (DT the) (NN phone) (NN book))))
      (, ,)
      (VP (VB dial)
        (NP (PRP it)))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB then) (RB quickly))
        (VB forget)
        (NP (PRP it))))
    (. .)))

nsubj(find-2, You-1)
nsubj(dial-11, You-1)
nsubj(forget-17, You-1)
root(ROOT-0, find-2)
det(number-5, a-3)
compound(number-5, telephone-4)
dobj(find-2, number-5)
case(book-9, in-6)
det(book-9, the-7)
compound(book-9, phone-8)
nmod:in(find-2, book-9)
conj:and(find-2, dial-11)
dobj(dial-11, it-12)
cc(find-2, and-14)
advmod(quickly-16, then-15)
advmod(forget-17, quickly-16)
conj:and(find-2, forget-17)
dobj(forget-17, it-18)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (PRP$ your) (JJ short-term) (NN memory))
        (PP (IN at)
          (NP (NN work)))))
    (. .)))

nsubj(memory-5, This-1)
cop(memory-5, is-2)
nmod:poss(memory-5, your-3)
amod(memory-5, short-term-4)
root(ROOT-0, memory-5)
case(work-7, at-6)
nmod:at(memory-5, work-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ lasts)
      (NP
        (QP (JJR less) (IN than) (CD thirty))
        (NNS seconds)))
    (. .)))

nsubj(lasts-2, It-1)
root(ROOT-0, lasts-2)
advmod(thirty-5, less-3)
mwe(less-3, than-4)
nummod(seconds-6, thirty-5)
dobj(lasts-2, seconds-6)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB need)
        (S
          (VP (TO to)
            (VP (VB look)
              (PRT (RP up))
              (NP
                (NP (PRP$ your) (JJS best) (NN friend))
                (POS 's) (NN number))
              (PP (IN in)
                (NP (DT the) (NN phone) (NN book)))
              (SBAR (IN because)
                (S
                  (NP (PRP you))
                  (ADVP (RB already))
                  (VP (VBP know)
                    (NP (PRP it))))))))))
    (. .)))

advmod(need-6, However-1)
nsubj(need-6, you-3)
nsubj(look-8, you-3)
aux(need-6, do-4)
neg(need-6, n't-5)
root(ROOT-0, need-6)
mark(look-8, to-7)
xcomp(need-6, look-8)
compound:prt(look-8, up-9)
nmod:poss(friend-12, your-10)
amod(friend-12, best-11)
nmod:poss(number-14, friend-12)
case(number-14, 's-13)
dobj(look-8, number-14)
case(book-18, in-15)
det(book-18, the-16)
compound(book-18, phone-17)
nmod:in(look-8, book-18)
mark(know-22, because-19)
nsubj(know-22, you-20)
advmod(know-22, already-21)
advcl(look-8, know-22)
dobj(know-22, it-23)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (SBAR (IN because)
        (S
          (NP (DT the) (NN information))
          (VP (VBZ is)
            (VP (VBN stored)
              (PP (IN in)
                (NP (PRP$ your) (JJ long-term) (NN memory))))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
mark(stored-7, because-3)
det(information-5, the-4)
nsubjpass(stored-7, information-5)
auxpass(stored-7, is-6)
advcl(is-2, stored-7)
case(memory-11, in-8)
nmod:poss(memory-11, your-9)
amod(memory-11, long-term-10)
nmod:in(stored-7, memory-11)

(ROOT
  (SQ (VBP Have)
    (NP (PRP you))
    (VP
      (ADVP (RB ever))
      (VBN wondered)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP you))
          (VP (VBP forget)
            (NP (NNS things))
            (ADVP (RB easily))))))
    (. ?)))

aux(wondered-4, Have-1)
nsubj(wondered-4, you-2)
advmod(wondered-4, ever-3)
root(ROOT-0, wondered-4)
advmod(forget-7, why-5)
nsubj(forget-7, you-6)
ccomp(wondered-4, forget-7)
dobj(forget-7, things-8)
advmod(forget-7, easily-9)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB find)
      (S
        (NP (PRP it))
        (ADJP (JJ difficult)
          (S
            (VP (TO to)
              (VP (VB learn)
                (NP (JJ new) (NN information))
                (PP (IN by)
                  (NP (NN heart)))))))))
    (. ?)))

aux(find-3, Do-1)
nsubj(find-3, you-2)
root(ROOT-0, find-3)
nsubj(difficult-5, it-4)
nsubj(learn-7, it-4)
xcomp(find-3, difficult-5)
mark(learn-7, to-6)
xcomp(difficult-5, learn-7)
amod(information-9, new-8)
dobj(learn-7, information-9)
case(heart-11, by-10)
nmod:by(learn-7, heart-11)

(ROOT
  (S
    (S
      (NP (DT The) (JJ following) (NNS tips))
      (VP (MD will)
        (VP (VB help)
          (S
            (NP (PRP you))
            (VP (TO to)
              (VP (VB improve)
                (NP (PRP$ your) (NN memory))))))))
    (: :)
    (S
      (NP (NNP Make))
      (VP (VBP sense)
        (SBAR
          (S
            (NP (PRP It))
            (VP (VBZ is)
              (ADJP (JJR easier))
              (S
                (VP (TO to)
                  (VP (VB remember)
                    (NP (NN information)))))
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP (VBP understand)
                    (NP (PRP it))))))))))
    (. .)))

det(tips-3, The-1)
amod(tips-3, following-2)
nsubj(help-5, tips-3)
aux(help-5, will-4)
root(ROOT-0, help-5)
dobj(help-5, you-6)
nsubj(improve-8, you-6)
mark(improve-8, to-7)
xcomp(help-5, improve-8)
nmod:poss(memory-10, your-9)
dobj(improve-8, memory-10)
nsubj(sense-13, Make-12)
parataxis(help-5, sense-13)
nsubj(easier-16, It-14)
nsubj(remember-18, It-14)
cop(easier-16, is-15)
ccomp(sense-13, easier-16)
mark(remember-18, to-17)
xcomp(easier-16, remember-18)
dobj(remember-18, information-19)
mark(understand-22, if-20)
nsubj(understand-22, you-21)
advcl(easier-16, understand-22)
dobj(understand-22, it-23)

(ROOT
  (S
    (NP (NN Textbook) (NNS units))
    (VP (MD should) (RB not)
      (VP (VB be)
        (VP (VBN read)
          (PP (IN like)
            (NP
              (NP (NNS chapters))
              (PP (IN in)
                (NP (DT a) (NN novel))))))))
    (. .)))

compound(units-2, Textbook-1)
nsubjpass(read-6, units-2)
aux(read-6, should-3)
neg(read-6, not-4)
auxpass(read-6, be-5)
root(ROOT-0, read-6)
case(chapters-8, like-7)
nmod:like(read-6, chapters-8)
case(novel-11, in-9)
det(novel-11, a-10)
nmod:in(chapters-8, novel-11)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP read)
          (NP (DT a) (NN lesson)))))
    (, ,)
    (VP (VB skim)
      (PP (IN through)
        (NP
          (NP (PDT all) (DT the) (NNS headings))
          (ADVP (RB first))))
      (S
        (VP (TO to)
          (VP (VB get)
            (NP (DT the) (JJ main) (NNS ideas))))))
    (. .)))

advmod(read-3, When-1)
nsubj(read-3, you-2)
advcl(skim-7, read-3)
det(lesson-5, a-4)
dobj(read-3, lesson-5)
root(ROOT-0, skim-7)
case(headings-11, through-8)
det:predet(headings-11, all-9)
det(headings-11, the-10)
nmod:through(skim-7, headings-11)
advmod(headings-11, first-12)
mark(get-14, to-13)
xcomp(skim-7, get-14)
det(ideas-17, the-15)
amod(ideas-17, main-16)
dobj(get-14, ideas-17)

(ROOT
  (S
    (NP (NNP Next))
    (VP (VBP ask)
      (SBAR
        (S
          (NP (PRP yourself))
          (VP (VBZ questions)
            (PP (IN by)
              (S
                (VP (VBG adding)
                  (NP
                    (NP (NNS words))
                    (PP (JJ such) (IN as)
                      (NP (`` ``) (NN who) (, ,) ('' '') (`` ``) (NN what) (, ,) ('' '') (`` ``) (NN where) (, ,) ('' '') (`` ``) (NN when) (, ,) ('' '') (`` ``) (NN why) ('' '')
                        (CC or)
                        (`` ``) (NN how) ('' ''))))
                  (PP (TO to)
                    (NP (DT the) (NN headings)
                      (S
                        (VP (TO to)
                          (VP (VB get)
                            (NP (DT the) (JJ big) (NN picture))))))))))))))
    (. .)))

nsubj(ask-2, Next-1)
root(ROOT-0, ask-2)
nsubj(questions-4, yourself-3)
ccomp(ask-2, questions-4)
mark(adding-6, by-5)
advcl(questions-4, adding-6)
dobj(adding-6, words-7)
case(why-27, such-8)
mwe(such-8, as-9)
compound(why-27, who-11)
compound(why-27, what-15)
compound(why-27, where-19)
compound(why-27, when-23)
nmod:such_as(words-7, why-27)
cc(why-27, or-29)
nmod:such_as(words-7, how-31)
conj:or(why-27, how-31)
case(headings-35, to-33)
det(headings-35, the-34)
nmod:to(adding-6, headings-35)
mark(get-37, to-36)
acl(headings-35, get-37)
det(picture-40, the-38)
amod(picture-40, big-39)
dobj(get-37, picture-40)

(ROOT
  (S (RB Then)
    (VP (VB try)
      (S
        (VP (TO to)
          (VP (VB put)
            (NP (DT the) (NN information))
            (ADVP (RB together))
            (PP (IN in)
              (NP (PRP$ your) (JJ own) (NNS words)))))))
    (. .)))

advmod(try-2, Then-1)
root(ROOT-0, try-2)
mark(put-4, to-3)
xcomp(try-2, put-4)
det(information-6, the-5)
dobj(put-4, information-6)
advmod(put-4, together-7)
case(words-11, in-8)
nmod:poss(words-11, your-9)
amod(words-11, own-10)
nmod:in(put-4, words-11)

(ROOT
  (S
    (NP
      (NP (NN Experience) (CD One) (NN way))
      (SBAR
        (S
          (VP (TO to)
            (VP (VB remember))))))
    (VP (VBZ is)
      (PP (IN by)
        (S
          (VP (VBG forming)
            (NP
              (NP (NNS associations))
              (, ,)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is))))))))
      (, ,)
      (PP (IN by)
        (S
          (VP (VBG using)
            (S
              (NP
                (NP (PRP$ your) (NNS senses))
                (CC or)
                (NP (JJ physical) (NNS movements)))
              (VP (TO to)
                (VP (VB link)
                  (PRT (RP up))
                  (NP
                    (NP (DT a) (JJ new) (NN fact))
                    (PP (IN with)
                      (NP (NN information)))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (ADVP (RB already))
                        (VP (VBP have)
                          (VP (VBN learned)))))))))))))
    (. .)))

compound(way-3, Experience-1)
nummod(way-3, One-2)
nsubj(forming-8, way-3)
mark(remember-5, to-4)
acl(way-3, remember-5)
cop(forming-8, is-6)
mark(forming-8, by-7)
root(ROOT-0, forming-8)
dobj(forming-8, associations-9)
nsubj(is-12, associations-9)
ref(associations-9, that-11)
acl:relcl(associations-9, is-12)
mark(using-15, by-14)
advcl(forming-8, using-15)
nmod:poss(senses-17, your-16)
dobj(using-15, senses-17)
nsubj(link-22, senses-17)
cc(senses-17, or-18)
amod(movements-20, physical-19)
dobj(using-15, movements-20)
conj:or(senses-17, movements-20)
nsubj(link-22, movements-20)
mark(link-22, to-21)
xcomp(using-15, link-22)
compound:prt(link-22, up-23)
det(fact-26, a-24)
amod(fact-26, new-25)
dobj(link-22, fact-26)
case(information-28, with-27)
nmod:with(fact-26, information-28)
nsubj(learned-32, you-29)
advmod(learned-32, already-30)
aux(learned-32, have-31)
acl:relcl(fact-26, learned-32)

(ROOT
  (S
    (VP (VB Take)
      (NP (DT the) (NNS words))
      (NP
        (NP (NN moo) (, ,) (NN coo) (, ,)
          (CC and)
          (NN quack))
        (PP (IN for)
          (NP (NN example)))))
    (. .)))

root(ROOT-0, Take-1)
det(words-3, the-2)
iobj(Take-1, words-3)
dobj(Take-1, moo-4)
dobj(Take-1, coo-6)
conj:and(moo-4, coo-6)
cc(moo-4, and-8)
dobj(Take-1, quack-9)
conj:and(moo-4, quack-9)
case(example-11, for-10)
nmod:for(moo-4, example-11)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD might)
        (VP (VB associate)
          (NP (DT these) (NNS words))
          (PP (IN with)
            (NP
              (NP (DT the) (NNS sounds) (NNS cows))
              (, ,)
              (NP (NNS birds)))))))
    (, ,)
    (CC and)
    (S
      (NP (NNS ducks))
      (VP (VBP make)))
    (. .)))

nsubj(associate-3, You-1)
aux(associate-3, might-2)
root(ROOT-0, associate-3)
det(words-5, these-4)
dobj(associate-3, words-5)
case(cows-9, with-6)
det(cows-9, the-7)
compound(cows-9, sounds-8)
nmod:with(associate-3, cows-9)
appos(cows-9, birds-11)
cc(associate-3, and-13)
nsubj(make-15, ducks-14)
conj:and(associate-3, make-15)

(ROOT
  (S
    (NP (PRP You))
    (VP
      (VP (MD can)
        (ADVP (RB also))
        (VP (VB relate)
          (NP (DT the) (JJ idioms) (NNS thumbs))
          (PRT (RP up))))
      (CC and)
      (VP (VBZ thumbs)
        (ADVP (RB down)
          (PP (TO to)
            (NP
              (NP (DT the) (NNS gestures))
              (VP (VBG showing)
                (NP (NN approval)
                  (CC and)
                  (NN disapproval))))))))
    (. .)))

nsubj(relate-4, You-1)
nsubj(thumbs-10, You-1)
aux(relate-4, can-2)
advmod(relate-4, also-3)
root(ROOT-0, relate-4)
det(thumbs-7, the-5)
amod(thumbs-7, idioms-6)
dobj(relate-4, thumbs-7)
compound:prt(relate-4, up-8)
cc(relate-4, and-9)
conj:and(relate-4, thumbs-10)
advmod(thumbs-10, down-11)
case(gestures-14, to-12)
det(gestures-14, the-13)
nmod:to(down-11, gestures-14)
acl(gestures-14, showing-15)
dobj(showing-15, approval-16)
cc(approval-16, and-17)
dobj(showing-15, disapproval-18)
conj:and(approval-16, disapproval-18)

(ROOT
  (S
    (NP
      (NP (NNS Mnemonics))
      (: :)
      (NP
        (NP (NN Memory) (NNS Cues))
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (PRP you))
            (VP (VBP need)
              (S
                (VP (TO to)
                  (VP (VB remember)
                    (NP
                      (NP (DT a) (NN group))
                      (PP (IN of)
                        (NP (NNS terms)))))))))))
      (, ,))
    (VP (VBP use)
      (S
        (NP
          (NP (DT the) (JJ first) (NN letter))
          (PP (IN of)
            (NP (DT each))))
        (VP (TO to)
          (VP (VB create)
            (NP
              (NP (DT a) (NN word))
              (CC or)
              (NP (DT a) (NN phrase)))))))
    (. .)))

nsubj(use-15, Mnemonics-1)
compound(Cues-4, Memory-3)
dep(Mnemonics-1, Cues-4)
advmod(need-7, When-5)
nsubj(need-7, you-6)
nsubj(remember-9, you-6)
acl:relcl(Cues-4, need-7)
mark(remember-9, to-8)
xcomp(need-7, remember-9)
det(group-11, a-10)
dobj(remember-9, group-11)
case(terms-13, of-12)
nmod:of(group-11, terms-13)
root(ROOT-0, use-15)
det(letter-18, the-16)
amod(letter-18, first-17)
dobj(use-15, letter-18)
nsubj(create-22, letter-18)
case(each-20, of-19)
nmod:of(letter-18, each-20)
mark(create-22, to-21)
xcomp(use-15, create-22)
det(word-24, a-23)
dobj(create-22, word-24)
cc(word-24, or-25)
det(phrase-27, a-26)
dobj(create-22, phrase-27)
conj:or(word-24, phrase-27)

(ROOT
  (S
    (NP (DT This))
    (VP
      (VP (VBZ helps)
        (S
          (NP (PRP you))
          (VP (VB find)
            (NP (DT the) (JJ right) (NN path))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP you))
                (VP (VBP are)
                  (VP (VBN lost))))))))
      (CC and)
      (VP (MD can) (RB not)
        (VP (VB remember))))
    (. .)))

nsubj(helps-2, This-1)
nsubj(remember-15, This-1)
root(ROOT-0, helps-2)
nsubj(find-4, you-3)
ccomp(helps-2, find-4)
det(path-7, the-5)
amod(path-7, right-6)
dobj(find-4, path-7)
advmod(lost-11, when-8)
nsubjpass(lost-11, you-9)
auxpass(lost-11, are-10)
advcl(find-4, lost-11)
cc(helps-2, and-12)
aux(remember-15, can-13)
neg(remember-15, not-14)
conj:and(helps-2, remember-15)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (S
      (VP (TO to)
        (VP (VB remember)
          (NP
            (NP (DT a) (NN list))
            (PP (IN of)
              (NP
                (NP
                  (ADJP (JJ North) (JJ African))
                  (NNS countries))
                (PRN (-LRB- -LRB-)
                  (NP (NNP Morocco))
                  (, ,)
                  (NP (NNP Egypt) (, ,) (NNP Tunisia))
                  (, ,)
                  (NP (NNP Algeria) (, ,) (NNP Libya))
                  (-RRB- -RRB-))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD can)
      (VP
        (VP (VB take)
          (NP
            (NP (DT the) (JJ first) (NN letter))
            (PP (IN of)
              (NP
                (NP (DT each) (NN country) (POS 's))
                (NN name)))))
        (CC and)
        (VP (VB form)
          (NP (DT the) (NN acronym) (NN METAL)))))
    (. .)))

case(example-2, For-1)
nmod:for(take-26, example-2)
mark(remember-5, to-4)
advcl(take-26, remember-5)
det(list-7, a-6)
dobj(remember-5, list-7)
case(countries-11, of-8)
amod(African-10, North-9)
amod(countries-11, African-10)
nmod:of(list-7, countries-11)
appos(countries-11, Morocco-13)
compound(Tunisia-17, Egypt-15)
dep(Morocco-13, Tunisia-17)
compound(Libya-21, Algeria-19)
dep(Morocco-13, Libya-21)
nsubj(take-26, you-24)
nsubj(form-36, you-24)
aux(take-26, can-25)
root(ROOT-0, take-26)
det(letter-29, the-27)
amod(letter-29, first-28)
dobj(take-26, letter-29)
case(name-34, of-30)
det(country-32, each-31)
nmod:poss(name-34, country-32)
case(country-32, 's-33)
nmod:of(letter-29, name-34)
cc(take-26, and-35)
conj:and(take-26, form-36)
det(METAL-39, the-37)
compound(METAL-39, acronym-38)
dobj(form-36, METAL-39)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD could)
        (VP (VB add)
          (NP (DT a) (NN recall) (NN helper))
          (PP (IN with)
            (NP
              (NP (DT a) (NN picture) (NN and/or) (NN sentence))
              (PP (IN in)
                (NP (NN mind))))))))
    (: :)
    (S
      (NP (NNP Explorers))
      (VP (VBD found)
        (NP (JJ precious) (NNP METAL))
        (PP (IN in)
          (NP (NNP North) (NNP Africa)))))
    (. .)))

nsubj(add-3, You-1)
aux(add-3, could-2)
root(ROOT-0, add-3)
det(helper-6, a-4)
compound(helper-6, recall-5)
dobj(add-3, helper-6)
case(sentence-11, with-7)
det(sentence-11, a-8)
compound(sentence-11, picture-9)
compound(sentence-11, and/or-10)
nmod:with(add-3, sentence-11)
case(mind-13, in-12)
nmod:in(sentence-11, mind-13)
nsubj(found-16, Explorers-15)
parataxis(add-3, found-16)
amod(METAL-18, precious-17)
dobj(found-16, METAL-18)
case(Africa-21, in-19)
compound(Africa-21, North-20)
nmod:in(found-16, Africa-21)

(ROOT
  (S
    (SBAR (IN After)
      (S
        (NP (PRP you))
        (VP (VBP learn)
          (NP (NN something)))))
    (, ,)
    (VP (VB study)
      (S
        (NP (PRP it))
        (ADJP
          (NP (DT some))
          (JJR more))))
    (. .)))

mark(learn-3, After-1)
nsubj(learn-3, you-2)
advcl(study-6, learn-3)
dobj(learn-3, something-4)
root(ROOT-0, study-6)
nsubj(more-9, it-7)
nmod:npmod(more-9, some-8)
xcomp(study-6, more-9)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP (PRP you))
    (VP (MD might)
      (VP (VB end)
        (NP (PRP$ your) (NN study) (NN session))
        (PP (IN by)
          (S
            (VP (VBG reciting)
              (NP
                (NP (DT all))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NNS questions)
                      (CC and)
                      (NNS answers))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBD created)
                          (PP (IN for)
                            (NP (PRP yourself)))
                          (ADVP (RB previously)))))))))))))
    (. .)))

case(example-2, For-1)
nmod:for(end-6, example-2)
nsubj(end-6, you-4)
aux(end-6, might-5)
root(ROOT-0, end-6)
nmod:poss(session-9, your-7)
compound(session-9, study-8)
dobj(end-6, session-9)
mark(reciting-11, by-10)
advcl(end-6, reciting-11)
dobj(reciting-11, all-12)
case(questions-15, of-13)
det(questions-15, the-14)
nmod:of(all-12, questions-15)
cc(questions-15, and-16)
nmod:of(all-12, answers-17)
conj:and(questions-15, answers-17)
nsubj(created-19, you-18)
acl:relcl(questions-15, created-19)
case(yourself-21, for-20)
nmod:for(created-19, yourself-21)
advmod(created-19, previously-22)

(ROOT
  (S
    (VP (VB Repeat)
      (NP (DT the) (NN process))
      (ADVP (RB periodically)))
    (. .)))

root(ROOT-0, Repeat-1)
det(process-3, the-2)
dobj(Repeat-1, process-3)
advmod(Repeat-1, periodically-4)

(ROOT
  (S
    (ADVP (RB Only)
      (PP (IN by)
        (S
          (VP (VBG reviewing)
            (SBAR (IN in)
              (S
                (NP
                  (NP (JJ small) (NNS doses))
                  (PRN (: --)
                    (NP
                      (NP
                        (QP (CD five) (TO to) (CD ten))
                        (NNS minutes))
                      (PP (IN at)
                        (NP (DT a) (NN time))))
                    (: --)))
                (VP (MD can))))))))
    (NP (PRP you))
    (VP (VBP learn)
      (NP (NNS efficiently)))
    (. .)))

advmod(learn-18, Only-1)
mark(reviewing-3, by-2)
advcl(Only-1, reviewing-3)
mark(can-16, in-4)
amod(doses-6, small-5)
nsubj(can-16, doses-6)
compound(ten-10, five-8)
dep(ten-10, to-9)
nummod(minutes-11, ten-10)
dep(doses-6, minutes-11)
case(time-14, at-12)
det(time-14, a-13)
nmod:at(minutes-11, time-14)
advcl(reviewing-3, can-16)
nsubj(learn-18, you-17)
root(ROOT-0, learn-18)
dobj(learn-18, efficiently-19)

(ROOT
  (S
    (VP (VB Try)
      (S
        (VP (TO to)
          (VP (VB relax)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP you))
                (VP (VBP study))))))))
    (. .)))

root(ROOT-0, Try-1)
mark(relax-3, to-2)
xcomp(Try-1, relax-3)
advmod(study-6, when-4)
nsubj(study-6, you-5)
advcl(relax-3, study-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can) (RB not)
      (VP (VB remember)
        (NP (NNS things))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBP are)
              (ADJP (JJ tired)
                (CC or)
                (JJ unhappy)))))))
    (. .)))

nsubj(remember-4, You-1)
aux(remember-4, can-2)
neg(remember-4, not-3)
root(ROOT-0, remember-4)
dobj(remember-4, things-5)
advmod(tired-9, when-6)
nsubj(tired-9, you-7)
nsubj(unhappy-11, you-7)
cop(tired-9, are-8)
advcl(remember-4, tired-9)
cc(tired-9, or-10)
advcl(remember-4, unhappy-11)
conj:or(tired-9, unhappy-11)

(ROOT
  (S
    (PP (IN As)
      (NP (DT a) (NN student)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (RB almost) (JJ impossible))
      (S
        (VP (TO to)
          (VP (VB learn)
            (NP
              (NP (DT every) (NN detail))
              (PP (IN in)
                (NP (PRP$ your) (NN textbook)
                  (CC and)
                  (NN notebook))))))))
    (. .)))

case(student-3, As-1)
det(student-3, a-2)
nmod:as(impossible-8, student-3)
nsubj(impossible-8, it-5)
nsubj(learn-10, it-5)
cop(impossible-8, is-6)
advmod(impossible-8, almost-7)
root(ROOT-0, impossible-8)
mark(learn-10, to-9)
xcomp(impossible-8, learn-10)
det(detail-12, every-11)
dobj(learn-10, detail-12)
case(textbook-15, in-13)
nmod:poss(textbook-15, your-14)
nmod:in(detail-12, textbook-15)
cc(textbook-15, and-16)
nmod:in(detail-12, notebook-17)
conj:and(textbook-15, notebook-17)

(ROOT
  (S
    (VP (VB Keep)
      (NP
        (NP (DT the) (JJ above) (`` ``) (JJ M-E-M-O) ('' '') (NNS tips))
        (PP (IN in)
          (NP (NN mind)))))
    (. .)))

root(ROOT-0, Keep-1)
det(tips-7, the-2)
amod(tips-7, above-3)
amod(tips-7, M-E-M-O-5)
dobj(Keep-1, tips-7)
case(mind-9, in-8)
nmod:in(tips-7, mind-9)

(ROOT
  (S
    (VP
      (VP (VB Select)
        (NP (DT the) (JJ key) (NN information)))
      (CC and)
      (VP (VB figure)
        (PRT (RP out))
        (PP (IN for)
          (NP (PRP yourself)))
        (NP
          (NP (DT the) (JJS best) (NN way))
          (SBAR
            (S
              (VP (TO to)
                (VP (VB improve)
                  (NP (PRP$ your) (NN memory)))))))))
    (. .)))

root(ROOT-0, Select-1)
det(information-4, the-2)
amod(information-4, key-3)
dobj(Select-1, information-4)
cc(Select-1, and-5)
conj:and(Select-1, figure-6)
compound:prt(figure-6, out-7)
case(yourself-9, for-8)
nmod:for(figure-6, yourself-9)
det(way-12, the-10)
amod(way-12, best-11)
dobj(figure-6, way-12)
mark(improve-14, to-13)
acl(way-12, improve-14)
nmod:poss(memory-16, your-15)
dobj(improve-14, memory-16)

(ROOT
  (S
    (NP (DT This) (NN way))
    (, ,)
    (NP (PRP you))
    (VP (MD 'll)
      (ADVP (RB never))
      (VP (VB be)
        (VP (VBN regarded)
          (PP (IN as)
            (NP (DT a) (JJ forgetful) (NN person))))))
    (. !)))

det(way-2, This-1)
nsubjpass(regarded-8, way-2)
nsubjpass(regarded-8, you-4)
aux(regarded-8, 'll-5)
neg(regarded-8, never-6)
auxpass(regarded-8, be-7)
root(ROOT-0, regarded-8)
case(person-12, as-9)
det(person-12, a-10)
amod(person-12, forgetful-11)
nmod:as(regarded-8, person-12)

