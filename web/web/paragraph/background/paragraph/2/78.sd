(ROOT
  (S
    (NP (EX There))
    (ADVP (RB once))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN king))
        (PP (IN of)
          (NP
            (NP (NNP Syracuse))
            (VP (VBN named)
              (NP (NNP Hiero)))))))
    (. .)))

expl(was-3, There-1)
advmod(was-3, once-2)
root(ROOT-0, was-3)
det(king-5, a-4)
nsubj(was-3, king-5)
case(Syracuse-7, of-6)
nmod:of(king-5, Syracuse-7)
acl(Syracuse-7, named-8)
dobj(named-8, Hiero-9)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN country))
        (PP (IN over)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP he))
              (VP (VBD reigned))))))
      (VP (VBD was)
        (ADJP (RB quite) (JJ small))))
    (, ,)
    (CC but)
    (S
      (PP (IN for)
        (NP (DT that) (JJ very) (NN reason)))
      (NP (PRP he))
      (VP (VBD wanted)
        (S
          (VP (TO to)
            (VP (VB wear)
              (NP
                (NP (DT the) (JJS biggest) (NN crown))
                (PP (IN in)
                  (NP (DT the) (NN world)))))))))
    (. .)))

det(country-2, The-1)
nsubj(small-9, country-2)
mark(reigned-6, over-3)
dobj(reigned-6, which-4)
nsubj(reigned-6, he-5)
acl(country-2, reigned-6)
cop(small-9, was-7)
advmod(small-9, quite-8)
root(ROOT-0, small-9)
cc(small-9, but-11)
case(reason-15, for-12)
det(reason-15, that-13)
amod(reason-15, very-14)
nmod:for(wanted-17, reason-15)
nsubj(wanted-17, he-16)
nsubj(wear-19, he-16)
conj:but(small-9, wanted-17)
mark(wear-19, to-18)
xcomp(wanted-17, wear-19)
det(crown-22, the-20)
amod(crown-22, biggest-21)
dobj(wear-19, crown-22)
case(world-25, in-23)
det(world-25, the-24)
nmod:in(crown-22, world-25)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP
      (VP (VBD called)
        (PP (IN in)
          (NP
            (NP (DT a) (JJ famous) (NN goldsmith))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD was)
                  (VP (VBN skillful)
                    (PP (IN with)
                      (NP
                        (NP (DT all) (NNS kinds))
                        (PP (IN of)
                          (NP (JJ fine) (NN work))))))))))))
      (, ,)
      (CC and)
      (VP (VBD gave)
        (NP (PRP him))
        (NP
          (NP (CD ten) (NNS pounds))
          (PP (IN of)
            (NP (JJ pure) (NN gold))))))
    (. .)))

dep(called-3, So-1)
nsubj(called-3, he-2)
nsubj(gave-20, he-2)
root(ROOT-0, called-3)
case(goldsmith-7, in-4)
det(goldsmith-7, a-5)
amod(goldsmith-7, famous-6)
nmod:in(called-3, goldsmith-7)
nsubjpass(skillful-11, goldsmith-7)
ref(goldsmith-7, who-9)
auxpass(skillful-11, was-10)
acl:relcl(goldsmith-7, skillful-11)
case(kinds-14, with-12)
det(kinds-14, all-13)
nmod:with(skillful-11, kinds-14)
case(work-17, of-15)
amod(work-17, fine-16)
nmod:of(kinds-14, work-17)
cc(called-3, and-19)
conj:and(called-3, gave-20)
iobj(gave-20, him-21)
nummod(pounds-23, ten-22)
dobj(gave-20, pounds-23)
case(gold-26, of-24)
amod(gold-26, pure-25)
nmod:of(pounds-23, gold-26)

(ROOT
  (S (`` ``)
    (S
      (S
        (VP (VBG Fashion)
          (NP (DT this))
          (PP (IN into)
            (NP
              (NP (DT a) (NN crown))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD shall)
                    (VP (VB make)
                      (NP (DT every) (JJ other) (NN king))))))))))
      (VP (VBP covet)
        (NP (PRP it))))
    (, ,) ('' '')
    (NP (NNP Hiero))
    (VP (VBD instructed))
    (. .)))

csubj(covet-13, Fashion-2)
dobj(Fashion-2, this-3)
case(crown-6, into-4)
det(crown-6, a-5)
nmod:into(Fashion-2, crown-6)
nsubj(make-9, crown-6)
ref(crown-6, that-7)
aux(make-9, shall-8)
acl:relcl(crown-6, make-9)
det(king-12, every-10)
amod(king-12, other-11)
dobj(make-9, king-12)
ccomp(instructed-18, covet-13)
dobj(covet-13, it-14)
nsubj(instructed-18, Hiero-17)
root(ROOT-0, instructed-18)

(ROOT
  (S (`` ``)
    (VP
      (VP (VB Be)
        (ADJP (JJ sure))
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBD put)
              (PP (IN into)
                (NP (PRP it)))
              (NP
                (NP (DT every) (NN grain))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN gold))
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (VBP give)
                          (NP (PRP you))))))))))))
      (, ,)
      (CC and)
      (VP (VBP do) (RB not)
        (VP (VB mix)
          (NP (DT any) (JJ other) (NN metal))
          (PP (IN with)
            (NP (PRP it))))))
    (. .) ('' '')))

cop(sure-3, Be-2)
root(ROOT-0, sure-3)
mark(put-6, that-4)
nsubj(put-6, you-5)
ccomp(sure-3, put-6)
case(it-8, into-7)
nmod:into(put-6, it-8)
det(grain-10, every-9)
dobj(put-6, grain-10)
case(gold-13, of-11)
det(gold-13, the-12)
nmod:of(grain-10, gold-13)
nsubj(give-15, I-14)
acl:relcl(gold-13, give-15)
dobj(give-15, you-16)
cc(sure-3, and-18)
aux(mix-21, do-19)
neg(mix-21, not-20)
conj:and(sure-3, mix-21)
det(metal-24, any-22)
amod(metal-24, other-23)
dobj(mix-21, metal-24)
case(it-26, with-25)
nmod:with(mix-21, it-26)

(ROOT
  (S
    (NP (DT The) (NN goldsmith))
    (VP (VBD promised)
      (SBAR (IN that)
        (S
          (PP (IN within)
            (NP (JJ ninety) (NNS days)))
          (NP (PRP he))
          (VP (MD would)
            (VP (VB return)
              (PP (TO to)
                (NP (DT the) (NN king)))
              (NP
                (NP (DT the) (NN crown))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD wished))))))))))
    (. .)))

det(goldsmith-2, The-1)
nsubj(promised-3, goldsmith-2)
root(ROOT-0, promised-3)
mark(return-10, that-4)
case(days-7, within-5)
amod(days-7, ninety-6)
nmod:within(return-10, days-7)
nsubj(return-10, he-8)
aux(return-10, would-9)
ccomp(promised-3, return-10)
case(king-13, to-11)
det(king-13, the-12)
nmod:to(return-10, king-13)
det(crown-15, the-14)
dobj(return-10, crown-15)
nsubj(wished-17, he-16)
acl:relcl(crown-15, wished-17)

(ROOT
  (S
    (ADVP
      (NP (CD Ninety) (NNS days))
      (RB later))
    (, ,)
    (ADJP (JJ true)
      (PP (TO to)
        (NP (PRP$ his) (NN word))))
    (, ,)
    (NP (DT the) (NN goldsmith))
    (VP (VBD brought)
      (NP (DT the) (NN crown)))
    (. .)))

nummod(days-2, Ninety-1)
nmod:npmod(later-3, days-2)
advmod(brought-12, later-3)
dep(brought-12, true-5)
case(word-8, to-6)
nmod:poss(word-8, his-7)
nmod:to(true-5, word-8)
det(goldsmith-11, the-10)
nsubj(brought-12, goldsmith-11)
root(ROOT-0, brought-12)
det(crown-14, the-13)
dobj(brought-12, crown-14)

(ROOT
  (S
    (NP
      (NP (DT All))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD saw)
            (NP (PRP it))))))
    (VP (VBD agreed)
      (SBAR (IN that)
        (S
          (NP (PDT such) (DT a) (JJ beautiful) (NN crown))
          (VP (VBD had)
            (NP
              (NP (DT no) (JJ equal))
              (PP (IN in)
                (NP (DT the) (NN world))))))))
    (. .)))

nsubj(saw-3, All-1)
nsubj(agreed-5, All-1)
ref(All-1, who-2)
acl:relcl(All-1, saw-3)
dobj(saw-3, it-4)
root(ROOT-0, agreed-5)
mark(had-11, that-6)
det:predet(crown-10, such-7)
det(crown-10, a-8)
amod(crown-10, beautiful-9)
nsubj(had-11, crown-10)
ccomp(agreed-5, had-11)
neg(equal-13, no-12)
dobj(had-11, equal-13)
case(world-16, in-14)
det(world-16, the-15)
nmod:in(equal-13, world-16)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (NNP King) (NNP Hiero))
          (VP (VBD put)
            (NP (PRP it))
            (PP (IN on)
              (NP (PRP$ his) (NN head))))))
      (S
        (NP (PRP it))
        (VP (VBD felt)
          (ADJP (RB very) (JJ uncomfortable))))
      (, ,)
      (CC but)
      (S
        (NP (PRP he))
        (VP (VBD did) (RB not)
          (VP (VB mind)
            (NP (DT that))))))
    (: --)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (JJ sure))
        (SBAR (IN that)
          (S
            (NP (DT no) (JJ other) (NN king))
            (VP (VBD had)
              (NP
                (ADJP (RB so) (JJ fine))
                (DT a) (NN headpiece)))))))
    (. .)))

advmod(put-4, When-1)
compound(Hiero-3, King-2)
nsubj(put-4, Hiero-3)
advcl(felt-10, put-4)
dobj(put-4, it-5)
case(head-8, on-6)
nmod:poss(head-8, his-7)
nmod:on(put-4, head-8)
nsubj(felt-10, it-9)
root(ROOT-0, felt-10)
advmod(uncomfortable-12, very-11)
xcomp(felt-10, uncomfortable-12)
cc(felt-10, but-14)
nsubj(mind-18, he-15)
aux(mind-18, did-16)
neg(mind-18, not-17)
conj:but(felt-10, mind-18)
dobj(mind-18, that-19)
nsubj(sure-23, he-21)
cop(sure-23, was-22)
parataxis(felt-10, sure-23)
mark(had-28, that-24)
neg(king-27, no-25)
amod(king-27, other-26)
nsubj(had-28, king-27)
ccomp(sure-23, had-28)
advmod(fine-30, so-29)
amod(headpiece-32, fine-30)
det(headpiece-32, a-31)
dobj(had-28, headpiece-32)

(ROOT
  (S
    (S
      (S
        (VP (VBG Admiring)
          (NP (PRP it))
          (PP (IN from)
            (NP (DT all) (NNS sides)))))
      (, ,)
      (NP (NNP King) (NNP Hiero))
      (ADVP (RB then))
      (VP (VBD weighed)
        (NP (PRP it))
        (PP (IN on)
          (NP (PRP$ his) (JJ own) (NNS scales)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD weighed)
        (NP (RB exactly) (CD ten) (NNS pounds))))
    (. .)))

advcl(weighed-10, Admiring-1)
dobj(Admiring-1, it-2)
case(sides-5, from-3)
det(sides-5, all-4)
nmod:from(Admiring-1, sides-5)
compound(Hiero-8, King-7)
nsubj(weighed-10, Hiero-8)
advmod(weighed-10, then-9)
root(ROOT-0, weighed-10)
dobj(weighed-10, it-11)
case(scales-15, on-12)
nmod:poss(scales-15, his-13)
amod(scales-15, own-14)
nmod:on(weighed-10, scales-15)
cc(weighed-10, and-17)
nsubj(weighed-19, it-18)
conj:and(weighed-10, weighed-19)
advmod(pounds-22, exactly-20)
nummod(pounds-22, ten-21)
dobj(weighed-19, pounds-22)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (PP (IN in)
        (NP
          (NP (DT the) (NN king) (POS 's))
          (NN court)))
      (NP
        (NP (DT a)
          (ADJP (RB very) (JJ wise))
          (NN man))
        (VP (VBN named)
          (NP (NNP Archimedes)))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
case(court-7, in-3)
det(king-5, the-4)
nmod:poss(court-7, king-5)
case(king-5, 's-6)
nmod:in(was-2, court-7)
det(man-11, a-8)
advmod(wise-10, very-9)
amod(man-11, wise-10)
nsubj(was-2, man-11)
acl(man-11, named-12)
dobj(named-12, Archimedes-13)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (VP (VBD called)
          (PRT (RP in))
          (S
            (VP (TO to)
              (VP (VB admire)
                (NP
                  (NP (DT the) (NN king) (POS 's))
                  (NN crown))))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD turned)
        (NP (PRP it))
        (PP (IN over)
          (NP
            (QP (JJ many) (NNS times)))))
      (CC and)
      (VP (VBD examined)
        (S
          (NP (PRP it))
          (ADJP (RB very) (RB closely)))))
    (. .)))

advmod(called-2, When-1)
advcl(turned-12, called-2)
compound:prt(called-2, in-3)
mark(admire-5, to-4)
xcomp(called-2, admire-5)
det(king-7, the-6)
nmod:poss(crown-9, king-7)
case(king-7, 's-8)
dobj(admire-5, crown-9)
nsubj(turned-12, he-11)
nsubj(examined-18, he-11)
root(ROOT-0, turned-12)
dobj(turned-12, it-13)
case(times-16, over-14)
advmod(times-16, many-15)
nmod:over(turned-12, times-16)
cc(turned-12, and-17)
conj:and(turned-12, examined-18)
nsubj(closely-21, it-19)
advmod(closely-21, very-20)
xcomp(examined-18, closely-21)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD wondered)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (DT the) (NN gold))
          (VP (VBD was)
            (NP
              (NP (DT a) (JJ brilliant) (NN yellow))
              (, ,)
              (CONJP (RB instead) (IN of))
              (NP
                (NP (DT the) (JJ same) (JJ rich) (JJ red) (NN color))
                (SBAR (IN that)
                  (S
                    (NP (PRP it))
                    (VP (VBD had)
                      (VP (VBN been)
                        (PP (IN in)
                          (NP (DT the) (NN lump)))))))))))))
    (. .)))

nsubj(wondered-2, He-1)
root(ROOT-0, wondered-2)
advmod(yellow-9, why-3)
det(gold-5, the-4)
nsubj(yellow-9, gold-5)
cop(yellow-9, was-6)
det(yellow-9, a-7)
amod(yellow-9, brilliant-8)
ccomp(wondered-2, yellow-9)
cc(yellow-9, instead-11)
mwe(instead-11, of-12)
det(color-17, the-13)
amod(color-17, same-14)
amod(color-17, rich-15)
amod(color-17, red-16)
ccomp(wondered-2, color-17)
conj:negcc(yellow-9, color-17)
mark(lump-24, that-18)
nsubj(lump-24, it-19)
aux(lump-24, had-20)
cop(lump-24, been-21)
case(lump-24, in-22)
det(lump-24, the-23)
dep(color-17, lump-24)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP
        (ADVP (IN if)
          (NP (DT the) (NN goldsmith)))
        (VBZ has)
        (VP
          (VP (VBN kept)
            (PP (IN out)
              (NP
                (NP (DT a) (NN pound))
                (CC or)
                (NP
                  (NP (CD two))
                  (PP (IN of)
                    (NP (DT the) (NN gold)))))))
          (CC and)
          (VP (VBN made)
            (PRT (RP up))
            (NP (DT the) (NN weight))
            (PP (IN by)
              (S
                (VP (VBG adding)
                  (NP (NN brass)
                    (CC or)
                    (NN silver)))))))))
    (. ?) ('' '')))

nsubj(kept-7, What-2)
nsubj(made-17, What-2)
case(goldsmith-5, if-3)
det(goldsmith-5, the-4)
advmod(kept-7, goldsmith-5)
aux(kept-7, has-6)
root(ROOT-0, kept-7)
case(pound-10, out-8)
det(pound-10, a-9)
nmod:out(kept-7, pound-10)
cc(pound-10, or-11)
nmod:out(kept-7, two-12)
conj:or(pound-10, two-12)
case(gold-15, of-13)
det(gold-15, the-14)
nmod:of(two-12, gold-15)
cc(kept-7, and-16)
conj:and(kept-7, made-17)
compound:prt(made-17, up-18)
det(weight-20, the-19)
dobj(made-17, weight-20)
mark(adding-22, by-21)
advcl(made-17, adding-22)
dobj(adding-22, brass-23)
cc(brass-23, or-24)
dobj(adding-22, silver-25)
conj:or(brass-23, silver-25)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Archimedes)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Archimedes-2)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Oh))
      (, ,)
      (NP (PRP he))
      (VP (MD would) (RB not)
        (VP (VB do)
          (NP (DT that)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Hiero))
    (. .)))

discourse(do-7, Oh-2)
nsubj(do-7, he-4)
aux(do-7, would-5)
neg(do-7, not-6)
ccomp(said-11, do-7)
dobj(do-7, that-8)
root(ROOT-0, said-11)
dep(said-11, Hiero-12)

(ROOT
  (S (`` ``)
    (NP (DT The) (NN gold))
    (VP (VBZ has)
      (ADVP (RB merely))
      (VP (VBN changed)
        (NP (PRP$ its) (NN color))
        (PP (IN in)
          (NP (DT the) (NN working)))))
    (. .) ('' '')))

det(gold-3, The-2)
nsubj(changed-6, gold-3)
aux(changed-6, has-4)
advmod(changed-6, merely-5)
root(ROOT-0, changed-6)
nmod:poss(color-8, its-7)
dobj(changed-6, color-8)
case(working-11, in-9)
det(working-11, the-10)
nmod:in(changed-6, working-11)

(ROOT
  (S (CC But)
    (SBAR
      (X (DT the) (JJR more))
      (S
        (NP (PRP he))
        (VP (VBD thought)
          (PP (IN of)
            (NP (DT the) (NN matter))))))
    (, ,)
    (X (DT the)
      (ADJP (RBR less) (JJ pleased)))
    (NP (PRP he))
    (VP (VBD was)
      (PP (IN with)
        (NP (DT the) (NN crown))))
    (. .)))

cc(crown-17, But-1)
det(more-3, the-2)
dep(thought-5, more-3)
nsubj(thought-5, he-4)
advcl(crown-17, thought-5)
case(matter-8, of-6)
det(matter-8, the-7)
nmod:of(thought-5, matter-8)
det(pleased-12, the-10)
advmod(pleased-12, less-11)
dep(crown-17, pleased-12)
nsubj(crown-17, he-13)
cop(crown-17, was-14)
case(crown-17, with-15)
det(crown-17, the-16)
root(ROOT-0, crown-17)

(ROOT
  (S (`` ``)
    (S
      (VP (VBZ Is)
        (ADVP (RB there))
        (NP (DT any) (NN way)
          (S
            (VP (TO to)
              (VP (VB find)
                (PRT (RP out))
                (SBAR (IN whether)
                  (S
                    (NP (DT that) (NN goldsmith))
                    (VP
                      (VP (VBD cheated)
                        (NP (PRP me)))
                      (CC or)
                      (VP
                        (ADVP (RB honestly))
                        (VBD gave)
                        (NP (PRP me))))))))))))
    (VP (VBP back)
      (NP (PRP$ my) (NN gold)))
    (. ?) ('' '')))

cop(way-5, Is-2)
advmod(way-5, there-3)
det(way-5, any-4)
csubj(back-18, way-5)
mark(find-7, to-6)
acl(way-5, find-7)
compound:prt(find-7, out-8)
mark(cheated-12, whether-9)
det(goldsmith-11, that-10)
nsubj(cheated-12, goldsmith-11)
nsubj(gave-16, goldsmith-11)
ccomp(find-7, cheated-12)
dobj(cheated-12, me-13)
cc(cheated-12, or-14)
advmod(gave-16, honestly-15)
ccomp(find-7, gave-16)
conj:or(cheated-12, gave-16)
dobj(gave-16, me-17)
root(ROOT-0, back-18)
nmod:poss(gold-20, my-19)
dobj(back-18, gold-20)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (PP (IN of)
          (NP (DT no) (NN way)))))
    (, ,) ('' '')
    (VP (VBD was))
    (NP (DT the) (NN answer))
    (. .)))

nsubj(know-3, I-2)
ccomp(was-9, know-3)
case(way-6, of-4)
neg(way-6, no-5)
nmod:of(know-3, way-6)
root(ROOT-0, was-9)
det(answer-11, the-10)
nsubj(was-9, answer-11)

(ROOT
  (S (CC But)
    (NP (NNP Archimedes))
    (VP (VBD was) (RB not)
      (NP (DT a) (NN man)
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN that)
                (S
                  (NP (NN anything))
                  (VP (VBD was)
                    (ADJP (JJ impossible))))))))))
    (. .)))

cc(man-6, But-1)
nsubj(man-6, Archimedes-2)
cop(man-6, was-3)
neg(man-6, not-4)
det(man-6, a-5)
root(ROOT-0, man-6)
mark(say-8, to-7)
acl(man-6, say-8)
mark(impossible-12, that-9)
nsubj(impossible-12, anything-10)
cop(impossible-12, was-11)
ccomp(say-8, impossible-12)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD took)
        (NP (JJ great) (NN delight))
        (PP (IN in)
          (S
            (VP (VBG solving)
              (NP (JJ hard) (NNS problems)))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT any) (NN question))
          (VP (VBD puzzled)
            (NP (PRP him)))))
      (, ,)
      (NP (PRP he))
      (VP (MD would)
        (VP (VB persevere)
          (SBAR (IN until)
            (S
              (NP (PRP he))
              (VP (VBD found)
                (NP
                  (NP (DT some) (NN sort))
                  (PP (IN of)
                    (NP (NN answer))))
                (PP (TO to)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(took-2, He-1)
root(ROOT-0, took-2)
amod(delight-4, great-3)
dobj(took-2, delight-4)
mark(solving-6, in-5)
advcl(took-2, solving-6)
amod(problems-8, hard-7)
dobj(solving-6, problems-8)
cc(took-2, and-10)
advmod(puzzled-14, when-11)
det(question-13, any-12)
nsubj(puzzled-14, question-13)
advcl(persevere-19, puzzled-14)
dobj(puzzled-14, him-15)
nsubj(persevere-19, he-17)
aux(persevere-19, would-18)
conj:and(took-2, persevere-19)
mark(found-22, until-20)
nsubj(found-22, he-21)
advcl(persevere-19, found-22)
det(sort-24, some-23)
dobj(found-22, sort-24)
case(answer-26, of-25)
nmod:of(sort-24, answer-26)
case(it-28, to-27)
nmod:to(found-22, it-28)

(ROOT
  (S
    (ADVP (RB So))
    (, ,)
    (NP (NN day))
    (PP (IN after)
      (NP (NN day)))
    (, ,)
    (NP (PRP he))
    (VP (VBD thought)
      (PP (IN about)
        (NP (DT the) (NN gold)))
      (, ,)
      (S
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB figure)
                (PRT (RP out))
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (VP (TO to)
                      (VP (VB have)
                        (S
                          (NP (PRP it))
                          (VP (VBN tested)
                            (PP (IN without)
                              (S
                                (VP (VBG damaging)
                                  (NP (DT the) (NN crown)))))))))))))))))
    (. .)))

advmod(thought-8, So-1)
nmod:tmod(thought-8, day-3)
case(day-5, after-4)
nmod:after(thought-8, day-5)
nsubj(thought-8, he-7)
root(ROOT-0, thought-8)
case(gold-11, about-9)
det(gold-11, the-10)
nmod:about(thought-8, gold-11)
xcomp(thought-8, trying-13)
mark(figure-15, to-14)
xcomp(trying-13, figure-15)
compound:prt(figure-15, out-16)
advmod(have-19, how-17)
mark(have-19, to-18)
ccomp(figure-15, have-19)
nsubj(tested-21, it-20)
ccomp(have-19, tested-21)
mark(damaging-23, without-22)
advcl(tested-21, damaging-23)
det(crown-25, the-24)
dobj(damaging-23, crown-25)

(ROOT
  (S
    (NP (CD One) (NN morning))
    (NP (PRP he))
    (VP (VBD was)
      (VP (VBG pondering)
        (NP (DT this) (NN question))
        (PP (IN while)
          (S
            (VP (VBG getting)
              (ADJP (JJ ready))
              (PP (IN for)
                (NP (DT a) (NN bath))))))))
    (. .)))

nummod(morning-2, One-1)
nmod:tmod(pondering-5, morning-2)
nsubj(pondering-5, he-3)
aux(pondering-5, was-4)
root(ROOT-0, pondering-5)
det(question-7, this-6)
dobj(pondering-5, question-7)
mark(getting-9, while-8)
advcl(pondering-5, getting-9)
xcomp(getting-9, ready-10)
case(bath-13, for-11)
det(bath-13, a-12)
nmod:for(getting-9, bath-13)

(ROOT
  (S
    (S
      (NP (DT The) (NN tub))
      (VP (VBD was)
        (ADJP (JJ full)
          (PP (TO to)
            (NP (DT the) (JJ very) (NN edge))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD stepped)
            (PRT (RP in)))))
      (, ,)
      (NP
        (NP (DT a) (NN quantity))
        (PP (IN of)
          (NP (NN water))))
      (VP (VBD flowed)
        (PRT (RP out))
        (PP (IN upon)
          (NP (DT the) (NN stone) (NN floor)))))
    (. .)))

det(tub-2, The-1)
nsubj(full-4, tub-2)
cop(full-4, was-3)
root(ROOT-0, full-4)
case(edge-8, to-5)
det(edge-8, the-6)
amod(edge-8, very-7)
nmod:to(full-4, edge-8)
cc(full-4, and-10)
mark(stepped-13, as-11)
nsubj(stepped-13, he-12)
advcl(flowed-20, stepped-13)
compound:prt(stepped-13, in-14)
det(quantity-17, a-16)
nsubj(flowed-20, quantity-17)
case(water-19, of-18)
nmod:of(quantity-17, water-19)
conj:and(full-4, flowed-20)
compound:prt(flowed-20, out-21)
case(floor-25, upon-22)
det(floor-25, the-23)
compound(floor-25, stone-24)
nmod:upon(flowed-20, floor-25)

(ROOT
  (SBARQ (`` ``)
    (WHNP
      (WHADJP (WRB How) (JJ much))
      (NNS water))
    (SQ (VBD did)
      (NP (PRP I))
      (VP (VB displace)
        (PP (IN by)
          (S
            (VP (VBG getting)
              (PP (IN into)
                (NP (DT the) (NN tub))))))))
    (. ?) ('' '')))

advmod(much-3, How-2)
amod(water-4, much-3)
dobj(displace-7, water-4)
aux(displace-7, did-5)
nsubj(displace-7, I-6)
root(ROOT-0, displace-7)
mark(getting-9, by-8)
advcl(displace-7, getting-9)
case(tub-12, into-10)
det(tub-12, the-11)
nmod:into(getting-9, tub-12)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD asked)
      (NP (PRP himself)))
    (. .)))

nsubj(asked-2, he-1)
root(ROOT-0, asked-2)
dobj(asked-2, himself-3)

(ROOT
  (S (`` ``)
    (NP (NN Anybody))
    (VP (MD can)
      (VP (VB see)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBN displaced)
              (S
                (NP
                  (NP (DT a) (NN bulk))
                  (PP (IN of)
                    (NP (NN water))))
                (ADJP (JJ equal)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN bulk))
                      (PP (IN of)
                        (NP (PRP$ my) (NN body))))))))))))
    (. .)))

nsubj(see-4, Anybody-2)
aux(see-4, can-3)
root(ROOT-0, see-4)
mark(displaced-7, that-5)
nsubj(displaced-7, I-6)
ccomp(see-4, displaced-7)
det(bulk-9, a-8)
nsubj(equal-12, bulk-9)
case(water-11, of-10)
nmod:of(bulk-9, water-11)
xcomp(displaced-7, equal-12)
case(bulk-15, to-13)
det(bulk-15, the-14)
nmod:to(equal-12, bulk-15)
case(body-18, of-16)
nmod:poss(body-18, my-17)
nmod:of(bulk-15, body-18)

(ROOT
  (S (`` ``)
    (ADVP (RB Now))
    (VP (VBP suppose)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD put)
            (NP
              (NP (NNP Hiero) (POS 's))
              (NN crown))
            (PP (IN into)
              (NP (NN water)))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (MD will)
        (VP (VB displace)
          (S
            (NP
              (NP (DT a) (NN bulk))
              (PP (IN of)
                (NP (NN water))))
            (ADJP (JJ equal)
              (PP (TO to)
                (NP (PRP$ its) (JJ own) (NN bulk))))))))
    (. .)))

advmod(suppose-3, Now-2)
root(ROOT-0, suppose-3)
nsubj(put-5, I-4)
ccomp(suppose-3, put-5)
nmod:poss(crown-8, Hiero-6)
case(Hiero-6, 's-7)
dobj(put-5, crown-8)
case(water-10, into-9)
nmod:into(put-5, water-10)
nsubj(displace-14, it-12)
aux(displace-14, will-13)
parataxis(suppose-3, displace-14)
det(bulk-16, a-15)
nsubj(equal-19, bulk-16)
case(water-18, of-17)
nmod:of(bulk-16, water-18)
xcomp(displace-14, equal-19)
case(bulk-23, to-20)
nmod:poss(bulk-23, its-21)
amod(bulk-23, own-22)
nmod:to(equal-19, bulk-23)

(ROOT
  (S
    (NP (NNP Gold))
    (VP (VBZ is)
      (ADJP
        (ADJP (RB much) (JJR heavier))
        (PP (IN than)
          (NP (NN silver)))))
    (. .)))

nsubj(heavier-4, Gold-1)
cop(heavier-4, is-2)
advmod(heavier-4, much-3)
root(ROOT-0, heavier-4)
case(silver-6, than-5)
nmod:than(heavier-4, silver-6)

(ROOT
  (S
    (NP
      (NP (CD Ten) (NNS pounds))
      (PP (IN of)
        (NP (JJ pure) (NN gold))))
    (VP (MD will) (RB not)
      (VP (VB make)
        (ADJP (RB so) (JJ great))
        (NP
          (NP (DT a) (NN bulk))
          (PP (IN as) (, ,)
            (INTJ (VB say))
            (, ,)
            (NP
              (NP (CD seven) (NNS pounds))
              (PP (IN of)
                (NP
                  (NP (NN gold))
                  (VP (VBN mixed)
                    (PP (IN with)
                      (NP
                        (NP (CD three) (NNS pounds))
                        (PP (IN of)
                          (NP (NN silver)))))))))))))
    (. .)))

nummod(pounds-2, Ten-1)
nsubj(make-8, pounds-2)
case(gold-5, of-3)
amod(gold-5, pure-4)
nmod:of(pounds-2, gold-5)
aux(make-8, will-6)
neg(make-8, not-7)
root(ROOT-0, make-8)
advmod(great-10, so-9)
xcomp(make-8, great-10)
det(bulk-12, a-11)
dobj(make-8, bulk-12)
case(pounds-18, as-13)
discourse(pounds-18, say-15)
nummod(pounds-18, seven-17)
nmod:as(bulk-12, pounds-18)
case(gold-20, of-19)
nmod:of(pounds-18, gold-20)
acl(gold-20, mixed-21)
case(pounds-24, with-22)
nummod(pounds-24, three-23)
nmod:with(mixed-21, pounds-24)
case(silver-26, of-25)
nmod:of(pounds-24, silver-26)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (NNP Hiero) (POS 's))
          (NN crown))
        (VP (VBZ is)
          (NP (JJ pure) (NN gold)))))
    (, ,)
    (NP (PRP it))
    (VP (MD will)
      (VP (VB displace)
        (NP
          (NP (DT the) (JJ same) (NN amount))
          (PP (IN of)
            (NP (NN water))))
        (PP (IN as)
          (NP
            (NP (DT any) (JJ other) (JJ ten-pound) (NN weight))
            (PP (IN of)
              (NP (JJ pure) (NN gold)))))))
    (. .)))

mark(gold-7, If-1)
nmod:poss(crown-4, Hiero-2)
case(Hiero-2, 's-3)
nsubj(gold-7, crown-4)
cop(gold-7, is-5)
amod(gold-7, pure-6)
advcl(displace-11, gold-7)
nsubj(displace-11, it-9)
aux(displace-11, will-10)
root(ROOT-0, displace-11)
det(amount-14, the-12)
amod(amount-14, same-13)
dobj(displace-11, amount-14)
case(water-16, of-15)
nmod:of(amount-14, water-16)
case(weight-21, as-17)
det(weight-21, any-18)
amod(weight-21, other-19)
amod(weight-21, ten-pound-20)
nmod:as(displace-11, weight-21)
case(gold-24, of-22)
amod(gold-24, pure-23)
nmod:of(weight-21, gold-24)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (NP
            (NP (NN part) (NN gold))
            (CC and)
            (NP (NN part) (NN silver))))))
    (, ,)
    (NP (PRP it))
    (VP (MD will)
      (VP (VB displace)
        (NP (DT a) (JJR larger) (NN bulk))))
    (. .)))

cc(displace-13, But-1)
mark(gold-6, if-2)
nsubj(gold-6, it-3)
cop(gold-6, is-4)
compound(gold-6, part-5)
advcl(displace-13, gold-6)
cc(gold-6, and-7)
compound(silver-9, part-8)
conj:and(gold-6, silver-9)
advcl(displace-13, silver-9)
nsubj(displace-13, it-11)
aux(displace-13, will-12)
root(ROOT-0, displace-13)
det(bulk-16, a-14)
amod(bulk-16, larger-15)
dobj(displace-13, bulk-16)

(ROOT
  (S
    (S
      (VP (VBG Forgetting)
        (S
          (NP (NN everything))
          (ADJP (RB else)))))
    (, ,)
    (NP (NNP Archimedes))
    (VP (VBD leaped)
      (PP (IN from)
        (NP (DT the) (NN bath))))
    (. .)))

advcl(leaped-6, Forgetting-1)
nsubj(else-3, everything-2)
xcomp(Forgetting-1, else-3)
nsubj(leaped-6, Archimedes-5)
root(ROOT-0, leaped-6)
case(bath-9, from-7)
det(bath-9, the-8)
nmod:from(leaped-6, bath-9)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD ran)
      (S
        (VP
          (ADVP (JJ naked)
            (PP (IN through)
              (NP (DT the) (NNS streets))
              (PP (TO to)
                (NP
                  (NP (DT the) (NN king) (POS 's))
                  (NN palace)))))
          (VBG shouting) (`` ``)
          (NP (NNP Eureka)))))
    (. !) ('' '')))

nsubj(ran-2, He-1)
root(ROOT-0, ran-2)
advmod(shouting-12, naked-3)
case(streets-6, through-4)
det(streets-6, the-5)
nmod:through(naked-3, streets-6)
case(palace-11, to-7)
det(king-9, the-8)
nmod:poss(palace-11, king-9)
case(king-9, 's-10)
nmod:to(streets-6, palace-11)
ccomp(ran-2, shouting-12)
dobj(shouting-12, Eureka-14)

(ROOT
  (S
    (SBAR
      (WHNP
        (WHNP (WDT which))
        (PP (IN in)
          (NP (NNP English))))
      (S
        (VP (VBZ means))))
    (, ,) (`` ``)
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN found)
        (NP (PRP it))))
    (. !) ('' '')))

nsubj(means-4, which-1)
case(English-3, in-2)
nmod:in(which-1, English-3)
advcl(found-9, means-4)
nsubj(found-9, I-7)
aux(found-9, have-8)
root(ROOT-0, found-9)
dobj(found-9, it-10)

(ROOT
  (S
    (NP (DT The) (NN crown))
    (VP (VBD was)
      (VP (VBN tested)
        (CC and)
        (VBN found)
        (S
          (VP (TO to)
            (VP (VB displace)
              (NP
                (ADJP (RB much) (JJR more))
                (NN water))
              (PP (IN than)
                (NP
                  (NP (CD ten) (NNS pounds))
                  (PP (IN of)
                    (NP (JJ pure) (NN gold))))))))))
    (. .)))

det(crown-2, The-1)
nsubjpass(tested-4, crown-2)
nsubjpass(found-6, crown-2)
nsubj(displace-8, crown-2)
auxpass(tested-4, was-3)
root(ROOT-0, tested-4)
cc(tested-4, and-5)
conj:and(tested-4, found-6)
mark(displace-8, to-7)
xcomp(tested-4, displace-8)
advmod(more-10, much-9)
amod(water-11, more-10)
dobj(displace-8, water-11)
case(pounds-14, than-12)
nummod(pounds-14, ten-13)
nmod:than(displace-8, pounds-14)
case(gold-17, of-15)
amod(gold-17, pure-16)
nmod:of(pounds-14, gold-17)

(ROOT
  (S
    (NP
      (NP (DT The) (NN guilt))
      (PP (IN of)
        (NP (DT the) (NN goldsmith))))
    (VP (VBD was)
      (VP (VBN proved)
        (PP (IN beyond)
          (NP (DT a) (NN doubt)))))
    (. .)))

det(guilt-2, The-1)
nsubjpass(proved-7, guilt-2)
case(goldsmith-5, of-3)
det(goldsmith-5, the-4)
nmod:of(guilt-2, goldsmith-5)
auxpass(proved-7, was-6)
root(ROOT-0, proved-7)
case(doubt-10, beyond-8)
det(doubt-10, a-9)
nmod:beyond(proved-7, doubt-10)

