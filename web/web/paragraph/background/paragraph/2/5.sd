(ROOT
  (NP
    (NP (NN Lesson) (CD Five))
    (NP
      (NP (NNP Asking) (NNP Nature))
      (PP (IN for)
        (NP (NNP Advice))))
    (. .)))

root(ROOT-0, Lesson-1)
nummod(Lesson-1, Five-2)
compound(Nature-4, Asking-3)
dep(Lesson-1, Nature-4)
case(Advice-6, for-5)
nmod:for(Nature-4, Advice-6)

(ROOT
  (S
    (NP (DT Some) (NNS frogs))
    (ADVP (RB naturally))
    (VP (VB freeze)
      (NP
        (ADJP (JJ solid)
          (PP (IN in)
            (NP
              (NP (NN winter))
              (, ,)
              (ADVP (RB then)))))
        (NN thaw)
        (CC and)
        (NN hop))
      (ADVP (RB away)
        (PP (IN in)
          (NP (DT the) (NN spring)))))
    (. .)))

det(frogs-2, Some-1)
nsubj(freeze-4, frogs-2)
advmod(freeze-4, naturally-3)
root(ROOT-0, freeze-4)
amod(thaw-10, solid-5)
case(winter-7, in-6)
nmod:in(solid-5, winter-7)
advmod(winter-7, then-9)
dobj(freeze-4, thaw-10)
cc(thaw-10, and-11)
dobj(freeze-4, hop-12)
conj:and(thaw-10, hop-12)
advmod(freeze-4, away-13)
case(spring-16, in-14)
det(spring-16, the-15)
nmod:in(away-13, spring-16)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Ottawa) (, ,) (NNP Canada)))
    (, ,)
    (NP (NNS scientists))
    (VP (VBP are)
      (VP (VBG studying)
        (NP (DT these) (JJ frozen) (NNS frogs))))
    (. .)))

case(Canada-4, In-1)
compound(Canada-4, Ottawa-2)
nmod:in(studying-8, Canada-4)
nsubj(studying-8, scientists-6)
aux(studying-8, are-7)
root(ROOT-0, studying-8)
det(frogs-11, these-9)
amod(frogs-11, frozen-10)
dobj(studying-8, frogs-11)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP believe)
      (SBAR
        (S
          (NP (DT these) (NNS frogs))
          (VP (VBP hold)
            (NP
              (NP (DT the) (NN secret))
              (PP (IN for)
                (NP (JJR safer) (NN organ) (NNS transplants))))))))
    (. .)))

nsubj(believe-2, They-1)
root(ROOT-0, believe-2)
det(frogs-4, these-3)
nsubj(hold-5, frogs-4)
ccomp(believe-2, hold-5)
det(secret-7, the-6)
dobj(hold-5, secret-7)
case(transplants-11, for-8)
amod(transplants-11, safer-9)
compound(transplants-11, organ-10)
nmod:for(secret-7, transplants-11)

(ROOT
  (S
    (NP
      (NP (NNP Hearts))
      (, ,)
      (PP (IN for)
        (NP (NN example)))
      (, ,))
    (VP (MD could)
      (VP (VB be)
        (VP
          (VP
            (ADVP (RB safely))
            (VBN frozen))
          (CC and)
          (VP
            (ADVP (RB then))
            (VBN thawed)
            (SBAR
              (WHADVP (WRB when))
              (S
                (VP (VBD needed))))))))
    (. .)))

nsubjpass(frozen-9, Hearts-1)
nsubjpass(thawed-12, Hearts-1)
case(example-4, for-3)
nmod:for(Hearts-1, example-4)
aux(frozen-9, could-6)
auxpass(frozen-9, be-7)
advmod(frozen-9, safely-8)
root(ROOT-0, frozen-9)
cc(frozen-9, and-10)
advmod(thawed-12, then-11)
conj:and(frozen-9, thawed-12)
advmod(needed-14, when-13)
advcl(thawed-12, needed-14)

(ROOT
  (S
    (NP (DT These) (JJ Canadian) (NNS scientists))
    (VP (VBP arent)
      (NP
        (NP (DT the) (JJ only) (NNS ones))
        (VP (VBG looking)
          (PP (TO to)
            (NP
              (NP (NN nature))
              (PP (IN for)
                (NP (NN inspiration))))))))
    (. .)))

det(scientists-3, These-1)
amod(scientists-3, Canadian-2)
nsubj(arent-4, scientists-3)
root(ROOT-0, arent-4)
det(ones-7, the-5)
amod(ones-7, only-6)
dobj(arent-4, ones-7)
acl(ones-7, looking-8)
case(nature-10, to-9)
nmod:to(looking-8, nature-10)
case(inspiration-12, for-11)
nmod:for(nature-10, inspiration-12)

(ROOT
  (S
    (ADVP (RBR More)
      (CC and)
      (RBR more))
    (NP (NNS inventors))
    (VP (VBP are)
      (ADVP (RB also))
      (VP (VBG discovering)
        (SBAR (IN that)
          (S
            (NP (DT the) (JJ natural) (NN world))
            (VP (VBZ contains)
              (NP (JJ many) (JJ useful) (NNS designs)))))))
    (. .)))

advmod(discovering-7, More-1)
cc(More-1, and-2)
conj:and(More-1, more-3)
advmod(discovering-7, more-3)
nsubj(discovering-7, inventors-4)
aux(discovering-7, are-5)
advmod(discovering-7, also-6)
root(ROOT-0, discovering-7)
mark(contains-12, that-8)
det(world-11, the-9)
amod(world-11, natural-10)
nsubj(contains-12, world-11)
ccomp(discovering-7, contains-12)
amod(designs-15, many-13)
amod(designs-15, useful-14)
dobj(contains-12, designs-15)

(ROOT
  (S
    (NP (DT These) (NNS inventors))
    (VP (VBP are) (RB not)
      (VP (VBG looking)
        (SBAR
          (SBAR
            (WHPP (IN for)
              (WHNP (WP what)))
            (S
              (NP (PRP they))
              (VP (MD can)
                (VP (VB take)))))
          (, ,)
          (CONJP (CC but)
            (RB rather))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP they))
              (VP (MD can)
                (VP (VB learn) (, ,)
                  (PP (IN from)
                    (NP (NN nature))))))))))
    (. .)))

det(inventors-2, These-1)
nsubj(looking-5, inventors-2)
aux(looking-5, are-3)
neg(looking-5, not-4)
root(ROOT-0, looking-5)
case(what-7, for-6)
nmod:for(take-10, what-7)
nsubj(take-10, they-8)
aux(take-10, can-9)
dep(looking-5, take-10)
cc(rather-13, but-12)
cc(take-10, rather-13)
dobj(learn-17, what-14)
nsubj(learn-17, they-15)
aux(learn-17, can-16)
dep(looking-5, learn-17)
conj:rather(take-10, learn-17)
case(nature-20, from-19)
nmod:from(learn-17, nature-20)

(ROOT
  (S
    (NP
      (NP (NNS Inventions))
      (PP (VBN based)
        (PP (IN on)
          (NP (NN nature)))))
    (VP (VBP are)
      (ADJP (NN nothing) (JJ new)))
    (. .)))

nsubj(new-7, Inventions-1)
case(nature-4, based-2)
mwe(based-2, on-3)
nmod:based_on(Inventions-1, nature-4)
cop(new-7, are-5)
nmod:npmod(new-7, nothing-6)
root(ROOT-0, new-7)

(ROOT
  (S
    (PP (IN Over)
      (ADVP
        (NP (DT a) (NN century))
        (RB ago)))
    (, ,)
    (NP
      (NP (DT the) (NNP Wright) (NNS brothers))
      (, ,)
      (NP
        (NP (DT the) (NNS inventors))
        (PP (IN of)
          (NP (DT the) (NN airplane))))
      (, ,))
    (VP (VBD studied)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (NNS birds))
          (VP (VBP fly)))))
    (. .)))

case(ago-4, Over-1)
det(century-3, a-2)
nmod:npmod(ago-4, century-3)
advcl:over(studied-16, ago-4)
det(brothers-8, the-6)
compound(brothers-8, Wright-7)
nsubj(studied-16, brothers-8)
det(inventors-11, the-10)
appos(brothers-8, inventors-11)
case(airplane-14, of-12)
det(airplane-14, the-13)
nmod:of(inventors-11, airplane-14)
root(ROOT-0, studied-16)
advmod(fly-19, how-17)
nsubj(fly-19, birds-18)
ccomp(studied-16, fly-19)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD watched)
      (NP
        (NP (NNS details))
        (PP (JJ such) (IN as)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (VBG flying) (NNS birds))
              (VP (VBD adjusted)
                (NP (PRP$ their) (NNS wings))
                (S
                  (VP (TO to)
                    (VP (VB turn))))))))))
    (. .)))

nsubj(watched-2, They-1)
root(ROOT-0, watched-2)
dobj(watched-2, details-3)
mark(adjusted-9, such-4)
mwe(such-4, as-5)
advmod(adjusted-9, how-6)
amod(birds-8, flying-7)
nsubj(adjusted-9, birds-8)
acl(details-3, adjusted-9)
nmod:poss(wings-11, their-10)
dobj(adjusted-9, wings-11)
mark(turn-13, to-12)
advcl(adjusted-9, turn-13)

(ROOT
  (S
    (PP (IN By)
      (S
        (VP (VBG applying)
          (NP (PRP$ their) (NNS observations))
          (PP (TO to)
            (NP (PRP$ their) (JJ new) (NN invention))))))
    (, ,)
    (NP (DT the) (NNP Wright) (NNS brothers))
    (VP (VBD were)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB fly)
              (PP (IN like)
                (NP (DT a) (NN bird))))))))
    (. .)))

mark(applying-2, By-1)
advcl(able-14, applying-2)
nmod:poss(observations-4, their-3)
dobj(applying-2, observations-4)
case(invention-8, to-5)
nmod:poss(invention-8, their-6)
amod(invention-8, new-7)
nmod:to(applying-2, invention-8)
det(brothers-12, the-10)
compound(brothers-12, Wright-11)
nsubj(able-14, brothers-12)
nsubj(fly-16, brothers-12)
cop(able-14, were-13)
root(ROOT-0, able-14)
mark(fly-16, to-15)
xcomp(able-14, fly-16)
case(bird-19, like-17)
det(bird-19, a-18)
nmod:like(fly-16, bird-19)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NNS 1940s)))
    (, ,)
    (NP
      (NP (DT a) (JJ Swiss) (NN engineer))
      (, ,)
      (NP (NNP George) (IN de) (NNP Mestral))
      (, ,))
    (VP (VBD noticed)
      (NP
        (NP (NNS burs))
        (VP (VBG sticking)
          (PP (TO to)
            (NP (PRP$ his) (NNS pants))))))
    (. .)))

case(1940s-3, In-1)
det(1940s-3, the-2)
nmod:in(noticed-13, 1940s-3)
det(engineer-7, a-5)
amod(engineer-7, Swiss-6)
nsubj(noticed-13, engineer-7)
compound(Mestral-11, George-9)
amod(Mestral-11, de-10)
appos(engineer-7, Mestral-11)
root(ROOT-0, noticed-13)
dobj(noticed-13, burs-14)
acl(burs-14, sticking-15)
case(pants-18, to-16)
nmod:poss(pants-18, his-17)
nmod:to(sticking-15, pants-18)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD examined)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT these) (NNS burs))))
        (PP (IN under)
          (NP (PRP$ his) (NN microscope))))
      (CC and)
      (VP (VBD found)
        (NP (JJ tiny) (NNS hooks))
        (PP (IN on)
          (NP
            (NP (DT the) (NN end))
            (PP (IN of)
              (NP (PRP it)))))))
    (. .)))

nsubj(examined-2, He-1)
nsubj(found-11, He-1)
root(ROOT-0, examined-2)
dobj(examined-2, one-3)
case(burs-6, of-4)
det(burs-6, these-5)
nmod:of(one-3, burs-6)
case(microscope-9, under-7)
nmod:poss(microscope-9, his-8)
nmod:under(examined-2, microscope-9)
cc(examined-2, and-10)
conj:and(examined-2, found-11)
amod(hooks-13, tiny-12)
dobj(found-11, hooks-13)
case(end-16, on-14)
det(end-16, the-15)
nmod:on(found-11, end-16)
case(it-18, of-17)
nmod:of(end-16, it-18)

(ROOT
  (S
    (PP (VBN Based)
      (PP (IN on)
        (NP (DT this) (NN concept))))
    (, ,)
    (NP (NNP Mestral))
    (VP (VBD invented)
      (NP (NN Velcro)))
    (. .)))

case(concept-4, Based-1)
mwe(Based-1, on-2)
det(concept-4, this-3)
advcl:based_on(invented-7, concept-4)
nsubj(invented-7, Mestral-6)
root(ROOT-0, invented-7)
dobj(invented-7, Velcro-8)

(ROOT
  (S
    (NP (NN Today))
    (, ,)
    (NP (NNS inventors))
    (VP (VBP are)
      (ADVP (RB still))
      (VP (VBG finding)
        (NP (JJ great) (NNS ideas))
        (PP (IN in)
          (NP (JJ natures) (NNS designs)))))
    (. .)))

nmod:tmod(finding-6, Today-1)
nsubj(finding-6, inventors-3)
aux(finding-6, are-4)
advmod(finding-6, still-5)
root(ROOT-0, finding-6)
amod(ideas-8, great-7)
dobj(finding-6, ideas-8)
case(designs-11, in-9)
amod(designs-11, natures-10)
nmod:in(finding-6, designs-11)

(ROOT
  (S
    (VP (VB Take) (, ,)
      (PP (IN for)
        (NP (NN example)))
      (, ,)
      (FRAG
        (NP (DT the) (NNS lotus))
        (. .)))))

root(ROOT-0, Take-1)
case(example-4, for-3)
nmod:for(Take-1, example-4)
det(lotus-7, the-6)
dep(Take-1, lotus-7)

(ROOT
  (S
    (NP (DT This) (NN plant))
    (ADVP (RB often))
    (VP
      (VP (VBZ grows)
        (PP (IN in)
          (NP (JJ muddy) (NNS environments))))
      (, ,)
      (CC but)
      (VP (VBZ remains)
        (ADJP (JJ dry)
          (CC and)
          (JJ clean))))
    (. .)))

det(plant-2, This-1)
nsubj(grows-4, plant-2)
nsubj(remains-10, plant-2)
advmod(grows-4, often-3)
root(ROOT-0, grows-4)
case(environments-7, in-5)
amod(environments-7, muddy-6)
nmod:in(grows-4, environments-7)
cc(grows-4, but-9)
conj:but(grows-4, remains-10)
xcomp(remains-10, dry-11)
cc(dry-11, and-12)
xcomp(remains-10, clean-13)
conj:and(dry-11, clean-13)

(ROOT
  (S
    (NP (JJ German) (NNS scientists))
    (VP (VBD discovered)
      (SBAR (IN that)
        (S
          (NP (PRP$ its) (NNS leaves))
          (VP (VBP are)
            (VP (VBN covered)
              (PP (IN with)
                (NP (JJ tiny) (NNS needles))))))))
    (. .)))

amod(scientists-2, German-1)
nsubj(discovered-3, scientists-2)
root(ROOT-0, discovered-3)
mark(covered-8, that-4)
nmod:poss(leaves-6, its-5)
nsubjpass(covered-8, leaves-6)
auxpass(covered-8, are-7)
ccomp(discovered-3, covered-8)
case(needles-11, with-9)
amod(needles-11, tiny-10)
nmod:with(covered-8, needles-11)

(ROOT
  (S
    (NP (NN Dust)
      (CC and)
      (NN dirt))
    (VP
      (VP (VBP fall)
        (PP (IN on)
          (NP (DT the) (NN needle) (NNS tips))))
      (CC and)
      (ADVP (RB readily))
      (VP (VBP wash)
        (PRT (RP away))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP it))
            (VP (VBZ rains))))))
    (. .)))

nsubj(fall-4, Dust-1)
nsubj(wash-11, Dust-1)
cc(Dust-1, and-2)
conj:and(Dust-1, dirt-3)
nsubj(fall-4, dirt-3)
root(ROOT-0, fall-4)
case(tips-8, on-5)
det(tips-8, the-6)
compound(tips-8, needle-7)
nmod:on(fall-4, tips-8)
cc(fall-4, and-9)
advmod(wash-11, readily-10)
conj:and(fall-4, wash-11)
compound:prt(wash-11, away-12)
advmod(rains-15, when-13)
nsubj(rains-15, it-14)
advcl(wash-11, rains-15)

(ROOT
  (S
    (NP
      (NP (NNP Lotusan))
      (, ,)
      (NP (DT a) (JJ German) (NN company))
      (, ,))
    (VP (VBD used)
      (NP (DT this) (JJ same) (NN concept))
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (JJ self-cleaning) (NN house) (NN paint))))))
    (. .)))

nsubj(used-7, Lotusan-1)
det(company-5, a-3)
amod(company-5, German-4)
appos(Lotusan-1, company-5)
root(ROOT-0, used-7)
det(concept-10, this-8)
amod(concept-10, same-9)
dobj(used-7, concept-10)
mark(make-12, to-11)
advcl(used-7, make-12)
amod(paint-15, self-cleaning-13)
compound(paint-15, house-14)
dobj(make-12, paint-15)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (VP (VBD dried))))
    (, ,)
    (NP (DT the) (NN paint) (NN surface))
    (VP (VBZ resembles)
      (NP
        (NP (NNS bumps))
        (PP (IN on)
          (NP (DT a) (JJ lotus) (NN leaf)))))
    (. .)))

advmod(dried-2, When-1)
advcl(resembles-7, dried-2)
det(surface-6, the-4)
compound(surface-6, paint-5)
nsubj(resembles-7, surface-6)
root(ROOT-0, resembles-7)
xcomp(resembles-7, bumps-8)
case(leaf-12, on-9)
det(leaf-12, a-10)
amod(leaf-12, lotus-11)
nmod:on(bumps-8, leaf-12)

(ROOT
  (S
    (NP (NNS Scientists))
    (VP (VBP are)
      (ADVP (RB now))
      (VP (VBG hoping)
        (S
          (VP (TO to)
            (VP (VB create)
              (NP
                (NP (DT a) (JJ similar) (NN paint))
                (PP (IN for)
                  (NP (NNS cars)))))))))
    (. .)))

nsubj(hoping-4, Scientists-1)
nsubj(create-6, Scientists-1)
aux(hoping-4, are-2)
advmod(hoping-4, now-3)
root(ROOT-0, hoping-4)
mark(create-6, to-5)
xcomp(hoping-4, create-6)
det(paint-9, a-7)
amod(paint-9, similar-8)
dobj(create-6, paint-9)
case(cars-11, for-10)
nmod:for(paint-9, cars-11)

(ROOT
  (S
    (VP (VB Imagine)
      (S
        (NP (DT a) (NN string))
        (ADJP (RB as) (JJ thick)
          (PP (IN as)
            (NP (DT a) (NN pencil))))
        (S
          (VP (VBG stopping)
            (NP (DT a) (VBG flying) (NN jet))))))
    (. .)))

root(ROOT-0, Imagine-1)
det(string-3, a-2)
nsubj(stopping-9, string-3)
advmod(thick-5, as-4)
dep(stopping-9, thick-5)
case(pencil-8, as-6)
det(pencil-8, a-7)
nmod:as(thick-5, pencil-8)
xcomp(Imagine-1, stopping-9)
det(jet-12, a-10)
amod(jet-12, flying-11)
dobj(stopping-9, jet-12)

(ROOT
  (FRAG
    (INTJ (UH No))
    (, ,)
    (NP
      (NP (PRP$ its))
      (PP (RB not)
        (NP (DT a) (NN cartoon))))
    (. .)))

discourse(its-3, No-1)
root(ROOT-0, its-3)
neg(cartoon-6, not-4)
det(cartoon-6, a-5)
nmod(its-3, cartoon-6)

(ROOT
  (S
    (PP (IN In)
      (NP (NN theory)))
    (, ,)
    (NP (PRP it))
    (VP (MD could)
      (VP (VB work)))
    (. .)))

case(theory-2, In-1)
nmod:in(work-6, theory-2)
nsubj(work-6, it-4)
aux(work-6, could-5)
root(ROOT-0, work-6)

(ROOT
  (S
    (NP (NNP Spider) (NNP silk))
    (VP (VBZ is)
      (ADJP
        (NP (CD five) (NNS times))
        (JJR stronger)
        (PP (IN than)
          (NP (NN steel)))))
    (. .)))

compound(silk-2, Spider-1)
nsubj(stronger-6, silk-2)
cop(stronger-6, is-3)
nummod(times-5, five-4)
nmod:npmod(stronger-6, times-5)
root(ROOT-0, stronger-6)
case(steel-8, than-7)
nmod:than(stronger-6, steel-8)

(ROOT
  (S
    (NP (PRP$ Its)
      (ADJP
        (ADJP (RB even) (JJR stronger))
        (PP (IN than)
          (NP (NNP KevlarXthe))))
      (NN toughest))
    (VP (VBZ man-made)
      (NP (NN material)))
    (. .)))

nmod:poss(toughest-6, Its-1)
advmod(stronger-3, even-2)
amod(toughest-6, stronger-3)
case(KevlarXthe-5, than-4)
nmod:than(stronger-3, KevlarXthe-5)
nsubj(man-made-7, toughest-6)
root(ROOT-0, man-made-7)
dobj(man-made-7, material-8)

(ROOT
  (S
    (NP (NNS Spiders))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (VP (MD cant)
      (VP (VB be)
        (VP (VBN farmed))))
    (. .)))

nsubjpass(farmed-7, Spiders-1)
advmod(farmed-7, however-3)
aux(farmed-7, cant-5)
auxpass(farmed-7, be-6)
root(ROOT-0, farmed-7)

(ROOT
  (S
    (NP (NNP Theyd))
    (VP (VBP eat)
      (NP (DT each) (JJ other)))
    (. .)))

nsubj(eat-2, Theyd-1)
root(ROOT-0, eat-2)
det(other-4, each-3)
dobj(eat-2, other-4)

(ROOT
  (S (IN So)
    (NP (NNS scientists))
    (VP (VBD put)
      (NP (NN spider) (NNS genes))
      (PP (IN inside)
        (NP (NNS goats))))
    (. .)))

dep(put-3, So-1)
nsubj(put-3, scientists-2)
root(ROOT-0, put-3)
compound(genes-5, spider-4)
dobj(put-3, genes-5)
case(goats-7, inside-6)
nmod:inside(put-3, goats-7)

(ROOT
  (S (RB Then)
    (NP (PRP they))
    (VP
      (VP (VBD collected))
      (CC and)
      (VP (VBD processed)
        (NP (DT the) (NNS goats) (NN milk))))
    (. .)))

advmod(collected-3, Then-1)
nsubj(collected-3, they-2)
nsubj(processed-5, they-2)
root(ROOT-0, collected-3)
cc(collected-3, and-4)
conj:and(collected-3, processed-5)
det(milk-8, the-6)
compound(milk-8, goats-7)
dobj(processed-5, milk-8)

(ROOT
  (NP (DT The) (NN result) (. ?)))

det(result-2, The-1)
root(ROOT-0, result-2)

(ROOT
  (NP
    (NP (NNP Spider) (NNP silk))
    (PP (IN from)
      (NP (NN milk)))
    (. !)))

compound(silk-2, Spider-1)
root(ROOT-0, silk-2)
case(milk-4, from-3)
nmod:from(silk-2, milk-4)

(ROOT
  (S
    (NP (PRP$ Its) (NNS uses))
    (VP (MD may)
      (VP (VB include)
        (NP
          (UCP
            (NP (JJR stronger) (JJ bulletproof) (NNS vests))
            (CC and)
            (ADJP (JJR safer)))
          (NNS bridges))))
    (. .)))

nmod:poss(uses-2, Its-1)
nsubj(include-4, uses-2)
aux(include-4, may-3)
root(ROOT-0, include-4)
amod(vests-7, stronger-5)
amod(vests-7, bulletproof-6)
compound(bridges-10, vests-7)
cc(vests-7, and-8)
conj:and(vests-7, safer-9)
compound(bridges-10, safer-9)
dobj(include-4, bridges-10)

(ROOT
  (S
    (VP (VBN Learn)
      (PP (IN from)
        (NP (NN nature))))
    (. .)))

root(ROOT-0, Learn-1)
case(nature-3, from-2)
nmod:from(Learn-1, nature-3)

(ROOT
  (S
    (NP (NNP Youll))
    (VP (VB be)
      (VP (VBN surprised)
        (PP (IN by)
          (NP (PRP$ its) (JJ great) (NNS designs)))))
    (. .)))

nsubjpass(surprised-3, Youll-1)
auxpass(surprised-3, be-2)
root(ROOT-0, surprised-3)
case(designs-7, by-4)
nmod:poss(designs-7, its-5)
amod(designs-7, great-6)
nmod:by(surprised-3, designs-7)

