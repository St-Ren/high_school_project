(ROOT
  (S
    (NP
      (NP (JJ Few))
      (PP (IN of)
        (NP (PRP us))))
    (VP (VBP ponder)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (PRP we))
          (VP (VBD got)
            (NP (PRP$ our) (NNS names))
            (SBAR (IN because)
              (S
                (NP (PRP we))
                (VP (VBP are)
                  (ADVP (RB so))
                  (VP (VBN used)
                    (PP (TO to)
                      (NP (PRP$ our) (NN naming) (NNS traditions)))))))))))
    (. .)))

nsubj(ponder-4, Few-1)
case(us-3, of-2)
nmod:of(Few-1, us-3)
root(ROOT-0, ponder-4)
advmod(got-7, how-5)
nsubj(got-7, we-6)
ccomp(ponder-4, got-7)
nmod:poss(names-9, our-8)
dobj(got-7, names-9)
mark(used-14, because-10)
nsubjpass(used-14, we-11)
auxpass(used-14, are-12)
advmod(used-14, so-13)
advcl(got-7, used-14)
case(traditions-18, to-15)
nmod:poss(traditions-18, our-16)
compound(traditions-18, naming-17)
nmod:to(used-14, traditions-18)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP look)
          (PP (IN at)
            (NP
              (NP (DT the) (NN naming) (NNS traditions))
              (PP (IN of)
                (NP (JJ various) (NNS cultures))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD may)
      (VP (VB learn)
        (NP (NN something) (JJ different))
        (PP (IN from)
          (NP (DT the) (NNS things)))
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (ADVP (RB usually))
            (VP (VB take)
              (PP (IN for)
                (S
                  (VP (JJ granted)))))))))
    (. .)))

mark(look-3, If-1)
nsubj(look-3, we-2)
advcl(learn-14, look-3)
case(traditions-7, at-4)
det(traditions-7, the-5)
compound(traditions-7, naming-6)
nmod:at(look-3, traditions-7)
case(cultures-10, of-8)
amod(cultures-10, various-9)
nmod:of(traditions-7, cultures-10)
nsubj(learn-14, we-12)
aux(learn-14, may-13)
root(ROOT-0, learn-14)
dobj(learn-14, something-15)
amod(something-15, different-16)
case(things-19, from-17)
det(things-19, the-18)
nmod:from(learn-14, things-19)
mark(take-23, that-20)
nsubj(take-23, we-21)
advmod(take-23, usually-22)
ccomp(learn-14, take-23)
mark(granted-25, for-24)
advcl(take-23, granted-25)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (DT some) (JJ distinct) (NNS differences))
        (PP (IN between)
          (NP (JJ Chinese)
            (CC and)
            (JJ Western) (NNS cultures)))
        (PP (VBG regarding)
          (S
            (VP (VBG naming)
              (NP (NNS customs)))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
det(differences-5, some-3)
amod(differences-5, distinct-4)
nsubj(are-2, differences-5)
case(cultures-10, between-6)
amod(cultures-10, Chinese-7)
cc(Chinese-7, and-8)
conj:and(Chinese-7, Western-9)
amod(cultures-10, Western-9)
nmod:between(differences-5, cultures-10)
case(naming-12, regarding-11)
acl:regarding(differences-5, naming-12)
dobj(naming-12, customs-13)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ former)))
    (, ,)
    (NP (NNS people))
    (VP (VBP tend)
      (S
        (VP (TO to)
          (VP (VB keep)
            (NP (PRP$ their) (NN family) (NN name))
            (PP (IN from)
              (NP (NN generation)))
            (PP (TO to)
              (NP (NN generation)))))))
    (. .)))

case(former-3, In-1)
det(former-3, the-2)
nmod:in(tend-6, former-3)
nsubj(tend-6, people-5)
nsubj(keep-8, people-5)
root(ROOT-0, tend-6)
mark(keep-8, to-7)
xcomp(tend-6, keep-8)
nmod:poss(name-11, their-9)
compound(name-11, family-10)
dobj(keep-8, name-11)
case(generation-13, from-12)
nmod:from(keep-8, generation-13)
case(generation-15, to-14)
nmod:to(keep-8, generation-15)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (EX there))
          (VP (VBP are)
            (NP
              (NP
                (QP (NNS tens) (IN of) (NNS millions)))
              (PP (IN of)
                (NP
                  (NP (NNS people))
                  (VP (VBG sharing)
                    (NP
                      (NP (JJ common) (NN family) (NNS names))
                      (PP (JJ such) (IN as)
                        (NP (`` ``)
                          (NP (NNP Wang))
                          ('' '')
                          (CC or)
                          (`` ``)
                          (NP (NNP Li)))))))))))))
    (. .) ('' '')))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
advmod(are-5, why-3)
expl(are-5, there-4)
advcl(is-2, are-5)
dep(millions-8, tens-6)
advmod(millions-8, of-7)
nsubj(are-5, millions-8)
case(people-10, of-9)
nmod:of(millions-8, people-10)
acl(people-10, sharing-11)
amod(names-14, common-12)
compound(names-14, family-13)
dobj(sharing-11, names-14)
case(Wang-18, such-15)
mwe(such-15, as-16)
nmod:such_as(names-14, Wang-18)
cc(Wang-18, or-20)
nmod:such_as(names-14, Li-22)
conj:or(Wang-18, Li-22)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ many) (JJ Western) (NNS countries)))
    (, ,)
    (S
      (PP (IN on)
        (NP (DT the) (JJ other) (NN hand)))
      (, ,)
      (NP (NNS surnames))
      (ADVP (RB often))
      (VP (VBP change)))
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ tends)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT a) (JJR wider) (NN range))
                (PP (IN of)
                  (NP (PRP them)))))))))
    (. .)))

case(countries-4, In-1)
amod(countries-4, many-2)
amod(countries-4, Western-3)
nmod:in(change-13, countries-4)
case(hand-9, on-6)
det(hand-9, the-7)
amod(hand-9, other-8)
nmod:on(change-13, hand-9)
nsubj(change-13, surnames-11)
nsubj(tends-16, surnames-11)
nsubj(range-21, surnames-11)
advmod(change-13, often-12)
root(ROOT-0, change-13)
cc(change-13, and-14)
expl(tends-16, there-15)
conj:and(change-13, tends-16)
mark(range-21, to-17)
cop(range-21, be-18)
det(range-21, a-19)
amod(range-21, wider-20)
xcomp(tends-16, range-21)
case(them-23, of-22)
nmod:of(range-21, them-23)

(ROOT
  (S
    (ADVP (RB Furthermore))
    (, ,)
    (NP (JJ Chinese) (NNS people))
    (VP (VBP show)
      (NP
        (NP (NN respect))
        (PP (IN for)
          (NP (PRP$ their) (NNS elders)
            (CC and)
            (NNS ancestors))))
      (PP (IN by)
        (S (RB not)
          (VP (VBG passing)
            (PP (IN on)
              (NP (PRP$ their) (VBN given) (NNS names)))))))
    (. .)))

advmod(show-5, Furthermore-1)
amod(people-4, Chinese-3)
nsubj(show-5, people-4)
root(ROOT-0, show-5)
dobj(show-5, respect-6)
case(elders-9, for-7)
nmod:poss(elders-9, their-8)
nmod:for(respect-6, elders-9)
cc(elders-9, and-10)
nmod:for(respect-6, ancestors-11)
conj:and(elders-9, ancestors-11)
mark(passing-14, by-12)
neg(passing-14, not-13)
advcl(show-5, passing-14)
case(names-18, on-15)
nmod:poss(names-18, their-16)
amod(names-18, given-17)
nmod:on(passing-14, names-18)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ Western) (NNS societies)))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (S
      (VP (VBG naming)
        (NP (DT a) (NN child))
        (PP (IN after)
          (NP (DT an) (NN ancestor)))))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN indication))
        (PP (IN of)
          (NP (NN esteem)
            (CC and)
            (NN affection)))))
    (. .)))

case(societies-3, In-1)
amod(societies-3, Western-2)
nmod:in(indication-15, societies-3)
advmod(indication-15, however-5)
csubj(indication-15, naming-7)
det(child-9, a-8)
dobj(naming-7, child-9)
case(ancestor-12, after-10)
det(ancestor-12, an-11)
nmod:after(naming-7, ancestor-12)
cop(indication-15, is-13)
det(indication-15, an-14)
root(ROOT-0, indication-15)
case(esteem-17, of-16)
nmod:of(indication-15, esteem-17)
cc(esteem-17, and-18)
nmod:of(indication-15, affection-19)
conj:and(esteem-17, affection-19)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (PP (IN in)
          (NP (JJS most) (NNS cultures)))
        (NP
          (NP (RB only) (DT the) (NN surname))
          (PP (IN of)
            (NP (DT the) (NN father))))
        (VP (VBZ is)
          (VP (VBN carried) (, ,)
            (PP (IN in)
              (NP
                (NP (NNP Spanish))
                (: -)
                (S
                  (VP (VBG speaking)
                    (NP (NNS countries))))))))))
    (, ,)
    (NP (NNS people))
    (VP (VBP take)
      (NP
        (NP (DT the) (NN family) (NNS names))
        (PP (IN of)
          (NP (PDT both)
            (NP (PRP$ their) (NN mother))
            (CC and)
            (NP (NN father))))))
    (. .)))

mark(carried-12, While-1)
case(cultures-4, in-2)
amod(cultures-4, most-3)
nmod:in(carried-12, cultures-4)
advmod(surname-7, only-5)
det(surname-7, the-6)
nsubjpass(carried-12, surname-7)
case(father-10, of-8)
det(father-10, the-9)
nmod:of(surname-7, father-10)
auxpass(carried-12, is-11)
advcl(take-21, carried-12)
case(Spanish-15, in-14)
nmod:in(carried-12, Spanish-15)
parataxis(Spanish-15, speaking-17)
dobj(speaking-17, countries-18)
nsubj(take-21, people-20)
root(ROOT-0, take-21)
det(names-24, the-22)
compound(names-24, family-23)
dobj(take-21, names-24)
case(mother-28, of-25)
cc:preconj(mother-28, both-26)
nmod:poss(mother-28, their-27)
nmod:of(names-24, mother-28)
cc(mother-28, and-29)
nmod:of(names-24, father-30)
conj:and(mother-28, father-30)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP (DT the) (JJ celebrated) (JJ Spanish) (NN tennis) (NN player) (NNP Rafael) (NNP Nadal) (NNP Parera))
    (VP (VBD received)
      (NP (`` ``)
        (NP (NNP Nadal))
        ('' '')
        (PP (IN from)
          (NP (PRP$ his) (NN father)
            (CC and)
            (`` ``) (NN Parera) ('' ''))))
      (PP (IN from)
        (NP (PRP$ his) (NN mother))))
    (. .)))

case(example-2, For-1)
nmod:for(received-12, example-2)
det(Parera-11, the-4)
amod(Parera-11, celebrated-5)
amod(Parera-11, Spanish-6)
compound(Parera-11, tennis-7)
compound(Parera-11, player-8)
compound(Parera-11, Rafael-9)
compound(Parera-11, Nadal-10)
nsubj(received-12, Parera-11)
root(ROOT-0, received-12)
dobj(received-12, Nadal-14)
case(father-18, from-16)
nmod:poss(father-18, his-17)
nmod:from(Nadal-14, father-18)
cc(father-18, and-19)
nmod:from(Nadal-14, Parera-21)
conj:and(father-18, Parera-21)
case(mother-25, from-23)
nmod:poss(mother-25, his-24)
nmod:from(received-12, mother-25)

(ROOT
  (S
    (S
      (PP (IN Unlike)
        (NP (DT the) (JJ usual) (JJ English) (NNS names)))
      (NP (PRP we))
      (VP (VBP know)))
    (, ,)
    (NP (DT the) (JJ middle) (NN name))
    (VP
      (VP (VBZ is)
        (VP (VBN regarded)
          (PP (IN as)
            (NP
              (NP (DT the) (NN surname))
              (PP (IN in)
                (NP (NNP Spain)))))))
      (CC and)
      (VP (VBZ is)
        (VP (VBN passed)
          (PRT (RP on))
          (PP (IN from)
            (NP (NN generation)))
          (PP (TO to)
            (NP (NN generation))))))
    (. .)))

case(names-5, Unlike-1)
det(names-5, the-2)
amod(names-5, usual-3)
amod(names-5, English-4)
nmod:unlike(know-7, names-5)
nsubj(know-7, we-6)
ccomp(regarded-13, know-7)
det(name-11, the-9)
amod(name-11, middle-10)
nsubjpass(regarded-13, name-11)
nsubjpass(passed-21, name-11)
auxpass(regarded-13, is-12)
root(ROOT-0, regarded-13)
case(surname-16, as-14)
det(surname-16, the-15)
nmod:as(regarded-13, surname-16)
case(Spain-18, in-17)
nmod:in(surname-16, Spain-18)
cc(regarded-13, and-19)
auxpass(passed-21, is-20)
conj:and(regarded-13, passed-21)
compound:prt(passed-21, on-22)
case(generation-24, from-23)
nmod:from(passed-21, generation-24)
case(generation-26, to-25)
nmod:to(passed-21, generation-26)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS cultures))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NN family) (NNS links))
            (VP (VBP are)
              (VP (VBN indicated)
                (PP (IN in)
                  (NP (NNS names)))))))))
    (, ,)
    (NP (DT some) (JJ unique) (NNS rules))
    (VP (VBP exist))
    (. .)))

case(cultures-2, In-1)
nmod:in(exist-14, cultures-2)
advmod(indicated-7, where-3)
compound(links-5, family-4)
nsubjpass(indicated-7, links-5)
auxpass(indicated-7, are-6)
acl:relcl(cultures-2, indicated-7)
case(names-9, in-8)
nmod:in(indicated-7, names-9)
det(rules-13, some-11)
amod(rules-13, unique-12)
nsubj(exist-14, rules-13)
root(ROOT-0, exist-14)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Iceland)))
    (, ,)
    (NP
      (NP (DT a) (NN person) (POS 's))
      (JJ last) (NN name))
    (ADVP (RB usually))
    (VP (VBZ comes)
      (ADVP (RB directly))
      (PP (IN from)
        (NP
          (NP (DT the) (JJ first) (NN name))
          (PP (IN of)
            (NP (DT the) (NN father))))))
    (. .)))

case(Iceland-2, In-1)
nmod:in(comes-10, Iceland-2)
det(person-5, a-4)
nmod:poss(name-8, person-5)
case(person-5, 's-6)
amod(name-8, last-7)
nsubj(comes-10, name-8)
advmod(comes-10, usually-9)
root(ROOT-0, comes-10)
advmod(comes-10, directly-11)
case(name-15, from-12)
det(name-15, the-13)
amod(name-15, first-14)
nmod:from(comes-10, name-15)
case(father-18, of-16)
det(father-18, the-17)
nmod:of(name-15, father-18)

(ROOT
  (S
    (PP (IN For)
      (NP (NN instance)))
    (, ,)
    (NP (DT a) (NN boy))
    (VP (VBD named)
      (SBAR
        (S
          (NP
            (NP (NNP Erik))
            (VP (VBN born)
              (PP (TO to)
                (NP (DT a) (NN father)))))
          (VP (VBD named)
            (SBAR
              (S
                (NP (NNP Lars))
                (VP (MD would)
                  (VP (VB be)
                    (VP (VBN named)
                      (NP (NNP Erik) (NNP Larsson)))))))))))
    (. .)))

case(instance-2, For-1)
nmod:for(named-6, instance-2)
det(boy-5, a-4)
nsubj(named-6, boy-5)
root(ROOT-0, named-6)
nsubj(named-12, Erik-7)
acl(Erik-7, born-8)
case(father-11, to-9)
det(father-11, a-10)
nmod:to(born-8, father-11)
ccomp(named-6, named-12)
nsubjpass(named-16, Lars-13)
aux(named-16, would-14)
auxpass(named-16, be-15)
ccomp(named-12, named-16)
compound(Larsson-18, Erik-17)
dobj(named-16, Larsson-18)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Lars) (POS 's))
        (NN daughter))
      (, ,)
      (NP (NNP Kristin))
      (, ,))
    (VP (MD would)
      (VP (VB go)
        (PP (IN by)
          (NP
            (NP (DT the) (NN name))
            (PP (IN of)
              (NP (NNP Kristin) (NNP Larsdottir)))))))
    (. .)))

nmod:poss(daughter-3, Lars-1)
case(Lars-1, 's-2)
nsubj(go-8, daughter-3)
appos(daughter-3, Kristin-5)
aux(go-8, would-7)
root(ROOT-0, go-8)
case(name-11, by-9)
det(name-11, the-10)
nmod:by(go-8, name-11)
case(Larsdottir-14, of-12)
compound(Larsdottir-14, Kristin-13)
nmod:of(name-11, Larsdottir-14)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP
      (NP (DT the) (JJ vast) (NN majority))
      (PP (IN of)
        (NP (JJ Icelandic) (NNS names))))
    (VP (VBP end)
      (PP (IN in)
        (NP (DT either) (`` ``) (NN son) ('' '')
          (CC or)
          (`` ``) (NN dottir))))
    (. .) ('' '')))

advmod(end-9, Therefore-1)
det(majority-5, the-3)
amod(majority-5, vast-4)
nsubj(end-9, majority-5)
case(names-8, of-6)
amod(names-8, Icelandic-7)
nmod:of(majority-5, names-8)
root(ROOT-0, end-9)
case(son-13, in-10)
cc:preconj(son-13, either-11)
nmod:in(end-9, son-13)
cc(son-13, or-15)
nmod:in(end-9, dottir-17)
conj:or(son-13, dottir-17)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB imagine)
        (SBAR (IN that)
          (S
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (NNP Erik))
                (VP (VBZ has)
                  (NP (PRP$ his) (JJ own) (NNS sons)
                    (CC and)
                    (NNS daughters)))))
            (, ,)
            (NP (PRP$ their) (JJ last) (NNS names))
            (VP (MD will)
              (VP (VB be)
                (NP (NNP Eriksson)
                  (CC and)
                  (NNP Eriksdottir))
                (ADVP (RB respectively))))))))
    (. .)))

nsubj(imagine-3, You-1)
aux(imagine-3, can-2)
root(ROOT-0, imagine-3)
mark(Eriksson-19, that-4)
advmod(has-7, when-5)
nsubj(has-7, Erik-6)
advcl(Eriksson-19, has-7)
nmod:poss(sons-10, his-8)
amod(sons-10, own-9)
dobj(has-7, sons-10)
cc(sons-10, and-11)
dobj(has-7, daughters-12)
conj:and(sons-10, daughters-12)
nmod:poss(names-16, their-14)
amod(names-16, last-15)
nsubj(Eriksson-19, names-16)
aux(Eriksson-19, will-17)
cop(Eriksson-19, be-18)
ccomp(imagine-3, Eriksson-19)
cc(Eriksson-19, and-20)
ccomp(imagine-3, Eriksdottir-21)
conj:and(Eriksson-19, Eriksdottir-21)
advmod(Eriksson-19, respectively-22)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (DT the) (NNP Yami) (NNS people))
        (PP (IN of)
          (NP (NNP Taiwan)))))
    (, ,)
    (NP (DT the) (NN naming) (NN tradition))
    (VP (VBZ works)
      (NP (DT the) (JJ other) (NN way))
      (ADVP (RB around)))
    (. .)))

case(people-4, For-1)
det(people-4, the-2)
compound(people-4, Yami-3)
nmod:for(works-11, people-4)
case(Taiwan-6, of-5)
nmod:of(people-4, Taiwan-6)
det(tradition-10, the-8)
compound(tradition-10, naming-9)
nsubj(works-11, tradition-10)
root(ROOT-0, works-11)
det(way-14, the-12)
amod(way-14, other-13)
dobj(works-11, way-14)
advmod(works-11, around-15)

(ROOT
  (S
    (PP (IN In)
      (NP (DT this) (NN culture)))
    (, ,)
    (NP (DT the) (NN son))
    (VP (VBZ does) (RB not)
      (VP (VB take)
        (NP
          (NP (DT the) (NN name))
          (PP (IN of)
            (NP (DT the) (NN father))))))
    (. .)))

case(culture-3, In-1)
det(culture-3, this-2)
nmod:in(take-9, culture-3)
det(son-6, the-5)
nsubj(take-9, son-6)
aux(take-9, does-7)
neg(take-9, not-8)
root(ROOT-0, take-9)
det(name-11, the-10)
dobj(take-9, name-11)
case(father-14, of-12)
det(father-14, the-13)
nmod:of(name-11, father-14)

(ROOT
  (S
    (ADVP (RB Instead))
    (, ,)
    (NP (DT the) (NN father))
    (VP (VBZ changes)
      (NP (PRP$ his) (NN name))
      (PP (IN upon)
        (NP
          (NP (DT the) (NN birth))
          (PP (IN of)
            (NP (PRP$ his) (JJ first) (NN son))))))
    (. .)))

advmod(changes-5, Instead-1)
det(father-4, the-3)
nsubj(changes-5, father-4)
root(ROOT-0, changes-5)
nmod:poss(name-7, his-6)
dobj(changes-5, name-7)
case(birth-10, upon-8)
det(birth-10, the-9)
nmod:upon(changes-5, birth-10)
case(son-14, of-11)
nmod:poss(son-14, his-12)
amod(son-14, first-13)
nmod:of(birth-10, son-14)

(ROOT
  (S
    (PP (IN For)
      (NP (NN instance)))
    (, ,)
    (NP
      (NP (DT a) (NN father))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ names)
            (NP (PRP$ his) (NN son))))))
    (NP (NNP Lamboan))
    (VP (MD would)
      (ADVP (RB also))
      (VP (VB change)
        (NP (PRP$ his) (JJ own) (NN name))
        (PP (TO to)
          (NP
            (NP (NNP Shaman) (NNP Lamboan))
            (, ,)
            (VP (VBG meaning) (`` ``)
              (NP
                (NP (NNP Father))
                (PP (IN of)
                  (NP (NNP Lamboan)))))))))
    (. .) ('' '')))

case(instance-2, For-1)
nmod:for(change-13, instance-2)
det(father-5, a-4)
nsubj(names-7, father-5)
nsubj(change-13, father-5)
ref(father-5, who-6)
acl:relcl(father-5, names-7)
nmod:poss(son-9, his-8)
dobj(names-7, son-9)
nsubj(change-13, Lamboan-10)
aux(change-13, would-11)
advmod(change-13, also-12)
root(ROOT-0, change-13)
nmod:poss(name-16, his-14)
amod(name-16, own-15)
dobj(change-13, name-16)
case(Lamboan-19, to-17)
compound(Lamboan-19, Shaman-18)
nmod:to(change-13, Lamboan-19)
acl(Lamboan-19, meaning-21)
dobj(meaning-21, Father-23)
case(Lamboan-25, of-24)
nmod:of(Father-23, Lamboan-25)

(ROOT
  (S
    (ADVP (RB Additionally))
    (, ,)
    (NP
      (NP
        (NP (DT the) (NN boy) (POS 's))
        (NN grandfather) (POS 's))
      (NN name))
    (VP (MD would)
      (VP (VB be)
        (VP (VBN changed)
          (PP (TO to)
            (NP
              (NP (NNP Shabin) (NNP Lamboan))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ stands)
                    (PP (IN for) (`` ``)
                      (NP
                        (NP (NNP Grandfather))
                        (PP (IN of)
                          (NP (NNP Lamboan)))))))))))))
    (. .) ('' '')))

advmod(changed-11, Additionally-1)
det(boy-4, the-3)
nmod:poss(grandfather-6, boy-4)
case(boy-4, 's-5)
nmod:poss(name-8, grandfather-6)
case(grandfather-6, 's-7)
nsubjpass(changed-11, name-8)
aux(changed-11, would-9)
auxpass(changed-11, be-10)
root(ROOT-0, changed-11)
case(Lamboan-14, to-12)
compound(Lamboan-14, Shabin-13)
nmod:to(changed-11, Lamboan-14)
nsubj(stands-17, Lamboan-14)
ref(Lamboan-14, which-16)
acl:relcl(Lamboan-14, stands-17)
case(Grandfather-20, for-18)
nmod:for(stands-17, Grandfather-20)
case(Lamboan-22, of-21)
nmod:of(Grandfather-20, Lamboan-22)

(ROOT
  (S
    (NP (RB Not) (DT all) (NNS cultures))
    (VP (VBP suggest)
      (NP
        (NP (NN family) (NNS relationships))
        (PP (IN in)
          (NP (PRP$ their) (NN naming) (NN system)))))
    (. .)))

neg(cultures-3, Not-1)
det(cultures-3, all-2)
nsubj(suggest-4, cultures-3)
root(ROOT-0, suggest-4)
compound(relationships-6, family-5)
dobj(suggest-4, relationships-6)
case(system-10, in-7)
nmod:poss(system-10, their-8)
compound(system-10, naming-9)
nmod:in(relationships-6, system-10)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (PP (IN in)
      (NP
        (NP (DT the)
          (ADJP (JJ Southeast) (JJ Asian))
          (NN nation))
        (PP (IN of)
          (NP (NNP Myanmar)))))
    (, ,)
    (NP (DT the) (NN convention))
    (VP (VBZ is)
      (PP (IN for)
        (NP (NNS people)))
      (S
        (VP (TO to)
          (VP (VB go)
            (PP (IN without)
              (NP (DT a) (NN surname)))))))
    (. .)))

case(example-2, For-1)
nmod:for(people-16, example-2)
case(nation-8, in-4)
det(nation-8, the-5)
amod(Asian-7, Southeast-6)
amod(nation-8, Asian-7)
nmod:in(people-16, nation-8)
case(Myanmar-10, of-9)
nmod:of(nation-8, Myanmar-10)
det(convention-13, the-12)
nsubj(people-16, convention-13)
nsubj(go-18, convention-13)
cop(people-16, is-14)
case(people-16, for-15)
root(ROOT-0, people-16)
mark(go-18, to-17)
xcomp(people-16, go-18)
case(surname-21, without-19)
det(surname-21, a-20)
nmod:without(go-18, surname-21)

(ROOT
  (S
    (NP (PRP$ Our) (NNS names))
    (VP (VBP are)
      (VP (VBN determined)
        (PP (IN by)
          (NP
            (NP (DT the) (NNS customs)
              (CC and)
              (NNS traditions))
            (PP (IN of)
              (NP (PRP$ our) (NN culture)))))))
    (. .)))

nmod:poss(names-2, Our-1)
nsubjpass(determined-4, names-2)
auxpass(determined-4, are-3)
root(ROOT-0, determined-4)
case(customs-7, by-5)
det(customs-7, the-6)
nmod:by(determined-4, customs-7)
cc(customs-7, and-8)
nmod:by(determined-4, traditions-9)
conj:and(customs-7, traditions-9)
case(culture-12, of-10)
nmod:poss(culture-12, our-11)
nmod:of(customs-7, culture-12)

(ROOT
  (S
    (NP (PRP They))
    (ADVP (RB also))
    (VP (VBP decide)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (PRP we))
          (VP (VBP think)
            (PP (IN of)
              (NP
                (NP (PRP ourselves))
                (CC and)
                (NP (PRP$ our) (NN relationship))))
            (PP (TO to)
              (NP (DT the) (NN culture)))))))
    (. .)))

nsubj(decide-3, They-1)
advmod(decide-3, also-2)
root(ROOT-0, decide-3)
advmod(think-6, how-4)
nsubj(think-6, we-5)
ccomp(decide-3, think-6)
case(ourselves-8, of-7)
nmod:of(think-6, ourselves-8)
cc(ourselves-8, and-9)
nmod:poss(relationship-11, our-10)
nmod:of(think-6, relationship-11)
conj:and(ourselves-8, relationship-11)
case(culture-14, to-12)
det(culture-14, the-13)
nmod:to(think-6, culture-14)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ 's)
      (PP (IN in)
        (NP (DT a) (NN name))))
    (. ?) ('' '')))

dobj('s-3, What-2)
root(ROOT-0, 's-3)
case(name-6, in-4)
det(name-6, a-5)
nmod:in('s-3, name-6)

(ROOT
  (S
    (NP (NNP Shakespeare))
    (VP (VBD inquired)
      (PP (IN in)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (PRP$ his) (JJ renowned) (NNS plays))))))
    (. .)))

nsubj(inquired-2, Shakespeare-1)
root(ROOT-0, inquired-2)
case(one-4, in-3)
nmod:in(inquired-2, one-4)
case(plays-8, of-5)
nmod:poss(plays-8, his-6)
amod(plays-8, renowned-7)
nmod:of(one-4, plays-8)

(ROOT
  (FRAG
    (ADVP (RB Apparently))
    (, ,)
    (NP (RB quite) (DT a) (NN lot))
    (. .)))

dep(lot-5, Apparently-1)
advmod(lot-5, quite-3)
det(lot-5, a-4)
root(ROOT-0, lot-5)

