(ROOT
  (NP (NNP Unit) (NNP Anne) (NNP Franks) (NNP Diary) (. .)))

compound(Diary-4, Unit-1)
compound(Diary-4, Anne-2)
compound(Diary-4, Franks-3)
root(ROOT-0, Diary-4)

(ROOT
  (S
    (PP (IN In)
      (S
        (NP (DT the) (NNS years))
        (VP (VBG leading)
          (PRT (RP up))
          (PP
            (PP (TO to)
              (NP (NNP World) (NNP War) (NNP II)))
            (, ,)
            (CC and)
            (ADVP (RB also))
            (PP (IN throughout)
              (NP (DT the) (NN war)))))))
    (, ,)
    (NP
      (NP (DT the) (JJ Nazi) (NN government))
      (PP (IN of)
        (NP (NNP Germany))))
    (VP (VBD adopted)
      (NP
        (NP (DT a) (JJ racist) (NN policy))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBN led)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN murder))
                  (PP (IN of)
                    (NP
                      (NP (NNS millions))
                      (PP (IN of)
                        (NP (NNPS Jews)))))
                  (, ,)
                  (VP (VBN known)
                    (PP (IN as)
                      (NP (DT the) (NNP Holocaust)))))))))))
    (. .)))

mark(leading-4, In-1)
det(years-3, the-2)
nsubj(leading-4, years-3)
nsubj(leading-4', years-3)
conj:and(leading-4, leading-4')
advcl(adopted-22, leading-4)
advcl(adopted-22, leading-4')
compound:prt(leading-4, up-5)
case(II-9, to-6)
compound(II-9, World-7)
compound(II-9, War-8)
nmod:to(leading-4, II-9)
cc(leading-4, and-11)
advmod(war-15, also-12)
case(war-15, throughout-13)
det(war-15, the-14)
nmod:throughout(leading-4', war-15)
det(government-19, the-17)
amod(government-19, Nazi-18)
nsubj(adopted-22, government-19)
case(Germany-21, of-20)
nmod:of(government-19, Germany-21)
root(ROOT-0, adopted-22)
det(policy-25, a-23)
amod(policy-25, racist-24)
dobj(adopted-22, policy-25)
nsubj(led-27, policy-25)
ref(policy-25, that-26)
acl:relcl(policy-25, led-27)
case(murder-30, to-28)
det(murder-30, the-29)
nmod:to(led-27, murder-30)
case(millions-32, of-31)
nmod:of(murder-30, millions-32)
case(Jews-34, of-33)
nmod:of(millions-32, Jews-34)
acl(murder-30, known-36)
case(Holocaust-39, as-37)
det(Holocaust-39, the-38)
nmod:as(known-36, Holocaust-39)

(ROOT
  (S
    (PP
      (PP (IN In)
        (NP (NNP Germany)))
      (CC and)
      (PP (IN in)
        (NP
          (NP (DT the) (NNS countries))
          (ADJP (VBN occupied)
            (PP (IN by)
              (NP (DT the) (JJ German) (NN army)))))))
    (, ,)
    (NP (NNPS Jews))
    (VP (VBD were)
      (VP (VBN made)
        (S
          (VP (TO to)
            (VP (VB wear)
              (NP (DT a) (JJ yellow) (NN star))
              (SBAR (RB so) (IN that)
                (S
                  (NP (PRP they))
                  (VP (MD could)
                    (VP (VB be)
                      (VP
                        (ADVP (RB easily))
                        (VBN identified)))))))))))
    (. .)))

case(Germany-2, In-1)
nmod:in(made-15, Germany-2)
cc(made-15, and-3)
case(countries-6, in-4)
det(countries-6, the-5)
nmod:in(made-15', countries-6)
amod(countries-6, occupied-7)
case(army-11, by-8)
det(army-11, the-9)
amod(army-11, German-10)
nmod:by(occupied-7, army-11)
nsubjpass(made-15, Jews-13)
nsubjpass(made-15', Jews-13)
nsubj(wear-17, Jews-13)
auxpass(made-15, were-14)
root(ROOT-0, made-15)
conj:and(made-15, made-15')
mark(wear-17, to-16)
xcomp(made-15, wear-17)
det(star-20, a-18)
amod(star-20, yellow-19)
dobj(wear-17, star-20)
mark(identified-27, so-21)
mwe(so-21, that-22)
nsubjpass(identified-27, they-23)
aux(identified-27, could-24)
auxpass(identified-27, be-25)
advmod(identified-27, easily-26)
advcl(wear-17, identified-27)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were)
      (ADVP (RB also))
      (VP
        (VP (VBN rounded)
          (PRT (RP up)))
        (CC and)
        (VP (VBN sent)
          (PP (TO to)
            (NP
              (NP (NN concentration) (NNS camps))
              (, ,)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP they))
                  (VP (VBD were)
                    (VP (VBN shot))))))))
        (, ,)
        (VP (VBN gassed))
        (, ,)
        (CC or)
        (VP (VBN left)
          (S
            (VP (TO to)
              (VP (VB die)
                (PP (IN of)
                  (NP (NN starvation)
                    (CC or)
                    (NN disease)))))))))
    (. .)))

nsubjpass(rounded-4, They-1)
nsubjpass(sent-7, They-1)
nsubjpass(left-20, They-1)
nsubj(die-22, They-1)
auxpass(rounded-4, were-2)
advmod(rounded-4, also-3)
root(ROOT-0, rounded-4)
compound:prt(rounded-4, up-5)
cc(rounded-4, and-6)
conj:and(rounded-4, sent-7)
case(camps-10, to-8)
compound(camps-10, concentration-9)
nmod:to(sent-7, camps-10)
advmod(shot-15, where-12)
nsubjpass(shot-15, they-13)
auxpass(shot-15, were-14)
acl:relcl(camps-10, shot-15)
dep(rounded-4, gassed-17)
cc(rounded-4, or-19)
conj:and(rounded-4, left-20)
mark(die-22, to-21)
xcomp(left-20, die-22)
case(starvation-24, of-23)
nmod:of(die-22, starvation-24)
cc(starvation-24, or-25)
nmod:of(die-22, disease-26)
conj:or(starvation-24, disease-26)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ only) (NN chance))
        (PP (IN of)
          (NP (NN survival))))
      (VP (VBD was)
        (S
          (VP (TO to)
            (VP (VB hide))))))
    (, ,) (IN so)
    (S
      (NP
        (NP (NNP Anne) (NNP Frank))
        (CC and)
        (NP (PRP$ her) (NN family)))
      (VP (VBD lived)
        (PP (IN in)
          (S
            (VP (VBG hiding)
              (PP (IN for)
                (NP
                  (NP (CD two) (NNS years))
                  (PP (IN in)
                    (NP
                      (NP (DT a) (NN place))
                      (VP (VBN called)
                        (NP (DT the) (JJ Secret) (NN Annex))))))))))))
    (. .)))

det(chance-3, The-1)
amod(chance-3, only-2)
nsubj(was-6, chance-3)
nsubj(hide-8, chance-3)
case(survival-5, of-4)
nmod:of(chance-3, survival-5)
root(ROOT-0, was-6)
mark(hide-8, to-7)
xcomp(was-6, hide-8)
dep(was-6, so-10)
compound(Frank-12, Anne-11)
nsubj(lived-16, Frank-12)
cc(Frank-12, and-13)
nmod:poss(family-15, her-14)
conj:and(Frank-12, family-15)
nsubj(lived-16, family-15)
parataxis(was-6, lived-16)
mark(hiding-18, in-17)
advcl(lived-16, hiding-18)
case(years-21, for-19)
nummod(years-21, two-20)
nmod:for(hiding-18, years-21)
case(place-24, in-22)
det(place-24, a-23)
nmod:in(years-21, place-24)
acl(place-24, called-25)
det(Annex-28, the-26)
amod(Annex-28, Secret-27)
dobj(called-25, Annex-28)

(ROOT
  (S
    (PP (IN During)
      (NP (DT that) (NN period)))
    (, ,)
    (NP (PRP she))
    (VP (VBD kept)
      (NP (DT a) (NN diary)))
    (. .)))

case(period-3, During-1)
det(period-3, that-2)
nmod:during(kept-6, period-3)
nsubj(kept-6, she-5)
root(ROOT-0, kept-6)
det(diary-8, a-7)
dobj(kept-6, diary-8)

(ROOT
  (NP
    (NP
      (NP (NNP Wednesday) (, ,) (NNP January) (CD 13) (, ,) (CD 1943))
      (NP (NNP Dearest) (NNP Kitty)))
    (, ,)
    (NP
      (NP (DT This) (NN morning))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD was)
            (VP
              (ADVP (RB constantly))
              (VBN interrupted))))))
    (. .)))

compound(January-3, Wednesday-1)
root(ROOT-0, January-3)
nummod(January-3, 13-4)
nummod(January-3, 1943-6)
compound(Kitty-8, Dearest-7)
dep(January-3, Kitty-8)
det(morning-11, This-10)
appos(January-3, morning-11)
nsubjpass(interrupted-15, I-12)
auxpass(interrupted-15, was-13)
advmod(interrupted-15, constantly-14)
acl:relcl(morning-11, interrupted-15)

(ROOT
  (S
    (PP (IN As)
      (NP (DT a) (NN result)))
    (, ,)
    (NP (PRP I))
    (VP (VBP havent)
      (VP (VBN been)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB finish)
                (NP
                  (NP (DT a) (JJ single) (NN thing) (NN Ive))
                  (VP (VBN begun)))))))))
    (. .)))

case(result-3, As-1)
det(result-3, a-2)
nmod:as(havent-6, result-3)
nsubj(havent-6, I-5)
root(ROOT-0, havent-6)
cop(able-8, been-7)
dep(havent-6, able-8)
mark(finish-10, to-9)
xcomp(able-8, finish-10)
det(Ive-14, a-11)
amod(Ive-14, single-12)
compound(Ive-14, thing-13)
dobj(finish-10, Ive-14)
acl(Ive-14, begun-15)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP have)
      (NP (DT a) (JJ new) (NN recreation))
      (, ,)
      (ADVP (RB namely))
      (, ,)
      (S
        (VP (VBG filling)
          (NP (NNS packages))
          (PP (IN with)
            (NP (JJ powdered) (NN gravy))))))
    (. .)))

nsubj(have-2, We-1)
root(ROOT-0, have-2)
det(recreation-5, a-3)
amod(recreation-5, new-4)
dobj(have-2, recreation-5)
advmod(have-2, namely-7)
advcl(have-2, filling-9)
dobj(filling-9, packages-10)
case(gravy-13, with-11)
amod(gravy-13, powdered-12)
nmod:with(filling-9, gravy-13)

(ROOT
  (S
    (NP (DT The) (NN gravy))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (NNP Gies)
            (CC &)
            (NNP Co.) (NNP s) (NNS products)))))
    (. .)))

det(gravy-2, The-1)
nsubj(one-4, gravy-2)
cop(one-4, is-3)
root(ROOT-0, one-4)
case(products-10, of-5)
compound(products-10, Gies-6)
cc(Gies-6, &-7)
conj:&(Gies-6, Co.-8)
compound(products-10, Co.-8)
compound(products-10, s-9)
nmod:of(one-4, products-10)

(ROOT
  (S
    (NP (NNP Mr.) (NNP Kugler))
    (VP (VBP hasnt)
      (VP (VBN been)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB find)
                (S
                  (NP (NN anyone) (RB else))
                  (VP (TO to)
                    (VP (VB do)
                      (NP (DT the) (NN job)))))))))))
    (. .)))

compound(Kugler-2, Mr.-1)
nsubj(hasnt-3, Kugler-2)
root(ROOT-0, hasnt-3)
cop(able-5, been-4)
dep(hasnt-3, able-5)
mark(find-7, to-6)
xcomp(able-5, find-7)
dobj(find-7, anyone-8)
nsubj(do-11, anyone-8)
advmod(anyone-8, else-9)
mark(do-11, to-10)
xcomp(find-7, do-11)
det(job-13, the-12)
dobj(do-11, job-13)

(ROOT
  (S
    (ADVP (IN Besides))
    (, ,)
    (NP (PRP$ our) (NNS wages))
    (VP (VBP are)
      (ADJP (JJR lower)))
    (. .)))

advmod(lower-6, Besides-1)
nmod:poss(wages-4, our-3)
nsubj(lower-6, wages-4)
cop(lower-6, are-5)
root(ROOT-0, lower-6)

(ROOT
  (NP
    (NP (PRP$ Its)
      (NP
        (NP (DT the) (NN kind))
        (PP (IN of)
          (NP (NN work)))))
    (SBAR
      (S
        (NP (PRP they))
        (VP (VBP do)
          (PP (IN in)
            (NP (NNS prisons))))))
    (. .)))

nmod:poss(kind-3, Its-1)
det(kind-3, the-2)
root(ROOT-0, kind-3)
case(work-5, of-4)
nmod:of(kind-3, work-5)
nsubj(do-7, they-6)
acl:relcl(kind-3, do-7)
case(prisons-9, in-8)
nmod:in(do-7, prisons-9)

(ROOT
  (S
    (NP (PRP$ Its) (NN incredibly))
    (VP
      (VP (VBZ boring))
      (CC and)
      (VP (VBZ makes)
        (S
          (NP (PRP us))
          (ADJP (JJ dizzy)
            (CC and)
            (JJ giggly)))))
    (. .)))

nmod:poss(incredibly-2, Its-1)
nsubj(boring-3, incredibly-2)
nsubj(makes-5, incredibly-2)
root(ROOT-0, boring-3)
cc(boring-3, and-4)
conj:and(boring-3, makes-5)
nsubj(dizzy-7, us-6)
nsubj(giggly-9, us-6)
xcomp(makes-5, dizzy-7)
cc(dizzy-7, and-8)
xcomp(makes-5, giggly-9)
conj:and(dizzy-7, giggly-9)

(ROOT
  (S
    (NP (JJ Terrible) (NNS things))
    (VP (VBP are)
      (VP (VBG happening)
        (ADVP (RB outside))))
    (. .)))

amod(things-2, Terrible-1)
nsubj(happening-4, things-2)
aux(happening-4, are-3)
root(ROOT-0, happening-4)
advmod(happening-4, outside-5)

(ROOT
  (S
    (PP (IN At)
      (NP
        (NP (DT any) (NN time))
        (PP (IN of)
          (NP (NN night)
            (CC and)
            (NN day)))))
    (, ,)
    (NP (JJ poor) (, ,) (JJ helpless) (NNS people))
    (VP (VBP are)
      (VP (VBG being)
        (VP (VBN dragged)
          (PRT (RP out))
          (PP (IN of)
            (NP (PRP$ their) (NNS homes))))))
    (. .)))

case(time-3, At-1)
det(time-3, any-2)
nmod:at(dragged-15, time-3)
case(night-5, of-4)
nmod:of(time-3, night-5)
cc(night-5, and-6)
nmod:of(time-3, day-7)
conj:and(night-5, day-7)
amod(people-12, poor-9)
amod(people-12, helpless-11)
nsubjpass(dragged-15, people-12)
aux(dragged-15, are-13)
auxpass(dragged-15, being-14)
root(ROOT-0, dragged-15)
compound:prt(dragged-15, out-16)
case(homes-19, of-17)
nmod:poss(homes-19, their-18)
nmod:of(dragged-15, homes-19)

(ROOT
  (S
    (NP (NNP Theyre))
    (VP (VBD allowed)
      (S
        (VP (TO to)
          (VP (VB take)
            (NP (RB only)
              (NP (DT a) (NN rucksack))
              (CC and)
              (NP
                (NP (DT a) (JJ little) (NN cash))
                (PP (IN with)
                  (NP (PRP them))))
              (, ,)
              (CC and)
              (ADVP (RB even) (RB then))
              (, ,)
              (NP
                (NP (NN theyre))
                (VP (VBN robbed)
                  (PP (IN of)
                    (NP (PRP$ their) (NNS possessions)))
                  (PP (IN on)
                    (NP (DT the) (NN way))))))))))
    (. .)))

nsubj(allowed-2, Theyre-1)
nsubj(take-4, Theyre-1)
root(ROOT-0, allowed-2)
mark(take-4, to-3)
xcomp(allowed-2, take-4)
advmod(rucksack-7, only-5)
det(rucksack-7, a-6)
dobj(take-4, rucksack-7)
cc(rucksack-7, and-8)
det(cash-11, a-9)
amod(cash-11, little-10)
dobj(take-4, cash-11)
conj:and(rucksack-7, cash-11)
case(them-13, with-12)
nmod:with(cash-11, them-13)
cc(rucksack-7, and-15)
advmod(then-17, even-16)
advmod(rucksack-7, then-17)
dobj(take-4, theyre-19)
conj:and(rucksack-7, theyre-19)
acl(theyre-19, robbed-20)
case(possessions-23, of-21)
nmod:poss(possessions-23, their-22)
nmod:of(robbed-20, possessions-23)
case(way-26, on-24)
det(way-26, the-25)
nmod:on(robbed-20, way-26)

(ROOT
  (S
    (S
      (NP (NNS Families))
      (VP (VBP are)
        (VP (VBN torn)
          (ADVP (RB apart)))))
    (: ;)
    (S
      (NP
        (NP (NNS men))
        (, ,)
        (NP (NNS women))
        (, ,)
        (CC and)
        (NP (NNS children)))
      (VP (VBP are)
        (ADJP (JJ separated))))
    (. .)))

nsubjpass(torn-3, Families-1)
auxpass(torn-3, are-2)
root(ROOT-0, torn-3)
advmod(torn-3, apart-4)
nsubj(separated-13, men-6)
conj:and(men-6, women-8)
nsubj(separated-13, women-8)
cc(men-6, and-10)
conj:and(men-6, children-11)
nsubj(separated-13, children-11)
cop(separated-13, are-12)
parataxis(torn-3, separated-13)

(ROOT
  (S
    (NP (NNP Children))
    (VP (VBP come)
      (NP (NN home))
      (PP (IN from)
        (NP (NN school)))
      (S
        (VP (TO to)
          (VP (VB find)
            (SBAR (IN that)
              (S
                (NP (PRP$ their) (NNS parents))
                (VP (VBP have)
                  (VP (VBN disappeared)))))))))
    (. .)))

nsubj(come-2, Children-1)
root(ROOT-0, come-2)
dobj(come-2, home-3)
case(school-5, from-4)
nmod:from(come-2, school-5)
mark(find-7, to-6)
advcl(come-2, find-7)
mark(disappeared-12, that-8)
nmod:poss(parents-10, their-9)
nsubj(disappeared-12, parents-10)
aux(disappeared-12, have-11)
ccomp(find-7, disappeared-12)

(ROOT
  (S
    (NP (NNP Women))
    (VP (VBP return)
      (PP (IN from)
        (NP (NN shopping)))
      (S
        (VP (TO to)
          (VP (VB find)
            (NP
              (NP
                (NP (PRP$ their) (NNS houses))
                (VP (VBN sealed)))
              (CC and)
              (NP
                (NP (PRP$ their) (NNS families))
                (VP (VBN gone))))))))
    (. .)))

nsubj(return-2, Women-1)
nsubj(find-6, Women-1)
root(ROOT-0, return-2)
case(shopping-4, from-3)
nmod:from(return-2, shopping-4)
mark(find-6, to-5)
xcomp(return-2, find-6)
nmod:poss(houses-8, their-7)
dobj(find-6, houses-8)
acl(houses-8, sealed-9)
cc(houses-8, and-10)
nmod:poss(families-12, their-11)
dobj(find-6, families-12)
conj:and(houses-8, families-12)
acl(families-12, gone-13)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS Christians))
      (PP (IN in)
        (NP (NNP Holland))))
    (VP (VBP are)
      (ADVP (RB also))
      (VP (VBG living)
        (PP (IN in)
          (NP (NN fear)))
        (SBAR (IN because)
          (S
            (NP (PRP$ their) (NNS sons))
            (VP (VBP are)
              (VP (VBG being)
                (VP (VBN sent)
                  (PP (TO to)
                    (NP (NNP Germany))))))))))
    (. .)))

det(Christians-2, The-1)
nsubj(living-7, Christians-2)
case(Holland-4, in-3)
nmod:in(Christians-2, Holland-4)
aux(living-7, are-5)
advmod(living-7, also-6)
root(ROOT-0, living-7)
case(fear-9, in-8)
nmod:in(living-7, fear-9)
mark(sent-15, because-10)
nmod:poss(sons-12, their-11)
nsubjpass(sent-15, sons-12)
aux(sent-15, are-13)
auxpass(sent-15, being-14)
advcl(living-7, sent-15)
case(Germany-17, to-16)
nmod:to(sent-15, Germany-17)

(ROOT
  (S
    (NP (NN Everyone))
    (VP (VBZ is)
      (ADJP (VBN scared)))
    (. .)))

nsubjpass(scared-3, Everyone-1)
auxpass(scared-3, is-2)
root(ROOT-0, scared-3)

(ROOT
  (S
    (NP (DT Every) (NN night))
    (, ,)
    (NP
      (NP (NNS hundreds))
      (PP (IN of)
        (NP (NNS planes))))
    (VP (VBP pass)
      (PP (IN over)
        (NP (NNP Holland)))
      (PP (IN on)
        (NP (PRP$ their) (NN way)))
      (PP (TO to)
        (NP (JJ German) (NNS cities)))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB sow)
            (NP (PRP$ their) (NNS bombs))
            (PP (IN on)
              (NP (JJ German) (NN soil)))))))
    (. .)))

det(night-2, Every-1)
nmod:tmod(pass-7, night-2)
nsubj(pass-7, hundreds-4)
nsubj(sow-18, hundreds-4)
case(planes-6, of-5)
nmod:of(hundreds-4, planes-6)
root(ROOT-0, pass-7)
case(Holland-9, over-8)
nmod:over(pass-7, Holland-9)
case(way-12, on-10)
nmod:poss(way-12, their-11)
nmod:on(pass-7, way-12)
case(cities-15, to-13)
amod(cities-15, German-14)
nmod:to(pass-7, cities-15)
mark(sow-18, to-17)
xcomp(pass-7, sow-18)
nmod:poss(bombs-20, their-19)
dobj(sow-18, bombs-20)
case(soil-23, on-21)
amod(soil-23, German-22)
nmod:on(sow-18, soil-23)

(ROOT
  (S
    (NP (DT Every) (NN hour))
    (, ,)
    (ADVP (RB hundredsXor))
    (NP (RB maybe) (RB even) (JJ thousandsXof) (NNS people))
    (VP (VBP are)
      (VP (VBG being)
        (VP (VBN killed)
          (PP (IN in)
            (NP (NNP Russia)
              (CC and)
              (NNP Africa))))))
    (. .)))

det(hour-2, Every-1)
nsubjpass(killed-11, hour-2)
advmod(people-8, hundredsXor-4)
advmod(people-8, maybe-5)
advmod(people-8, even-6)
amod(people-8, thousandsXof-7)
nsubjpass(killed-11, people-8)
aux(killed-11, are-9)
auxpass(killed-11, being-10)
root(ROOT-0, killed-11)
case(Russia-13, in-12)
nmod:in(killed-11, Russia-13)
cc(Russia-13, and-14)
nmod:in(killed-11, Africa-15)
conj:and(Russia-13, Africa-15)

(ROOT
  (S
    (S
      (NP (DT No) (NN one))
      (VP (MD can)
        (VP (VB keep)
          (PRT (RP out))
          (PP (IN of)
            (NP (DT the) (NN conflict))))))
    (: ;)
    (S
      (NP (DT the) (JJ entire) (NN world))
      (VP (VBZ is)
        (PP (IN at)
          (NP (NN war)))))
    (. .)))

neg(one-2, No-1)
nsubj(keep-4, one-2)
aux(keep-4, can-3)
root(ROOT-0, keep-4)
compound:prt(keep-4, out-5)
case(conflict-8, of-6)
det(conflict-8, the-7)
nmod:of(keep-4, conflict-8)
det(world-12, the-10)
amod(world-12, entire-11)
nsubj(war-15, world-12)
cop(war-15, is-13)
case(war-15, at-14)
parataxis(keep-4, war-15)

(ROOT
  (S
    (SBAR (RB Even) (IN though)
      (S
        (NP (DT the) (NNS Allies))
        (VP (VBP are)
          (VP (VBG doing)
            (ADVP (RBR better))))))
    (, ,)
    (NP (DT the) (NN end))
    (VP (VBZ is)
      (ADVP (RB nowhere))
      (PP (IN in)
        (NP (NN sight))))
    (. .)))

advmod(doing-6, Even-1)
mark(doing-6, though-2)
det(Allies-4, the-3)
nsubj(doing-6, Allies-4)
aux(doing-6, are-5)
advcl(sight-14, doing-6)
advmod(doing-6, better-7)
det(end-10, the-9)
nsubj(sight-14, end-10)
cop(sight-14, is-11)
advmod(sight-14, nowhere-12)
case(sight-14, in-13)
root(ROOT-0, sight-14)

(ROOT
  (S
    (PP (IN As)
      (PP (IN for)
        (NP (PRP us))))
    (, ,)
    (VP (VBD were)
      (ADJP (RB quite) (JJ fortunateXluckier))
      (PP (IN than)
        (NP
          (NP (NNS millions))
          (PP (IN of)
            (NP (NNS people))))))
    (. .)))

case(us-3, As-1)
mwe(As-1, for-2)
nmod:as_for(fortunateXluckier-7, us-3)
cop(fortunateXluckier-7, were-5)
advmod(fortunateXluckier-7, quite-6)
root(ROOT-0, fortunateXluckier-7)
case(millions-9, than-8)
nmod:than(fortunateXluckier-7, millions-9)
case(people-11, of-10)
nmod:of(millions-9, people-11)

(ROOT
  (S
    (S
      (VP (VBG Its)
        (ADJP (JJ quiet)
          (CC and)
          (JJ safe))
        (ADVP (RB here))))
    (, ,)
    (CC and)
    (S
      (VP (VBD were)
        (VP (VBG using)
          (NP (PRP$ our) (NN money)
            (S
              (VP (TO to)
                (VP (VB buy)
                  (NP (NN food)))))))))
    (. .)))

root(ROOT-0, Its-1)
xcomp(Its-1, quiet-2)
cc(quiet-2, and-3)
xcomp(Its-1, safe-4)
conj:and(quiet-2, safe-4)
advmod(Its-1, here-5)
cc(Its-1, and-7)
aux(using-9, were-8)
conj:and(Its-1, using-9)
nmod:poss(money-11, our-10)
dobj(using-9, money-11)
mark(buy-13, to-12)
acl(money-11, buy-13)
dobj(buy-13, food-14)

(ROOT
  (S
    (VP (VBD Were)
      (ADJP (RB so) (JJ selfish))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP
            (VP (VB talk)
              (PRT (RP about))
              (PP (IN after)
                (NP (DT the) (NN war))))
            (CC and)
            (VP (VB look)
              (ADVP (RB forward))
              (PP (TO to)
                (NP
                  (NP (JJ new) (NNS clothes)
                    (CC and)
                    (NNS shoes))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (ADVP (RB actually))
                      (NP (PRP we))
                      (VP (MD should)
                        (VP (VB lay)
                          (PRT (RP aside))
                          (NP (DT every) (NN penny)
                            (S
                              (VP (TO to)
                                (VP (VB help)
                                  (NP (NNS others))
                                  (SBAR
                                    (WHADVP (WRB when))
                                    (S
                                      (NP (DT the) (NN war))
                                      (VP (VBZ is)
                                        (ADJP (RP over))))))))))))))))
            (CC and)
            (VP (VB save)
              (SBAR
                (WHNP (WDT whatever))
                (S
                  (NP (PRP we))
                  (VP (MD can)))))))))
    (. .)))

cop(selfish-3, Were-1)
advmod(selfish-3, so-2)
root(ROOT-0, selfish-3)
mark(talk-6, that-4)
nsubj(talk-6, we-5)
nsubj(look-12, we-5)
nsubj(save-37, we-5)
ccomp(selfish-3, talk-6)
compound:prt(talk-6, about-7)
case(war-10, after-8)
det(war-10, the-9)
nmod:after(talk-6, war-10)
cc(talk-6, and-11)
ccomp(selfish-3, look-12)
conj:and(talk-6, look-12)
advmod(look-12, forward-13)
case(clothes-16, to-14)
amod(clothes-16, new-15)
nmod:to(look-12, clothes-16)
cc(clothes-16, and-17)
nmod:to(look-12, shoes-18)
conj:and(clothes-16, shoes-18)
advmod(lay-24, when-20)
advmod(lay-24, actually-21)
nsubj(lay-24, we-22)
aux(lay-24, should-23)
acl:relcl(clothes-16, lay-24)
compound:prt(lay-24, aside-25)
det(penny-27, every-26)
dobj(lay-24, penny-27)
mark(help-29, to-28)
acl(penny-27, help-29)
dobj(help-29, others-30)
advmod(over-35, when-31)
det(war-33, the-32)
nsubj(over-35, war-33)
cop(over-35, is-34)
advcl(help-29, over-35)
cc(talk-6, and-36)
ccomp(selfish-3, save-37)
conj:and(talk-6, save-37)
dobj(can-40, whatever-38)
nsubj(can-40, we-39)
ccomp(save-37, can-40)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS children))
      (PP (IN in)
        (NP (DT this) (NN neighborhood))))
    (VP (VBP run)
      (PRT (RP around))
      (PP (IN in)
        (NP
          (NP (JJ thin) (NNS shirts))
          (CC and)
          (NP (JJ wooden) (NNS clogs)))))
    (. .)))

det(children-2, The-1)
nsubj(run-6, children-2)
case(neighborhood-5, in-3)
det(neighborhood-5, this-4)
nmod:in(children-2, neighborhood-5)
root(ROOT-0, run-6)
compound:prt(run-6, around-7)
case(shirts-10, in-8)
amod(shirts-10, thin-9)
nmod:in(run-6, shirts-10)
cc(shirts-10, and-11)
amod(clogs-13, wooden-12)
nmod:in(run-6, clogs-13)
conj:and(shirts-10, clogs-13)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP have)
      (NP
        (NP (DT no) (NNS coats))
        (, ,)
        (NP (DT no) (NNS socks))
        (, ,)
        (NP (DT no) (NNS caps))
        (, ,)
        (CC and)
        (NP (DT no) (NN one)))
      (S
        (VP (TO to)
          (VP (VB help)
            (NP (PRP them))))))
    (. .)))

nsubj(have-2, They-1)
root(ROOT-0, have-2)
neg(coats-4, no-3)
dobj(have-2, coats-4)
neg(socks-7, no-6)
dobj(have-2, socks-7)
conj:and(coats-4, socks-7)
neg(caps-10, no-9)
dobj(have-2, caps-10)
conj:and(coats-4, caps-10)
cc(coats-4, and-12)
neg(one-14, no-13)
dobj(have-2, one-14)
conj:and(coats-4, one-14)
mark(help-16, to-15)
advcl(have-2, help-16)
dobj(help-16, them-17)

(ROOT
  (S
    (S
      (VP (VBG Gnawing)
        (PP (IN on)
          (NP (DT a) (NN carrot)
            (S
              (VP (TO to)
                (VP (VB ease)
                  (NP (PRP$ their) (NN hunger) (NN pain)))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP walk)
      (PP (IN from)
        (NP (PRP$ their) (JJ cold) (NNS houses)))
      (PP (IN through)
        (NP
          (NP (JJ cold) (NNS streets))
          (TO to)
          (NP (DT an) (RB even) (JJR colder) (NN classroom)))))
    (. .)))

advcl(walk-12, Gnawing-1)
case(carrot-4, on-2)
det(carrot-4, a-3)
nmod:on(Gnawing-1, carrot-4)
mark(ease-6, to-5)
acl(carrot-4, ease-6)
nmod:poss(pain-9, their-7)
compound(pain-9, hunger-8)
dobj(ease-6, pain-9)
nsubj(walk-12, they-11)
root(ROOT-0, walk-12)
case(houses-16, from-13)
nmod:poss(houses-16, their-14)
amod(houses-16, cold-15)
nmod:from(walk-12, houses-16)
case(streets-19, through-17)
amod(streets-19, cold-18)
nmod:through(walk-12, streets-19)
dep(streets-19, to-20)
det(classroom-24, an-21)
advmod(classroom-24, even-22)
amod(classroom-24, colder-23)
dep(streets-19, classroom-24)

(ROOT
  (S
    (NP (NNS Things))
    (VP (VBP have)
      (VP (VBN gotten)
        (ADJP (RB so) (JJ bad)
          (PP (IN in)
            (NP (NNP Holland))))
        (SBAR (IN that)
          (S
            (NP
              (NP (NNS crowds))
              (PP (IN of)
                (NP (NNS children))))
            (VP (VB stop)
              (NP
                (NP (NNS passers-by))
                (PP (IN in)
                  (NP (DT the) (NNS streets))))
              (S
                (VP (TO to)
                  (VP (VB beg)
                    (PP (IN for)
                      (NP
                        (NP (DT a) (NN piece))
                        (PP (IN of)
                          (NP (NN bread)))))))))))))
    (. .)))

nsubj(gotten-3, Things-1)
aux(gotten-3, have-2)
root(ROOT-0, gotten-3)
advmod(bad-5, so-4)
xcomp(gotten-3, bad-5)
case(Holland-7, in-6)
nmod:in(bad-5, Holland-7)
mark(stop-12, that-8)
nsubj(stop-12, crowds-9)
case(children-11, of-10)
nmod:of(crowds-9, children-11)
ccomp(gotten-3, stop-12)
dobj(stop-12, passers-by-13)
case(streets-16, in-14)
det(streets-16, the-15)
nmod:in(passers-by-13, streets-16)
mark(beg-18, to-17)
advcl(stop-12, beg-18)
case(piece-21, for-19)
det(piece-21, a-20)
nmod:for(beg-18, piece-21)
case(bread-23, of-22)
nmod:of(piece-21, bread-23)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP (VB spend)
          (NP
            (NP (NNS hours))
            (VP (VBG telling)
              (NP (PRP you))
              (PP (IN about)
                (NP
                  (NP (DT the) (NN suffering))
                  (SBAR
                    (S
                      (NP (DT the) (NN war))
                      (VP (VBZ has)
                        (VP (VBN caused))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (NN Id))
      (ADVP (RB only))
      (VP (VB make)
        (S
          (NP (PRP myself))
          (ADJP (RBR more) (JJ miserable)))))
    (. .)))

nsubj(spend-3, I-1)
aux(spend-3, could-2)
root(ROOT-0, spend-3)
dobj(spend-3, hours-4)
acl(hours-4, telling-5)
dobj(telling-5, you-6)
case(suffering-9, about-7)
det(suffering-9, the-8)
nmod:about(telling-5, suffering-9)
det(war-11, the-10)
nsubj(caused-13, war-11)
aux(caused-13, has-12)
acl:relcl(suffering-9, caused-13)
cc(spend-3, but-15)
nsubj(make-18, Id-16)
advmod(make-18, only-17)
conj:but(spend-3, make-18)
nsubj(miserable-21, myself-19)
advmod(miserable-21, more-20)
xcomp(make-18, miserable-21)

(ROOT
  (S
    (NP
      (NP (DT All))
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD can)
            (VP (VB do))))))
    (VP (VBZ is)
      (S
        (VP (VB wait)
          (PRN (, ,)
            (SBAR (IN as)
              (FRAG
                (ADJP (RB calmly) (RB as) (JJ possible))))
            (, ,))
          (SBAR (IN for)
            (S
              (NP (PRP it))
              (VP (TO to)
                (VP (VB end))))))))
    (. .)))

nsubj(is-5, All-1)
nsubj(do-4, we-2)
aux(do-4, can-3)
acl:relcl(All-1, do-4)
root(ROOT-0, is-5)
ccomp(is-5, wait-6)
mark(possible-11, as-8)
advmod(possible-11, calmly-9)
advmod(possible-11, as-10)
parataxis(wait-6, possible-11)
mark(end-16, for-13)
nsubj(end-16, it-14)
mark(end-16, to-15)
advcl(wait-6, end-16)

(ROOT
  (S
    (S
      (NP (NNPS Jews)
        (CC and)
        (NNPS Christians))
      (ADVP (RB alike))
      (VP (VBP are)
        (VP (VBG waiting))))
    (: ;)
    (S
      (S
        (NP (DT the) (JJ whole) (NN world))
        (VP (VBZ is)
          (VP (VBG waiting))))
      (, ,)
      (CC and)
      (S
        (NP (DT many))
        (VP (VBP are)
          (VP (VBG waiting)
            (PP (IN for)
              (NP (NN death)))))))
    (. .)))

nsubj(waiting-6, Jews-1)
cc(Jews-1, and-2)
conj:and(Jews-1, Christians-3)
nsubj(waiting-6, Christians-3)
advmod(waiting-6, alike-4)
aux(waiting-6, are-5)
root(ROOT-0, waiting-6)
det(world-10, the-8)
amod(world-10, whole-9)
nsubj(waiting-12, world-10)
aux(waiting-12, is-11)
parataxis(waiting-6, waiting-12)
cc(waiting-12, and-14)
nsubj(waiting-17, many-15)
aux(waiting-17, are-16)
parataxis(waiting-6, waiting-17)
conj:and(waiting-12, waiting-17)
case(death-19, for-18)
nmod:for(waiting-17, death-19)

(ROOT
  (S
    (NP (NNP Anne) (NNP Franks) (NN story))
    (VP (VBD did) (RB not)
      (VP (VB have)
        (NP (DT a) (JJ happy) (NN ending))))
    (. .)))

compound(story-3, Anne-1)
compound(story-3, Franks-2)
nsubj(have-6, story-3)
aux(have-6, did-4)
neg(have-6, not-5)
root(ROOT-0, have-6)
det(ending-9, a-7)
amod(ending-9, happy-8)
dobj(have-6, ending-9)

(ROOT
  (S
    (PP (IN After)
      (NP
        (NP (CD two) (NNS years))
        (PP (IN of)
          (NP (NN hiding)))))
    (, ,)
    (NP
      (NP (NNP Anne))
      (CC and)
      (NP (PRP$ her) (NN family)))
    (VP (VBD were)
      (VP (VBN betrayed)
        (PP (TO to)
          (NP (DT the) (JJ Nazi) (NNS authorities)))))
    (. .)))

case(years-3, After-1)
nummod(years-3, two-2)
nmod:after(betrayed-12, years-3)
case(hiding-5, of-4)
nmod:of(years-3, hiding-5)
nsubjpass(betrayed-12, Anne-7)
cc(Anne-7, and-8)
nmod:poss(family-10, her-9)
conj:and(Anne-7, family-10)
nsubjpass(betrayed-12, family-10)
auxpass(betrayed-12, were-11)
root(ROOT-0, betrayed-12)
case(authorities-16, to-13)
det(authorities-16, the-14)
amod(authorities-16, Nazi-15)
nmod:to(betrayed-12, authorities-16)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were) (RB all)
      (VP
        (VP (VBN captured)
          (PP (IN by)
            (NP (DT the) (NNP Gestapo))))
        (CC and)
        (VP
          (ADVP (RB then))
          (VBN sent)
          (PP (TO to)
            (NP (JJ different) (NN concentration) (NNS camps))))))
    (. .)))

nsubjpass(captured-4, They-1)
nsubjpass(sent-10, They-1)
auxpass(captured-4, were-2)
advmod(captured-4, all-3)
root(ROOT-0, captured-4)
case(Gestapo-7, by-5)
det(Gestapo-7, the-6)
nmod:by(captured-4, Gestapo-7)
cc(captured-4, and-8)
advmod(sent-10, then-9)
conj:and(captured-4, sent-10)
case(camps-14, to-11)
amod(camps-14, different-12)
compound(camps-14, concentration-13)
nmod:to(sent-10, camps-14)

(ROOT
  (S
    (NP
      (NP (NNP Otto) (NNP Frank))
      (, ,)
      (NP (NNP Annes) (NN father))
      (, ,))
    (VP (VBD was)
      (NP
        (NP (DT the) (JJ sole) (NN survivor))
        (PP (IN of)
          (NP
            (NP (DT the) (NN Holocaust))
            (PP (IN in)
              (NP (DT the) (NNP Frank) (NN family)))))))
    (. .)))

compound(Frank-2, Otto-1)
nsubj(survivor-10, Frank-2)
compound(father-5, Annes-4)
appos(Frank-2, father-5)
cop(survivor-10, was-7)
det(survivor-10, the-8)
amod(survivor-10, sole-9)
root(ROOT-0, survivor-10)
case(Holocaust-13, of-11)
det(Holocaust-13, the-12)
nmod:of(survivor-10, Holocaust-13)
case(family-17, in-14)
det(family-17, the-15)
compound(family-17, Frank-16)
nmod:in(Holocaust-13, family-17)

(ROOT
  (S
    (ADVP (RB Fortunately))
    (, ,)
    (NP (NNP Annes) (NNP diary))
    (VP (VBD had)
      (VP (VBN been)
        (VP (VBN kept)
          (ADJP (JJ safe))
          (PP (IN during)
            (NP (DT the) (NN war))))))
    (. .)))

advmod(kept-7, Fortunately-1)
compound(diary-4, Annes-3)
nsubjpass(kept-7, diary-4)
aux(kept-7, had-5)
auxpass(kept-7, been-6)
root(ROOT-0, kept-7)
xcomp(kept-7, safe-8)
case(war-11, during-9)
det(war-11, the-10)
nmod:during(kept-7, war-11)

(ROOT
  (S
    (SBAR (IN After)
      (S
        (NP (NNP Otto) (NNP Frank))
        (VP (VBP read)
          (NP (PRP$ his) (NNS daughters) (NN diary)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD decided)
      (S
        (VP (TO to)
          (VP (VB have)
            (S
              (NP (PRP it))
              (VP (VBN published)
                (SBAR (RB so) (IN that)
                  (S
                    (NP (JJ other) (NNS people))
                    (VP (MD could)
                      (VP (VB read)
                        (PP
                          (CONJP (RB not) (JJ only))
                          (PP (IN about)
                            (NP
                              (NP (DT the) (NNS horrors))
                              (PP (IN of)
                                (NP (NN war)))))
                          (CC but)
                          (PP
                            (ADVP (RB also))
                            (IN about)
                            (NP
                              (NP (DT the) (NN love) (, ,) (NN family) (, ,)
                                (CC and)
                                (NN friendship))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBD had)
                                    (VP (VBN given)
                                      (NP (NNP Anne) (NN hope)))))))))))))))))))
    (. .)))

mark(read-4, After-1)
compound(Frank-3, Otto-2)
nsubj(read-4, Frank-3)
advcl(decided-10, read-4)
nmod:poss(diary-7, his-5)
compound(diary-7, daughters-6)
dobj(read-4, diary-7)
nsubj(decided-10, he-9)
nsubj(have-12, he-9)
root(ROOT-0, decided-10)
mark(have-12, to-11)
xcomp(decided-10, have-12)
nsubj(published-14, it-13)
ccomp(have-12, published-14)
mark(read-20, so-15)
mwe(so-15, that-16)
amod(people-18, other-17)
nsubj(read-20, people-18)
nsubj(read-20', people-18)
aux(read-20, could-19)
advcl(published-14, read-20)
advcl(published-14, read-20')
conj:and(read-20, read-20')
neg(only-22, not-21)
cc:preconj(horrors-25, only-22)
case(horrors-25, about-23)
det(horrors-25, the-24)
nmod:about(read-20, horrors-25)
case(war-27, of-26)
nmod:of(horrors-25, war-27)
cc(read-20, but-28)
advmod(love-32, also-29)
case(love-32, about-30)
det(love-32, the-31)
nmod:about(read-20', love-32)
nsubj(given-40, love-32)
nmod:about(read-20', family-34)
conj:and(love-32, family-34)
nsubj(given-40, family-34)
cc(love-32, and-36)
nmod:about(read-20', friendship-37)
conj:and(love-32, friendship-37)
nsubj(given-40, friendship-37)
ref(love-32, that-38)
aux(given-40, had-39)
acl:relcl(love-32, given-40)
compound(hope-42, Anne-41)
dobj(given-40, hope-42)

(ROOT
  (S
    (S
      (NP (NN Today))
      (, ,)
      (NP
        (NP (NNS millions))
        (PP (IN of)
          (NP (NNS people))))
      (VP (VBP have)
        (VP (VBN read)
          (NP (NNP Anne) (NNPS Franks) (NN diary)))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNP Secret) (NNP Annex))
      (VP (VBZ has)
        (VP (VBN become)
          (NP (DT a) (NN museum))
          (PP (IN in)
            (NP
              (NP (NN memory))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNS people))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBD suffered)
                        (NP
                          (NP
                            (ADJP (RB so) (JJ many))
                            (NNS hardships))
                          (CC and)
                          (NP
                            (NP (DT those))
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP (VBD died)
                                  (PP (IN in)
                                    (NP (DT the) (NNP Holocaust))))))))))))))))))
    (. .)))

nmod:tmod(read-7, Today-1)
nsubj(read-7, millions-3)
case(people-5, of-4)
nmod:of(millions-3, people-5)
aux(read-7, have-6)
root(ROOT-0, read-7)
compound(diary-10, Anne-8)
compound(diary-10, Franks-9)
dobj(read-7, diary-10)
cc(read-7, and-12)
det(Annex-15, the-13)
compound(Annex-15, Secret-14)
nsubj(become-17, Annex-15)
aux(become-17, has-16)
conj:and(read-7, become-17)
det(museum-19, a-18)
xcomp(become-17, museum-19)
case(memory-21, in-20)
nmod:in(become-17, memory-21)
case(people-24, of-22)
det(people-24, the-23)
nmod:of(memory-21, people-24)
nsubj(suffered-26, people-24)
ref(people-24, who-25)
acl:relcl(people-24, suffered-26)
advmod(many-28, so-27)
amod(hardships-29, many-28)
dobj(suffered-26, hardships-29)
cc(hardships-29, and-30)
dobj(suffered-26, those-31)
conj:and(hardships-29, those-31)
nsubj(died-33, those-31)
ref(those-31, who-32)
acl:relcl(those-31, died-33)
case(Holocaust-36, in-34)
det(Holocaust-36, the-35)
nmod:in(died-33, Holocaust-36)

(ROOT
  (S
    (VP (VBN XInterpreted)
      (PP (IN by)
        (NP (NNP Vanessa) (NNP York))))
    (. .)))

root(ROOT-0, XInterpreted-1)
case(York-4, by-2)
compound(York-4, Vanessa-3)
nmod:by(XInterpreted-1, York-4)

(ROOT
  (NP
    (NP
      (NP (JJ Diary) (NN part))
      (PP (IN from)
        (NP
          (NP (DT The) (NN Diary))
          (PP (IN of)
            (NP (DT a) (NNP Young) (NNP Girl))))))
    (: :)
    (NP
      (NP (DT The) (NNP Definitive) (NNP Edition))
      (PP (IN by)
        (NP (NNP Anne) (NNP Frank))))
    (. .)))

amod(part-2, Diary-1)
root(ROOT-0, part-2)
case(Diary-5, from-3)
det(Diary-5, The-4)
nmod:from(part-2, Diary-5)
case(Girl-9, of-6)
det(Girl-9, a-7)
compound(Girl-9, Young-8)
nmod:of(Diary-5, Girl-9)
det(Edition-13, The-11)
compound(Edition-13, Definitive-12)
dep(part-2, Edition-13)
case(Frank-16, by-14)
compound(Frank-16, Anne-15)
nmod:by(Edition-13, Frank-16)

