(ROOT
  (SQ (NNP Should)
    (NP (DT a) (NN Killer))
    (VP (VB Live))
    (. ?)))

dep(Live-4, Should-1)
det(Killer-3, a-2)
nsubj(Live-4, Killer-3)
root(ROOT-0, Live-4)

(ROOT
  (NP
    (NP (CD Two) (NNS Points))
    (PP (IN of)
      (NP (NNP View)))
    (. .)))

nummod(Points-2, Two-1)
root(ROOT-0, Points-2)
case(View-4, of-3)
nmod:of(Points-2, View-4)

(ROOT
  (S
    (NP
      (NP (NNP Life))
      (PP (IN in)
        (NP (NNP Prison))))
    (VP (VBZ Is)
      (ADVP (RB Still))
      (NP
        (NP (NNP Life))
        (: :)
        (SBARQ
          (WHADVP (WRB Why))
          (SQ (MD Should)
            (NP (DT a) (NN Killer))
            (VP (VB Live)))
          (. ?))))))

nsubj(Life-6, Life-1)
case(Prison-3, in-2)
nmod:in(Life-1, Prison-3)
cop(Life-6, Is-4)
advmod(Life-6, Still-5)
root(ROOT-0, Life-6)
advmod(Live-12, Why-8)
aux(Live-12, Should-9)
det(Killer-11, a-10)
nsubj(Live-12, Killer-11)
dep(Life-6, Live-12)

(ROOT
  (S
    (S
      (NP (NN Murder))
      (VP (VBZ is)
        (ADJP (RB totally) (JJ unfair))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NNS victims))
        (PP (IN of)
          (NP (NN murder))))
      (VP (VBP are)
        (VP (VBN gone)
          (ADVP (RB forever)))))
    (. .)))

nsubj(unfair-4, Murder-1)
cop(unfair-4, is-2)
advmod(unfair-4, totally-3)
root(ROOT-0, unfair-4)
det(victims-7, the-6)
nsubjpass(gone-11, victims-7)
case(murder-9, of-8)
nmod:of(victims-7, murder-9)
auxpass(gone-11, are-10)
parataxis(unfair-4, gone-11)
advmod(gone-11, forever-12)

(ROOT
  (S
    (S
      (NP (PRP$ Their) (NNS hopes)
        (CC and)
        (NNS plans))
      (VP (VBP have)
        (VP (VBN ended)
          (ADVP (RB permanently)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NNS pleasures))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBD enjoyed)
              (PP (IN in)
                (NP (NN life)))))))
      (VP (VBP have)
        (VP (VBN been)
          (VP (VBN destroyed)))))
    (. .)))

nmod:poss(hopes-2, Their-1)
nsubj(ended-6, hopes-2)
cc(hopes-2, and-3)
conj:and(hopes-2, plans-4)
nsubj(ended-6, plans-4)
aux(ended-6, have-5)
root(ROOT-0, ended-6)
advmod(ended-6, permanently-7)
cc(ended-6, and-9)
det(pleasures-11, the-10)
nsubjpass(destroyed-18, pleasures-11)
nsubj(enjoyed-13, they-12)
acl:relcl(pleasures-11, enjoyed-13)
case(life-15, in-14)
nmod:in(enjoyed-13, life-15)
aux(destroyed-18, have-16)
auxpass(destroyed-18, been-17)
conj:and(ended-6, destroyed-18)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP
        (VP (MD will)
          (ADVP (RB never))
          (VP (VB see)
            (NP (PRP$ their) (NNS friends))
            (ADVP (RB again))))
        (CC and)
        (VP (MD will)
          (ADVP (RB never))
          (VP (VB hear)
            (NP
              (NP
                (NP (DT the) (NNS voices))
                (PP (IN of)
                  (NP (PRP$ their) (NNS parents))))
              (, ,)
              (NP (NNS brothers))
              (, ,)
              (CC and)
              (NP
                (NP (NNS sisters))
                (, ,)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP cry) (, ,)
                      (SBARQ
                        (WHADVP (WRB How))
                        (SQ (MD could)
                          (NP (DT this))
                          (VP (VB have)
                            (VP (VBN happened))))))))))))))
    (CC But)
    (S
      (NP (DT the) (NN murderer))
      (VP (VBZ is)
        (ADVP (RB still))
        (ADJP (JJ alive))))
    (. .)))

nsubj(see-4, They-1)
nsubj(hear-11, They-1)
aux(see-4, will-2)
neg(see-4, never-3)
root(ROOT-0, see-4)
nmod:poss(friends-6, their-5)
dobj(see-4, friends-6)
advmod(see-4, again-7)
cc(see-4, and-8)
aux(hear-11, will-9)
neg(hear-11, never-10)
conj:and(see-4, hear-11)
det(voices-13, the-12)
dobj(hear-11, voices-13)
case(parents-16, of-14)
nmod:poss(parents-16, their-15)
nmod:of(voices-13, parents-16)
dobj(hear-11, brothers-18)
conj:and(voices-13, brothers-18)
cc(voices-13, and-20)
dobj(hear-11, sisters-21)
conj:and(voices-13, sisters-21)
nsubj(cry-24, sisters-21)
ref(sisters-21, who-23)
acl:relcl(sisters-21, cry-24)
advmod(happened-30, How-26)
aux(happened-30, could-27)
nsubj(happened-30, this-28)
aux(happened-30, have-29)
ccomp(cry-24, happened-30)
cc(see-4, But-31)
det(murderer-33, the-32)
nsubj(alive-36, murderer-33)
cop(alive-36, is-34)
advmod(alive-36, still-35)
conj:but(see-4, alive-36)

(ROOT
  (S
    (PP (IN Without)
      (NP (NN capital) (NN punishment)))
    (, ,)
    (NP (NNS murderers))
    (VP (VBP are)
      (VP (VBN allowed)
        (S
          (VP (TO to)
            (VP
              (VP (VB participate)
                (PRT (RP in)))
              (CC and)
              (VP (VB enjoy)
                (NP (NN life))))))))
    (. .)))

case(punishment-3, Without-1)
compound(punishment-3, capital-2)
nmod:without(allowed-7, punishment-3)
nsubjpass(allowed-7, murderers-5)
nsubj(participate-9, murderers-5)
nsubj(enjoy-12, murderers-5)
auxpass(allowed-7, are-6)
root(ROOT-0, allowed-7)
mark(participate-9, to-8)
xcomp(allowed-7, participate-9)
compound:prt(participate-9, in-10)
cc(participate-9, and-11)
xcomp(allowed-7, enjoy-12)
conj:and(participate-9, enjoy-12)
dobj(enjoy-12, life-13)

(ROOT
  (S
    (NP (NN Today))
    (NP (EX there))
    (VP (VBP are)
      (VP (VBG murderers)
        (PP (IN in)
          (NP (NNS prisons)))
        (PP (DT all) (IN over)
          (NP (DT the) (NN world)))))
    (. .)))

nmod:tmod(murderers-4, Today-1)
expl(murderers-4, there-2)
aux(murderers-4, are-3)
root(ROOT-0, murderers-4)
case(prisons-6, in-5)
nmod:in(murderers-4, prisons-6)
dep(world-10, all-7)
case(world-10, over-8)
det(world-10, the-9)
nmod:over(murderers-4, world-10)

(ROOT
  (S
    (NP
      (NP (JJS Most))
      (PP (IN of)
        (NP (PRP them))))
    (VP (MD would)
      (VP (RB rather)
        (VP (VB spend)
          (NP (PRP$ their) (NNS lives))
          (PP (IN in)
            (NP (NN prison))))
        (IN than)
        (VP (VB die))))
    (. .)))

nsubj(spend-6, Most-1)
case(them-3, of-2)
nmod:of(Most-1, them-3)
aux(spend-6, would-4)
advmod(spend-6, rather-5)
root(ROOT-0, spend-6)
nmod:poss(lives-8, their-7)
dobj(spend-6, lives-8)
case(prison-10, in-9)
nmod:in(spend-6, prison-10)
dep(spend-6, than-11)
dep(spend-6, die-12)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is) (RB not)
      (ADJP (JJ surprising))
      (SBAR (IN since)
        (S
          (NP (DT the) (NN desire)
            (S
              (VP (TO to)
                (VP (VB live)))))
          (VP (VBZ is)
            (ADJP (JJ normal)
              (CC and)
              (JJ natural))))))
    (. .)))

nsubj(surprising-4, This-1)
cop(surprising-4, is-2)
neg(surprising-4, not-3)
root(ROOT-0, surprising-4)
mark(normal-11, since-5)
det(desire-7, the-6)
nsubj(normal-11, desire-7)
nsubj(natural-13, desire-7)
mark(live-9, to-8)
acl(desire-7, live-9)
cop(normal-11, is-10)
advcl(surprising-4, normal-11)
cc(normal-11, and-12)
advcl(surprising-4, natural-13)
conj:and(normal-11, natural-13)

(ROOT
  (S
    (PP (IN In)
      (NP (NN prison)))
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (JJ many) (JJ small) (NNS pleasures))
        (SBAR (IN that)
          (S
            (NP (PRP one))
            (VP (MD can)
              (VP (VB enjoy)
                (NP
                  (NP
                    (NP (DT every) (NN day))
                    (: :)
                    (NP
                      (NP (DT the) (NN feeling))
                      (PP (IN of)
                        (NP (JJ warm) (NN sunshine)))))
                  (, ,)
                  (NP
                    (NP (DT the) (NN taste))
                    (PP (IN of)
                      (NP (DT a) (JJ hot) (NN meal))))
                  (, ,)
                  (NP
                    (NP (DT the) (NN comfort))
                    (PP (IN of)
                      (NP (NN sleep)))))))))))
    (. .)))

case(prison-2, In-1)
nmod:in(are-4, prison-2)
expl(are-4, there-3)
root(ROOT-0, are-4)
amod(pleasures-7, many-5)
amod(pleasures-7, small-6)
nsubj(are-4, pleasures-7)
mark(enjoy-11, that-8)
nsubj(enjoy-11, one-9)
aux(enjoy-11, can-10)
dep(pleasures-7, enjoy-11)
det(day-13, every-12)
dobj(enjoy-11, day-13)
det(feeling-16, the-15)
dep(day-13, feeling-16)
case(sunshine-19, of-17)
amod(sunshine-19, warm-18)
nmod:of(feeling-16, sunshine-19)
det(taste-22, the-21)
appos(day-13, taste-22)
case(meal-26, of-23)
det(meal-26, a-24)
amod(meal-26, hot-25)
nmod:of(taste-22, meal-26)
det(comfort-29, the-28)
appos(day-13, comfort-29)
case(sleep-31, of-30)
nmod:of(comfort-29, sleep-31)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN lifestyle))
        (PP (IN in)
          (NP (NN prison))))
      (VP (VBZ is) (RB not)
        (ADJP (RB always) (JJ harsh)
          (CC and)
          (JJ cruel))))
    (: ;)
    (S
      (NP (JJ many) (NNS prisoners))
      (VP (VBP have)
        (NP (DT the) (NN opportunity)
          (S
            (VP (TO to)
              (VP (VB continue)
                (NP (PRP$ their) (NN education))))))
        (, ,)
        (S
          (VP
            (VP (TO to)
              (VP (VB play)
                (NP (NNS sports))))
            (, ,)
            (VP (TO to)
              (VP (VB enjoy)
                (NP (NNS movies))))
            (, ,)
            (CC and)
            (VP (TO to)
              (VP (VB receive)
                (NP (NNS visits))
                (PP (IN from)
                  (NP (PRP$ their) (JJ loved) (NNS ones)))))))))
    (. .)))

det(lifestyle-2, The-1)
nsubj(harsh-8, lifestyle-2)
nsubj(cruel-10, lifestyle-2)
case(prison-4, in-3)
nmod:in(lifestyle-2, prison-4)
cop(harsh-8, is-5)
neg(harsh-8, not-6)
advmod(harsh-8, always-7)
root(ROOT-0, harsh-8)
cc(harsh-8, and-9)
conj:and(harsh-8, cruel-10)
amod(prisoners-13, many-12)
nsubj(have-14, prisoners-13)
parataxis(harsh-8, have-14)
det(opportunity-16, the-15)
dobj(have-14, opportunity-16)
mark(continue-18, to-17)
acl(opportunity-16, continue-18)
nmod:poss(education-20, their-19)
dobj(continue-18, education-20)
mark(play-23, to-22)
dep(have-14, play-23)
dobj(play-23, sports-24)
mark(enjoy-27, to-26)
dep(have-14, enjoy-27)
conj:and(play-23, enjoy-27)
dobj(enjoy-27, movies-28)
cc(play-23, and-30)
mark(receive-32, to-31)
dep(have-14, receive-32)
conj:and(play-23, receive-32)
dobj(receive-32, visits-33)
case(ones-37, from-34)
nmod:poss(ones-37, their-35)
amod(ones-37, loved-36)
nmod:from(receive-32, ones-37)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN reason))
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP
              (NP (DT a) (NN killer))
              (, ,)
              (NP
                (NP (DT a) (NN destroyer))
                (PP (IN of)
                  (NP (NN life))))
              (, ,))
            (VP (MD should)
              (VP (VB live)))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(reason-4, no-3)
nsubj(is-2, reason-4)
advmod(live-15, why-5)
det(killer-7, a-6)
nsubj(live-15, killer-7)
det(destroyer-10, a-9)
appos(killer-7, destroyer-10)
case(life-12, of-11)
nmod:of(destroyer-10, life-12)
aux(live-15, should-14)
acl:relcl(reason-4, live-15)

(ROOT
  (S
    (NP (NNP Justice))
    (VP (VBZ requires)
      (SBAR (IN that)
        (S
          (NP (DT each) (NN person))
          (VP
            (VP (VB respect)
              (NP
                (NP (DT the) (NNS rights)
                  (CC and)
                  (NNS freedoms))
                (PP (IN of)
                  (NP (DT every) (JJ other) (NN person)))))
            (, ,)
            (CC or)
            (VP (VB be)
              (VP (VBN punished)
                (PP (IN for)
                  (S (RB not)
                    (VP (VBG doing)
                      (ADVP (RB so)))))))))))
    (. .)))

nsubj(requires-2, Justice-1)
root(ROOT-0, requires-2)
mark(respect-6, that-3)
det(person-5, each-4)
nsubj(respect-6, person-5)
nsubjpass(punished-18, person-5)
ccomp(requires-2, respect-6)
det(rights-8, the-7)
dobj(respect-6, rights-8)
cc(rights-8, and-9)
dobj(respect-6, freedoms-10)
conj:and(rights-8, freedoms-10)
case(person-14, of-11)
det(person-14, every-12)
amod(person-14, other-13)
nmod:of(rights-8, person-14)
cc(respect-6, or-16)
auxpass(punished-18, be-17)
ccomp(requires-2, punished-18)
conj:or(respect-6, punished-18)
mark(doing-21, for-19)
neg(doing-21, not-20)
advcl(punished-18, doing-21)
advmod(doing-21, so-22)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS people))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP commit)
            (NP (NN murder))))))
    (VP (VBP give)
      (PRT (RP up))
      (NP (PRP$ their) (NNS rights))
      (PP
        (PP (TO to)
          (NP (NN citizenship)))
        (CC and)
        (PP (TO to)
          (NP (NN life)))
        (NP (PRP itself))))
    (. .)))

det(people-2, The-1)
nsubj(commit-4, people-2)
nsubj(give-6, people-2)
ref(people-2, who-3)
acl:relcl(people-2, commit-4)
dobj(commit-4, murder-5)
root(ROOT-0, give-6)
compound:prt(give-6, up-7)
nmod:poss(rights-9, their-8)
dobj(give-6, rights-9)
case(citizenship-11, to-10)
nmod:to(itself-15, citizenship-11)
cc(itself-15, and-12)
case(life-14, to-13)
nmod(give-6, life-14)
conj:and(itself-15, life-14)
nmod(give-6, itself-15)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP
        (NP (DT the) (NNS taxes))
        (VP (VBN paid)
          (PP (IN by)
            (S
              (VP (VBG citizensXincluding)
                (NP (DT the) (NNS victims)))))))
      (VP (VB familyXkeep)
        (S
          (NP (DT a) (NN killer))
          (ADJP (JJ alive)))))
    (. ?)))

advmod(familyXkeep-10, Why-1)
aux(familyXkeep-10, should-2)
det(taxes-4, the-3)
nsubj(familyXkeep-10, taxes-4)
acl(taxes-4, paid-5)
mark(citizensXincluding-7, by-6)
advcl(paid-5, citizensXincluding-7)
det(victims-9, the-8)
dobj(citizensXincluding-7, victims-9)
root(ROOT-0, familyXkeep-10)
det(killer-12, a-11)
nsubj(alive-13, killer-12)
xcomp(familyXkeep-10, alive-13)

(ROOT
  (S
    (NP (DT The)
      (ADJP (RB only) (JJ fair))
      (NN punishment))
    (VP (VBZ is)
      (NP (NN execution)))
    (. .)))

det(punishment-4, The-1)
advmod(fair-3, only-2)
amod(punishment-4, fair-3)
nsubj(execution-6, punishment-4)
cop(execution-6, is-5)
root(ROOT-0, execution-6)

(ROOT
  (S
    (S
      (NP (NNP Execution))
      (VP
        (VP (VBZ puts)
          (NP (DT the) (NN killer))
          (ADVP (RB away))
          (PP (IN from)
            (NP (NN society)))
          (ADVP (RB forever)))
        (, ,)
        (VP (VBZ stops)
          (NP (PRP him))
          (PP (IN from)
            (S
              (VP (VBG killing)
                (ADVP (RB again))))))
        (, ,)
        (CC and)
        (VP (VBZ sends)
          (NP (DT a) (JJ strong) (NN message))
          (PP (TO to)
            (NP
              (NP (NNS others))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (MD might)
                    (VP (VB kill))))))))))
    (: :)
    (S
      (NP (NNS killers))
      (VP (MD will) (RB not)
        (VP (VB be)
          (VP (VBN allowed)
            (S
              (VP (TO to)
                (VP (VB live))))))))
    (. .)))

nsubj(puts-2, Execution-1)
nsubj(stops-10, Execution-1)
nsubj(sends-17, Execution-1)
root(ROOT-0, puts-2)
det(killer-4, the-3)
dobj(puts-2, killer-4)
advmod(puts-2, away-5)
case(society-7, from-6)
nmod:from(puts-2, society-7)
advmod(puts-2, forever-8)
conj:and(puts-2, stops-10)
dobj(stops-10, him-11)
mark(killing-13, from-12)
advcl(stops-10, killing-13)
advmod(killing-13, again-14)
cc(puts-2, and-16)
conj:and(puts-2, sends-17)
det(message-20, a-18)
amod(message-20, strong-19)
dobj(sends-17, message-20)
case(others-22, to-21)
nmod:to(sends-17, others-22)
nsubj(kill-25, others-22)
ref(others-22, who-23)
aux(kill-25, might-24)
acl:relcl(others-22, kill-25)
nsubjpass(allowed-31, killers-27)
nsubj(live-33, killers-27)
aux(allowed-31, will-28)
neg(allowed-31, not-29)
auxpass(allowed-31, be-30)
parataxis(puts-2, allowed-31)
mark(live-33, to-32)
xcomp(allowed-31, live-33)

(ROOT
  (S
    (VP (VB Let)
      (NP (NN sunshine) (NN fall))
      (PP (IN on)
        (NP
          (NP (DT those))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VB respect)
                (NP (NN lifeXnot))
                (PP (IN on)
                  (NP
                    (NP (DT those))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBP destroy)
                          (NP (PRP it)))))))))))))
    (. .)))

root(ROOT-0, Let-1)
compound(fall-3, sunshine-2)
nmod:tmod(Let-1, fall-3)
case(those-5, on-4)
nmod:on(Let-1, those-5)
nsubj(respect-7, those-5)
ref(those-5, who-6)
acl:relcl(those-5, respect-7)
dobj(respect-7, lifeXnot-8)
case(those-10, on-9)
nmod:on(respect-7, those-10)
nsubj(destroy-12, those-10)
ref(those-10, who-11)
acl:relcl(those-10, destroy-12)
dobj(destroy-12, it-13)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP Do)
      (NP (PRP We))
      (VP (VB Kill)
        (S
          (NP (NNS People))
          (VP (TO to)
            (VP (VB Show)
              (NP
                (NP (DT That))
                (SBAR
                  (S
                    (NP (NNP Killing) (NNS People))
                    (VP (VBZ Is)
                      (ADJP (JJ Wrong)))))))))))
    (. ?)))

advmod(Kill-4, Why-1)
aux(Kill-4, Do-2)
nsubj(Kill-4, We-3)
root(ROOT-0, Kill-4)
dobj(Kill-4, People-5)
nsubj(Show-7, People-5)
mark(Show-7, to-6)
xcomp(Kill-4, Show-7)
dobj(Show-7, That-8)
compound(People-10, Killing-9)
nsubj(Wrong-12, People-10)
cop(Wrong-12, Is-11)
acl:relcl(That-8, Wrong-12)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS times))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NN murder))
            (VP (VBZ is)
              (VP (VBN committed)
                (PP (RB not) (RB because) (IN of)
                  (NP (NN cruelty)))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, times-3)
advmod(committed-7, when-4)
nsubjpass(committed-7, murder-5)
auxpass(committed-7, is-6)
acl:relcl(times-3, committed-7)
neg(cruelty-11, not-8)
case(cruelty-11, because-9)
mwe(because-9, of-10)
nmod:because_of(committed-7, cruelty-11)

(ROOT
  (S
    (NP (NNS People))
    (VP (MD may)
      (VP (VB kill)
        (PP (IN for)
          (NP
            (NP (JJ other) (NNS reasons))
            (, ,)
            (PP (JJ such) (IN as)
              (NP
                (NP (NN out))
                (PP (IN of)
                  (NP (NN anger)))))
            (, ,)
            (VP (VBG misunderstanding))
            (, ,)
            (CC or)
            (NP (NN fear))))))
    (. .)))

nsubj(kill-3, People-1)
aux(kill-3, may-2)
root(ROOT-0, kill-3)
case(reasons-6, for-4)
amod(reasons-6, other-5)
nmod:for(kill-3, reasons-6)
case(anger-12, such-8)
mwe(such-8, as-9)
case(anger-12, out-10)
mwe(out-10, of-11)
nmod:out_of(reasons-6, anger-12)
acl(reasons-6, misunderstanding-14)
cc(reasons-6, or-16)
nmod:for(kill-3, fear-17)
conj:or(reasons-6, fear-17)

(ROOT
  (S
    (NP (NN Everyone))
    (VP (VBZ has)
      (VP (VBN made)
        (NP
          (NP (NNS mistakes))
          (PP (RB because) (IN of)
            (NP (JJ such) (NNS feelings))))))
    (. .)))

nsubj(made-3, Everyone-1)
aux(made-3, has-2)
root(ROOT-0, made-3)
dobj(made-3, mistakes-4)
case(feelings-8, because-5)
mwe(because-5, of-6)
amod(feelings-8, such-7)
nmod:because_of(mistakes-4, feelings-8)

(ROOT
  (S
    (PP (IN For)
      (NP (NN society)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP (DT a) (JJ serious) (NN mistake)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP
                (NP (DT the) (NN life))
                (PP (IN of)
                  (NP (NN someone)))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ has)
                      (VP (VBN killed)
                        (SBAR (IN because)
                          (S
                            (NP (PRP it))
                            (VP (VBZ teaches)
                              (NP (NN everyone))
                              (SBAR (IN that)
                                (S
                                  (NP (NN forgiveness))
                                  (VP (VBZ is)
                                    (ADJP (JJ unnecessary))))))))))))))))))
    (. .)))

case(society-2, For-1)
nmod:for(mistake-8, society-2)
nsubj(mistake-8, it-4)
cop(mistake-8, is-5)
det(mistake-8, a-6)
amod(mistake-8, serious-7)
root(ROOT-0, mistake-8)
mark(take-10, to-9)
acl(mistake-8, take-10)
det(life-12, the-11)
dobj(take-10, life-12)
nsubj(killed-17, life-12)
case(someone-14, of-13)
nmod:of(life-12, someone-14)
ref(life-12, who-15)
aux(killed-17, has-16)
acl:relcl(life-12, killed-17)
mark(teaches-20, because-18)
nsubj(teaches-20, it-19)
advcl(killed-17, teaches-20)
dobj(teaches-20, everyone-21)
mark(unnecessary-25, that-22)
nsubj(unnecessary-25, forgiveness-23)
cop(unnecessary-25, is-24)
ccomp(teaches-20, unnecessary-25)

(ROOT
  (S
    (S
      (NP (DT The) (NN government))
      (VP (VBZ has)
        (NP
          (NP (DT the) (JJ difficult) (NN job))
          (PP (IN of)
            (S
              (VP (VBG deciding)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ is)
                      (ADJP (JJ guilty)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT this) (NN job))
      (VP (MD can)
        (ADVP (RB never))
        (VP (VB be)
          (VP (VBN done)
            (ADVP (RB perfectly))))))
    (. .)))

det(government-2, The-1)
nsubj(has-3, government-2)
root(ROOT-0, has-3)
det(job-6, the-4)
amod(job-6, difficult-5)
dobj(has-3, job-6)
mark(deciding-8, of-7)
acl(job-6, deciding-8)
nsubj(guilty-11, who-9)
cop(guilty-11, is-10)
ccomp(deciding-8, guilty-11)
cc(has-3, and-13)
det(job-15, this-14)
nsubjpass(done-19, job-15)
aux(done-19, can-16)
neg(done-19, never-17)
auxpass(done-19, be-18)
conj:and(has-3, done-19)
advmod(done-19, perfectly-20)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN capital) (NN punishment))
        (VP (VBZ is)
          (VP (VBN allowed)))))
    (, ,)
    (NP (EX there))
    (ADVP (RB always))
    (VP (VBZ exists)
      (NP (DT the) (NN possibility))
      (SBAR (IN that)
        (S
          (NP (DT an) (JJ innocent) (NN person))
          (VP (MD will)
            (VP (VB be)
              (VP (VBN executed)
                (PP (IN by)
                  (NP (NN mistake)))))))))
    (. .)))

mark(allowed-5, If-1)
compound(punishment-3, capital-2)
nsubjpass(allowed-5, punishment-3)
auxpass(allowed-5, is-4)
advcl(exists-9, allowed-5)
expl(exists-9, there-7)
advmod(exists-9, always-8)
root(ROOT-0, exists-9)
det(possibility-11, the-10)
dobj(exists-9, possibility-11)
mark(executed-18, that-12)
det(person-15, an-13)
amod(person-15, innocent-14)
nsubjpass(executed-18, person-15)
aux(executed-18, will-16)
auxpass(executed-18, be-17)
ccomp(exists-9, executed-18)
case(mistake-20, by-19)
nmod:by(executed-18, mistake-20)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT that))
        (VP (VBZ happens))))
    (, ,)
    (NP (DT an)
      (ADJP (RB even) (JJR worse))
      (NN crime))
    (VP (VBZ has)
      (VP (VBN been)
        (NP
          (NP (JJ committedXthe) (NN killing))
          (PP (IN of)
            (NP (DT an) (JJ innocent) (NN person))))
        (PP (IN by)
          (NP (DT the) (NN government)))))
    (. .)))

advmod(happens-3, When-1)
nsubj(happens-3, that-2)
advcl(killing-12, happens-3)
det(crime-8, an-5)
advmod(worse-7, even-6)
amod(crime-8, worse-7)
nsubj(killing-12, crime-8)
aux(killing-12, has-9)
cop(killing-12, been-10)
amod(killing-12, committedXthe-11)
root(ROOT-0, killing-12)
case(person-16, of-13)
det(person-16, an-14)
amod(person-16, innocent-15)
nmod:of(killing-12, person-16)
case(government-19, by-17)
det(government-19, the-18)
nmod:by(killing-12, government-19)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NNP United) (NNPS States)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP (DT a) (NN fact))
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (JJ poor))
            (CC and)
            (NP (NNS minorities)))
          (VP (VBP get)
            (NP (DT the) (NN death) (NN penalty))
            (ADVP
              (ADVP (RBR more) (RB often))
              (SBAR (IN than)
                (S
                  (NP (JJ white) (NNS people))
                  (VP (VBP do)))))))))
    (. .)))

case(States-4, In-1)
det(States-4, the-2)
compound(States-4, United-3)
nmod:in(fact-9, States-4)
nsubj(fact-9, it-6)
cop(fact-9, is-7)
det(fact-9, a-8)
root(ROOT-0, fact-9)
mark(get-15, that-10)
det(poor-12, the-11)
nsubj(get-15, poor-12)
cc(poor-12, and-13)
conj:and(poor-12, minorities-14)
nsubj(get-15, minorities-14)
ccomp(fact-9, get-15)
det(penalty-18, the-16)
compound(penalty-18, death-17)
dobj(get-15, penalty-18)
advmod(often-20, more-19)
advmod(get-15, often-20)
mark(do-24, than-21)
amod(people-23, white-22)
nsubj(do-24, people-23)
advcl(often-20, do-24)

(ROOT
  (S
    (S
      (ADVP (RB Furthermore))
      (, ,)
      (NP
        (NP (DT the) (NN idea))
        (SBAR (IN that)
          (S
            (NP (NN capital) (NN punishment))
            (VP (VBZ stops)
              (NP (NNS criminals))
              (PP (IN from)
                (S
                  (VP (VBG committing)
                    (NP (NN murder)))))))))
      (VP (VBZ is)
        (ADJP (JJ doubtful))))
    (: ;)
    (S
      (NP (NNS studies))
      (VP (VBP have)
        (VP (VBN been)
          (ADJP (JJ unable)
            (S
              (VP (TO to)
                (VP (VB show)
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (DT the) (NN fear))
                        (PP (IN of)
                          (NP (NN capital) (NN punishment))))
                      (VP (VBZ stops)
                        (NP (NN someone))
                        (PP (IN from)
                          (S
                            (VP (VBG committing)
                              (NP (NN murder))
                              (ADVP (DT any) (RBR more))
                              (PP (IN than)
                                (NP (JJ other) (NNS punishments))))))))))))))))
    (. .)))

advmod(doubtful-14, Furthermore-1)
det(idea-4, the-3)
nsubj(doubtful-14, idea-4)
mark(stops-8, that-5)
compound(punishment-7, capital-6)
nsubj(stops-8, punishment-7)
dep(idea-4, stops-8)
dobj(stops-8, criminals-9)
mark(committing-11, from-10)
advcl(stops-8, committing-11)
dobj(committing-11, murder-12)
cop(doubtful-14, is-13)
root(ROOT-0, doubtful-14)
nsubj(unable-19, studies-16)
nsubj(show-21, studies-16)
aux(unable-19, have-17)
cop(unable-19, been-18)
parataxis(doubtful-14, unable-19)
mark(show-21, to-20)
xcomp(unable-19, show-21)
mark(stops-28, that-22)
det(fear-24, the-23)
nsubj(stops-28, fear-24)
case(punishment-27, of-25)
compound(punishment-27, capital-26)
nmod:of(fear-24, punishment-27)
ccomp(show-21, stops-28)
dobj(stops-28, someone-29)
mark(committing-31, from-30)
advcl(stops-28, committing-31)
dobj(committing-31, murder-32)
dep(more-34, any-33)
advmod(committing-31, more-34)
case(punishments-37, than-35)
amod(punishments-37, other-36)
nmod:than(committing-31, punishments-37)

(ROOT
  (S (CC And)
    (S
      (VP (VB let)
        (NP (PRP us))
        (RB not)
        (VP (VB forget)
          (SBAR (IN that)
            (S
              (S
                (VP (VBG murdering)
                  (NP (DT the) (NN murderer))))
              (VP (VBZ is)
                (NP
                  (NP (DT a) (JJ violent) (NN act))
                  (PP (IN in)
                    (NP (PRP itself))))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP (NN revenge))))
    (. .)))

cc(let-2, And-1)
root(ROOT-0, let-2)
dobj(let-2, us-3)
neg(let-2, not-4)
dep(let-2, forget-5)
mark(act-13, that-6)
csubj(act-13, murdering-7)
det(murderer-9, the-8)
dobj(murdering-7, murderer-9)
cop(act-13, is-10)
det(act-13, a-11)
amod(act-13, violent-12)
ccomp(forget-5, act-13)
case(itself-15, in-14)
nmod:in(act-13, itself-15)
nsubj(revenge-19, it-17)
cop(revenge-19, is-18)
parataxis(let-2, revenge-19)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can) (RB not)
      (VP (VB imagine)
        (NP
          (NP (DT the) (NN pain))
          (PP (IN of)
            (NP (NN family) (NNS members)))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP have)
                (VP (VBN been)
                  (VP (VBG waiting)
                    (PP (IN for)
                      (NP
                        (NP (NNS years))
                        (PP (IN for)
                          (NP (DT the) (NNS governments) (NN decision)))))
                    (S
                      (VP (TO to)
                        (VP (VB execute)
                          (CC or)
                          (RB not) (VB execute)
                          (NP (PRP$ their) (JJ loved) (NN one)))))))))))))
    (. .)))

nsubj(imagine-4, We-1)
aux(imagine-4, can-2)
neg(imagine-4, not-3)
root(ROOT-0, imagine-4)
det(pain-6, the-5)
dobj(imagine-4, pain-6)
nsubj(waiting-13, pain-6)
nsubj(execute-21, pain-6)
case(members-9, of-7)
compound(members-9, family-8)
nmod:of(pain-6, members-9)
ref(pain-6, who-10)
aux(waiting-13, have-11)
aux(waiting-13, been-12)
acl:relcl(pain-6, waiting-13)
case(years-15, for-14)
nmod:for(waiting-13, years-15)
case(decision-19, for-16)
det(decision-19, the-17)
compound(decision-19, governments-18)
nmod:for(years-15, decision-19)
mark(execute-21, to-20)
xcomp(waiting-13, execute-21)
cc(execute-21, or-22)
xcomp(waiting-13, not-23)
conj:or(execute-21, not-23)
dep(execute-21, execute-24)
nmod:poss(one-27, their-25)
amod(one-27, loved-26)
dobj(execute-21, one-27)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB also))
    (VP (VBZ costs)
      (NP (NNS taxpayers))
      (NP
        (NP (NNS millions))
        (PP (IN of)
          (NP
            (NP (NNS dollars))
            (NP (JJR more)))))
      (S
        (VP (TO to)
          (VP (VB execute)
            (NP (DT a) (JJ criminal))
            (SBAR (IN than)
              (S
                (VP (TO to)
                  (VP (VB imprison)
                    (NP
                      (NP (DT that) (NN criminal))
                      (PP (IN for)
                        (NP (NN life))))))))))))
    (. .)))

nsubj(costs-3, It-1)
advmod(costs-3, also-2)
root(ROOT-0, costs-3)
iobj(costs-3, taxpayers-4)
dobj(costs-3, millions-5)
case(dollars-7, of-6)
nmod:of(millions-5, dollars-7)
dep(dollars-7, more-8)
mark(execute-10, to-9)
advcl(costs-3, execute-10)
det(criminal-12, a-11)
dobj(execute-10, criminal-12)
mark(imprison-15, than-13)
mark(imprison-15, to-14)
advcl(execute-10, imprison-15)
det(criminal-17, that-16)
dobj(imprison-15, criminal-17)
case(life-19, for-18)
nmod:for(criminal-17, life-19)

(ROOT
  (S
    (NP (NNP Prison))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJR better) (NN form))
        (PP (IN of)
          (NP (NN punishment))))
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ protects)
            (NP (NN society)
              (CC and)
              (NNS punishes) (NNS criminals))
            (PP (IN by)
              (S
                (VP (VBG taking)
                  (PRT (RP away))
                  (NP (PRP$ their) (NN freedom)))))))))
    (. .)))

nsubj(form-5, Prison-1)
cop(form-5, is-2)
det(form-5, a-3)
amod(form-5, better-4)
root(ROOT-0, form-5)
case(punishment-7, of-6)
nmod:of(form-5, punishment-7)
mark(protects-10, because-8)
nsubj(protects-10, it-9)
advcl(form-5, protects-10)
compound(criminals-14, society-11)
cc(society-11, and-12)
conj:and(society-11, punishes-13)
compound(criminals-14, punishes-13)
dobj(protects-10, criminals-14)
mark(taking-16, by-15)
advcl(protects-10, taking-16)
compound:prt(taking-16, away-17)
nmod:poss(freedom-19, their-18)
dobj(taking-16, freedom-19)

(ROOT
  (S
    (NP (NNS People))
    (VP (MD can)
      (VP
        (VP (VB change))
        (, ,)
        (NP
          (NP (RB even) (NNS people))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP have)
                (VP (VBN made)
                  (NP (JJ terrible) (NNS mistakes)))))))))
    (. .)))

nsubj(change-3, People-1)
aux(change-3, can-2)
root(ROOT-0, change-3)
advmod(people-6, even-5)
dobj(change-3, people-6)
nsubj(made-9, people-6)
ref(people-6, who-7)
aux(made-9, have-8)
acl:relcl(people-6, made-9)
amod(mistakes-11, terrible-10)
dobj(made-9, mistakes-11)

(ROOT
  (S
    (NP
      (NP (NNP Life))
      (PP (IN in)
        (NP (NN prison))))
    (VP (VBZ gives)
      (NP (NNS people))
      (NP (DT the) (NN chance)
        (S
          (VP (TO to)
            (VP (VB change))))))
    (. .)))

nsubj(gives-4, Life-1)
case(prison-3, in-2)
nmod:in(Life-1, prison-3)
root(ROOT-0, gives-4)
iobj(gives-4, people-5)
det(chance-7, the-6)
dobj(gives-4, chance-7)
mark(change-9, to-8)
acl(chance-7, change-9)

(ROOT
  (S
    (NP (NNP Caryl) (NNP Chessman))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN example))
        (PP (IN of)
          (NP (NN someone)))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD became)
              (NP (DT a) (JJR better) (NN person))
              (PP (IN in)
                (NP (NN prison))))))))
    (. .)))

compound(Chessman-2, Caryl-1)
nsubj(example-5, Chessman-2)
cop(example-5, is-3)
det(example-5, an-4)
root(ROOT-0, example-5)
nsubj(became-9, example-5)
case(someone-7, of-6)
nmod:of(example-5, someone-7)
ref(example-5, who-8)
acl:relcl(example-5, became-9)
det(person-12, a-10)
amod(person-12, better-11)
xcomp(became-9, person-12)
case(prison-14, in-13)
nmod:in(became-9, prison-14)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD taught)
        (NP (JJ other) (NNS prisoners))
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB read)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD wrote)
        (NP (JJ several) (NNS books))))
    (. .)))

nsubj(taught-2, He-1)
root(ROOT-0, taught-2)
amod(prisoners-4, other-3)
dobj(taught-2, prisoners-4)
nsubj(read-7, prisoners-4)
advmod(read-7, how-5)
mark(read-7, to-6)
xcomp(taught-2, read-7)
cc(taught-2, and-9)
nsubj(wrote-11, he-10)
conj:and(taught-2, wrote-11)
amod(books-13, several-12)
dobj(wrote-11, books-13)

(ROOT
  (S
    (PP (IN Before)
      (NP (PRP$ his) (NN execution)))
    (, ,)
    (NP (PRP he))
    (VP (VBD wrote)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (ADVP (RB finally))
            (VP (VBN learned)
              (S (RB not)
                (VP (TO to)
                  (VP (VB hate)))))))))
    (. .)))

case(execution-3, Before-1)
nmod:poss(execution-3, his-2)
nmod:before(wrote-6, execution-3)
nsubj(wrote-6, he-5)
root(ROOT-0, wrote-6)
mark(learned-11, that-7)
nsubj(learned-11, he-8)
nsubj(hate-14, he-8)
aux(learned-11, had-9)
advmod(learned-11, finally-10)
ccomp(wrote-6, learned-11)
neg(hate-14, not-12)
mark(hate-14, to-13)
xcomp(learned-11, hate-14)

(ROOT
  (S
    (NP (NNP Chessman))
    (VP (VBD learned)
      (NP (DT this) (JJ important) (NN lesson))
      (PP (IN in)
        (NP (NN prison))))
    (. .)))

nsubj(learned-2, Chessman-1)
root(ROOT-0, learned-2)
det(lesson-5, this-3)
amod(lesson-5, important-4)
dobj(learned-2, lesson-5)
case(prison-7, in-6)
nmod:in(learned-2, prison-7)

(ROOT
  (S (CC But)
    (S
      (NP (DT a) (JJ dead) (NN man))
      (VP (VBZ learns)
        (NP (NN nothing))))
    (, ,)
    (CC and)
    (S
      (NP (DT an) (JJ executed) (NN person))
      (VP (MD will)
        (ADVP (RB never))
        (VP (VB change))))
    (. .)))

cc(learns-5, But-1)
det(man-4, a-2)
amod(man-4, dead-3)
nsubj(learns-5, man-4)
root(ROOT-0, learns-5)
dobj(learns-5, nothing-6)
cc(learns-5, and-8)
det(person-11, an-9)
amod(person-11, executed-10)
nsubj(change-14, person-11)
aux(change-14, will-12)
neg(change-14, never-13)
conj:and(learns-5, change-14)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT a) (NN government))
        (VP (VBZ kills))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (VP (VBG murdering)
        (NP (NN hope))))
    (. .)))

advmod(kills-4, When-1)
det(government-3, a-2)
nsubj(kills-4, government-3)
advcl(murdering-8, kills-4)
nsubj(murdering-8, it-6)
aux(murdering-8, is-7)
root(ROOT-0, murdering-8)
dobj(murdering-8, hope-9)

