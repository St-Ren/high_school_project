(ROOT
  (FRAG
    (PP (IN After)
      (NP (CD Twenty) (NNS Years)))
    (. .)))

case(Years-3, After-1)
nummod(Years-3, Twenty-2)
root(ROOT-0, Years-3)

(ROOT
  (FRAG
    (X
      (NP
        (NP (NNP Characters) (NNP Bob))
        (, ,)
        (NP (DT a) (JJ well-dressed) (NN man) (NNP Young) (NNP Bob))
        (, ,)
        (NP (NNP Bob))
        (, ,)
        (NP (CD twenty) (NNS years)))
      (NP (JJR younger) (NN Young))
      (NP
        (NP (NNP Jimmy) (, ,) (NNP Young) (NNPS Bobs))
        (NP (JJS best) (NN friend) (NN Narrator))))
    (: :)
    (NP
      (NP (DT A) (NNP New) (NNP York) (NNP City) (NN policeman))
      (PP (IN on)
        (NP
          (NP (PRP$ his) (NN beat))
          (VP (VBZ walks)
            (PRT (RP up))
            (NP (DT an) (JJ empty) (NN street))))))
    (. .)))

compound(Bob-2, Characters-1)
dep(Bobs-19, Bob-2)
det(Bob-8, a-4)
amod(Bob-8, well-dressed-5)
compound(Bob-8, man-6)
compound(Bob-8, Young-7)
appos(Bob-2, Bob-8)
appos(Bob-2, Bob-10)
nummod(years-13, twenty-12)
appos(Bob-2, years-13)
amod(Young-15, younger-14)
dep(Bobs-19, Young-15)
compound(Bobs-19, Jimmy-16)
appos(Bobs-19, Young-18)
dep(policeman-28, Bobs-19)
amod(Narrator-22, best-20)
compound(Narrator-22, friend-21)
dep(Bobs-19, Narrator-22)
det(policeman-28, A-24)
compound(policeman-28, New-25)
compound(policeman-28, York-26)
compound(policeman-28, City-27)
root(ROOT-0, policeman-28)
case(beat-31, on-29)
nmod:poss(beat-31, his-30)
nmod:on(policeman-28, beat-31)
dep(beat-31, walks-32)
compound:prt(walks-32, up-33)
det(street-36, an-34)
amod(street-36, empty-35)
dobj(walks-32, street-36)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (RB almost) (CD ten) (NN oclock))
        (PP (IN at)
          (NP (NN night)))))
    (. .)))

nsubj(oclock-5, It-1)
cop(oclock-5, is-2)
advmod(oclock-5, almost-3)
nummod(oclock-5, ten-4)
root(ROOT-0, oclock-5)
case(night-7, at-6)
nmod:at(oclock-5, night-7)

(ROOT
  (S
    (S
      (NP (DT The) (NN wind))
      (VP (VBZ is)
        (ADJP (JJ chilly))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ looks)
        (SBAR (IN like)
          (S
            (NP (PRP it))
            (VP (MD will)
              (VP (VB rain)
                (ADVP (RB very) (RB soon))))))))
    (. .)))

det(wind-2, The-1)
nsubj(chilly-4, wind-2)
cop(chilly-4, is-3)
root(ROOT-0, chilly-4)
cc(chilly-4, and-5)
nsubj(looks-7, it-6)
conj:and(chilly-4, looks-7)
mark(rain-11, like-8)
nsubj(rain-11, it-9)
aux(rain-11, will-10)
advcl(looks-7, rain-11)
advmod(soon-13, very-12)
advmod(rain-11, soon-13)

(ROOT
  (S
    (NP (DT The) (NN policeman))
    (VP (VBZ finds)
      (NP
        (NP (NNP Bob))
        (VP (VBG standing)
          (PP (IN in)
            (NP (DT the) (NNS shadows))))))
    (. .)))

det(policeman-2, The-1)
nsubj(finds-3, policeman-2)
root(ROOT-0, finds-3)
dobj(finds-3, Bob-4)
acl(Bob-4, standing-5)
case(shadows-8, in-6)
det(shadows-8, the-7)
nmod:in(standing-5, shadows-8)

(ROOT
  (NP
    (NP (NNP Bob))
    (: :)
    (NP (PRP$ Its)
      (NP
        (NP (DT all) (NN right))
        (, ,)
        (NP (NN officer))))
    (. .)))

root(ROOT-0, Bob-1)
nmod:poss(right-5, Its-3)
det(right-5, all-4)
dep(Bob-1, right-5)
appos(right-5, officer-7)

(ROOT
  (S
    (VP (VB Im)
      (ADVP (RB just))
      (S
        (VP (VBG waiting)
          (PP (IN for)
            (NP (DT a) (NN friend))))))
    (. .)))

root(ROOT-0, Im-1)
advmod(Im-1, just-2)
xcomp(Im-1, waiting-3)
case(friend-6, for-4)
det(friend-6, a-5)
nmod:for(waiting-3, friend-6)

(ROOT
  (NP
    (NP (NNP Policeman))
    (: :)
    (NP (NNP Yes))
    (. ?)))

root(ROOT-0, Policeman-1)
dep(Policeman-1, Yes-3)

(ROOT
  (NP
    (NP (NNP Bob))
    (: :)
    (NP
      (NP (PRP$ Its))
      (SBAR
        (S
          (NP (DT an) (NN appointment))
          (VP (VBD made)
            (ADVP
              (NP (CD twenty) (NNS years))
              (RB ago))))))
    (. .)))

root(ROOT-0, Bob-1)
dep(Bob-1, Its-3)
det(appointment-5, an-4)
nsubj(made-6, appointment-5)
acl:relcl(Its-3, made-6)
nummod(years-8, twenty-7)
nmod:npmod(ago-9, years-8)
advmod(made-6, ago-9)

(ROOT
  (SQ (MD Can)
    (NP (PRP you))
    (VP (VB see)
      (NP (DT the) (NN store))
      (ADVP (RB there)))
    (. ?)))

aux(see-3, Can-1)
nsubj(see-3, you-2)
root(ROOT-0, see-3)
det(store-5, the-4)
dobj(see-3, store-5)
advmod(see-3, there-6)

(ROOT
  (S
    (ADVP
      (NP (CD Twenty) (NNS years))
      (RB ago))
    (NP (PRP it))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN restaurant))
        (: --)
        (NP (NNP Big) (NNP Joe) (NNP Bradys))))
    (. .)))

nummod(years-2, Twenty-1)
nmod:npmod(ago-3, years-2)
advmod(restaurant-7, ago-3)
nsubj(restaurant-7, it-4)
cop(restaurant-7, was-5)
det(restaurant-7, a-6)
root(ROOT-0, restaurant-7)
compound(Bradys-11, Big-9)
compound(Bradys-11, Joe-10)
dep(restaurant-7, Bradys-11)

(ROOT
  (FRAG
    (NP (NNP Policeman))
    (: :)
    (S
      (NP (DT That))
      (VP (VBD was)
        (VP (VBN torn)
          (PRT (RP down))
          (ADVP
            (NP (CD five) (NNS years))
            (RB ago)))))
    (. .)))

root(ROOT-0, Policeman-1)
nsubjpass(torn-5, That-3)
auxpass(torn-5, was-4)
parataxis(Policeman-1, torn-5)
compound:prt(torn-5, down-6)
nummod(years-8, five-7)
nmod:npmod(ago-9, years-8)
advmod(torn-5, ago-9)

(ROOT
  (FRAG
    (NP (NNP Narrator))
    (: :)
    (S
      (NP (NNP Bob))
      (VP (VBZ strikes)
        (NP
          (NP (DT a) (NN match))
          (CC and)
          (NP
            (NP (NNS lights))
            (NP (PRP$ his) (NN cigar))))))
    (. .)))

root(ROOT-0, Narrator-1)
nsubj(strikes-4, Bob-3)
parataxis(Narrator-1, strikes-4)
det(match-6, a-5)
dobj(strikes-4, match-6)
cc(match-6, and-7)
dobj(strikes-4, lights-8)
conj:and(match-6, lights-8)
nmod:poss(cigar-10, his-9)
dep(lights-8, cigar-10)

(ROOT
  (S
    (NP (DT The) (NN light))
    (VP (VBZ shows)
      (NP
        (NP (DT a) (JJ little) (JJ white) (NN scar))
        (PP (IN near)
          (NP (PRP$ his) (JJ right) (NN eyebrow)))))
    (. .)))

det(light-2, The-1)
nsubj(shows-3, light-2)
root(ROOT-0, shows-3)
det(scar-7, a-4)
amod(scar-7, little-5)
amod(scar-7, white-6)
dobj(shows-3, scar-7)
case(eyebrow-11, near-8)
nmod:poss(eyebrow-11, his-9)
amod(eyebrow-11, right-10)
nmod:near(scar-7, eyebrow-11)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ wears)
      (NP (DT a) (JJ large) (NN diamond) (NN pin))
      (PP (IN on)
        (NP (PRP$ his) (NN scarf))))
    (. .)))

nsubj(wears-2, He-1)
root(ROOT-0, wears-2)
det(pin-6, a-3)
amod(pin-6, large-4)
compound(pin-6, diamond-5)
dobj(wears-2, pin-6)
case(scarf-9, on-7)
nmod:poss(scarf-9, his-8)
nmod:on(wears-2, scarf-9)

(ROOT
  (S
    (NP (NNP Bob))
    (: :)
    (S
      (ADVP
        (NP (CD Twenty) (NNS years))
        (RB ago))
      (NP (NN tonight))
      (NP (PRP I))
      (VP (VBD had)
        (NP
          (NP (NN dinner))
          (PP (IN in)
            (NP
              (NP (DT the) (NN restaurant))
              (PP (IN with)
                (NP
                  (NP (NNP Jimmy) (NNP Wells))
                  (, ,)
                  (NP (PRP$ my) (JJS best) (NN chum))
                  (CC and)
                  (NP (DT the) (JJS finest) (NN chap)))))))
        (PP (IN in)
          (NP (DT the) (NN world)))))
    (. .)))

dep(had-8, Bob-1)
nummod(years-4, Twenty-3)
nmod:npmod(ago-5, years-4)
advmod(had-8, ago-5)
nsubj(had-8, tonight-6)
nsubj(had-8, I-7)
root(ROOT-0, had-8)
dobj(had-8, dinner-9)
case(restaurant-12, in-10)
det(restaurant-12, the-11)
nmod:in(dinner-9, restaurant-12)
case(Wells-15, with-13)
compound(Wells-15, Jimmy-14)
nmod:with(restaurant-12, Wells-15)
nmod:poss(chum-19, my-17)
amod(chum-19, best-18)
nmod:with(restaurant-12, chum-19)
conj:and(Wells-15, chum-19)
cc(Wells-15, and-20)
det(chap-23, the-21)
amod(chap-23, finest-22)
nmod:with(restaurant-12, chap-23)
conj:and(Wells-15, chap-23)
case(world-26, in-24)
det(world-26, the-25)
nmod:in(had-8, world-26)

(ROOT
  (S
    (NP (PRP He)
      (CC and)
      (PRP I))
    (VP (VBD grew)
      (ADVP (RB up) (RB right) (RB here))
      (PP (IN in)
        (NP (NNP New) (NNP York)))
      (, ,)
      (ADVP (RB just))
      (PP (IN like)
        (NP (CD two) (NNS brothers))))
    (. .)))

nsubj(grew-4, He-1)
cc(He-1, and-2)
conj:and(He-1, I-3)
nsubj(grew-4, I-3)
root(ROOT-0, grew-4)
advmod(here-7, up-5)
advmod(here-7, right-6)
advmod(grew-4, here-7)
case(York-10, in-8)
compound(York-10, New-9)
nmod:in(grew-4, York-10)
advmod(brothers-15, just-12)
case(brothers-15, like-13)
nummod(brothers-15, two-14)
nmod:like(grew-4, brothers-15)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB still))
      (VP (VBP remember)
        (NP (DT that) (NN dayK) (NN Narrator))))
    (: :)
    (S
      (ADVP
        (NP (CD Twenty) (NNS years))
        (RB ago))
      (, ,)
      (NP
        (NP (JJ young) (NNP Bob))
        (CC and)
        (NP (NNP Jimmy)))
      (VP (VBP are)
        (VP (VBG talking)
          (PP (IN at)
            (NP (NNP Big) (NNP Joe) (NNP Bradys) (NN restaurant))))))
    (. .)))

nsubj(remember-3, I-1)
advmod(remember-3, still-2)
root(ROOT-0, remember-3)
det(Narrator-6, that-4)
compound(Narrator-6, dayK-5)
dobj(remember-3, Narrator-6)
nummod(years-9, Twenty-8)
nmod:npmod(ago-10, years-9)
advmod(talking-17, ago-10)
amod(Bob-13, young-12)
nsubj(talking-17, Bob-13)
cc(Bob-13, and-14)
conj:and(Bob-13, Jimmy-15)
nsubj(talking-17, Jimmy-15)
aux(talking-17, are-16)
parataxis(remember-3, talking-17)
case(restaurant-22, at-18)
compound(restaurant-22, Big-19)
compound(restaurant-22, Joe-20)
compound(restaurant-22, Bradys-21)
nmod:at(talking-17, restaurant-22)

(ROOT
  (NP
    (NP (NNP Young) (NNP Bob))
    (: :)
    (SQ (VBP Are)
      (NP (PRP you))
      (VP (VBG sure)
        (S
          (NP (PRP you))
          (ADJP (JJ dont))
          (S
            (VP (VBP want)
              (S
                (VP (TO to)
                  (VP (VB go)
                    (ADVP (NN west))
                    (PP (IN with)
                      (NP
                        (NP (PRP me))
                        (, ,)
                        (NP (NNP Jimmy)))))))))))
      (. ?))))

compound(Bob-2, Young-1)
root(ROOT-0, Bob-2)
aux(sure-6, Are-4)
nsubj(sure-6, you-5)
parataxis(Bob-2, sure-6)
nsubj(want-9, you-7)
nsubj(go-11, you-7)
dep(want-9, dont-8)
xcomp(sure-6, want-9)
mark(go-11, to-10)
xcomp(want-9, go-11)
advmod(go-11, west-12)
case(me-14, with-13)
nmod:with(go-11, me-14)
appos(me-14, Jimmy-16)

(ROOT
  (S
    (S
      (NP (NNP Im))
      (VP (VBG telling)
        (NP (PRP you))))
    (, ,)
    (NP (PRP we))
    (VP (MD can)
      (VP (VB make)
        (NP (PRP$ our) (NNS fortunes))
        (PRT (RP out))
        (ADVP (RB there))))
    (. .)))

nsubj(telling-2, Im-1)
advcl(make-7, telling-2)
dobj(telling-2, you-3)
nsubj(make-7, we-5)
aux(make-7, can-6)
root(ROOT-0, make-7)
nmod:poss(fortunes-9, our-8)
dobj(make-7, fortunes-9)
compound:prt(make-7, out-10)
advmod(make-7, there-11)

(ROOT
  (NP
    (NP (NNP Young) (NNP Jimmy))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBP guess)
        (SBAR
          (S
            (NP (NNP Ill))
            (VP (VBP stay)
              (ADVP (RB right) (RB here))
              (PP (IN in)
                (NP
                  (NP (NNP New) (NNP York))
                  (, ,)
                  (NP (NNP Bob)))))))))
    (. .)))

compound(Jimmy-2, Young-1)
root(ROOT-0, Jimmy-2)
nsubj(guess-5, I-4)
parataxis(Jimmy-2, guess-5)
nsubj(stay-7, Ill-6)
ccomp(guess-5, stay-7)
advmod(here-9, right-8)
advmod(stay-7, here-9)
case(York-12, in-10)
compound(York-12, New-11)
nmod:in(stay-7, York-12)
appos(York-12, Bob-14)

(ROOT
  (S
    (PP (TO To)
      (NP (PRP me)))
    (, ,)
    (NP (DT this))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ only) (NN place))
        (PP (IN on)
          (NP (NN earth)))))
    (. .)))

case(me-2, To-1)
nmod:to(place-8, me-2)
nsubj(place-8, this-4)
cop(place-8, is-5)
det(place-8, the-6)
amod(place-8, only-7)
root(ROOT-0, place-8)
case(earth-10, on-9)
nmod:on(place-8, earth-10)

(ROOT
  (NP
    (NP (NNP Young) (NNP Bob))
    (: :)
    (S
      (NP (NNP Ill))
      (VP (VBP miss)
        (NP (PRP you))
        (, ,)
        (ADVP (RB pal))))
    (. .)))

compound(Bob-2, Young-1)
root(ROOT-0, Bob-2)
nsubj(miss-5, Ill-4)
parataxis(Bob-2, miss-5)
dobj(miss-5, you-6)
advmod(miss-5, pal-8)

(ROOT
  (FRAG
    (NP (NNP Young) (NNP Jimmy))
    (: :)
    (S (CC And)
      (NP (NNP Ill))
      (VP (VBP miss)
        (NP (PRP you))))
    (. .)))

compound(Jimmy-2, Young-1)
root(ROOT-0, Jimmy-2)
cc(miss-6, And-4)
nsubj(miss-6, Ill-5)
parataxis(Jimmy-2, miss-6)
dobj(miss-6, you-7)

(ROOT
  (NP
    (NP (NNP Young) (NNP Bob))
    (: :)
    (NP
      (NP (NNP Say))
      (, ,)
      (SBAR
        (WHADVP (WRB why)
          (ADJP (JJ dont)))
        (S
          (NP (PRP we))
          (VP (VBP make)
            (S
              (NP (DT an) (NN appointment))
              (VP (TO to)
                (VP (VB meet)
                  (NP (DT each) (JJ other))
                  (ADVP (RB again)))))))))
    (. ?)))

compound(Bob-2, Young-1)
root(ROOT-0, Bob-2)
dep(Bob-2, Say-4)
advmod(make-9, why-6)
dep(why-6, dont-7)
nsubj(make-9, we-8)
acl:relcl(Say-4, make-9)
det(appointment-11, an-10)
dobj(make-9, appointment-11)
nsubj(meet-13, appointment-11)
mark(meet-13, to-12)
xcomp(make-9, meet-13)
det(other-15, each-14)
dobj(meet-13, other-15)
advmod(meet-13, again-16)

(ROOT
  (X
    (NP (NNP Young) (NNP Jimmy))
    (: :)
    (FRAG
      (SBAR
        (WHNP (WP What))
        (S
          (VP (VBP do)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP mean))))))))
    (. ?)))

compound(Jimmy-2, Young-1)
root(ROOT-0, Jimmy-2)
nsubj(do-5, What-4)
dep(Jimmy-2, do-5)
nsubj(mean-7, you-6)
ccomp(do-5, mean-7)

(ROOT
  (NP
    (NP (NNP Young) (NNP Bob))
    (: :)
    (S
      (S
        (NP (NNP Lets))
        (VP (VBP meet)
          (ADVP
            (ADVP (RB up) (RB again))
            (, ,)
            (ADVP
              (NP (NNS years))
              (PP (IN from)
                (ADVP
                  (ADVP (RB now))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB when) (RB well))
                    (S
                      (VP (VBP have)
                        (NP
                          (NP (PRP$ our) (NNS destinies))
                          (VP (VBN worked)
                            (PRT (RP out)))))))))))))
      (CC and)
      (S
        (NP (PRP$ our) (NNS fortunes))
        (VP (VBD made))))
    (. .)))

compound(Bob-2, Young-1)
root(ROOT-0, Bob-2)
nsubj(meet-5, Lets-4)
parataxis(Bob-2, meet-5)
advmod(again-7, up-6)
advmod(meet-5, again-7)
advmod(again-7, years-9)
case(now-11, from-10)
advcl:from(years-9, now-11)
advmod(well-14, when-13)
advmod(have-15, well-14)
advcl(now-11, have-15)
nmod:poss(destinies-17, our-16)
dobj(have-15, destinies-17)
acl(destinies-17, worked-18)
compound:prt(worked-18, out-19)
cc(meet-5, and-20)
nmod:poss(fortunes-22, our-21)
nsubj(made-23, fortunes-22)
parataxis(Bob-2, made-23)
conj:and(meet-5, made-23)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB say)
        (S
          (NP (PRP we))
          (VP (VB meet)
            (ADVP (RB again))
            (PP (IN in)
              (NP (CD twenty) (NNS years)))))))
    (. ?)))

dobj(say-4, What-1)
aux(say-4, do-2)
nsubj(say-4, you-3)
root(ROOT-0, say-4)
nsubj(meet-6, we-5)
ccomp(say-4, meet-6)
advmod(meet-6, again-7)
case(years-10, in-8)
nummod(years-10, twenty-9)
nmod:in(meet-6, years-10)

(ROOT
  (NP
    (NP (NNP Young) (NNP Jimmy))
    (: :)
    (NP
      (NP (DT No) (NN matter))
      (SBAR
        (WHNP (WP who))
        (S
          (S
            (NP (PRP we))
            (VP (VBP are)))
          (, ,)
          (CC or)
          (S
            (SBAR
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBD were)
                    (VP (VBG doing)))))
              (, ,)
              (CC or)
              (SBAR
                (WHADVP (WRB how) (RB far))
                (S
                  (NP (PRP we))
                  (VP (VBP have)
                    (S
                      (VP (TO to)
                        (VP (VB come))))))))
            (, ,)
            (NP
              (NP (CD twenty) (NNS years))
              (PP (IN from)
                (NP (RB tonight))))
            (VP (VBZ lets)
              (S
                (VP (VB meet)
                  (ADVP (RB right) (RB here))
                  (, ,)
                  (PP (IN at)
                    (NP (NNP Big) (NNP Joe) (NNP Bradys))))))))))
    (. .)))

compound(Jimmy-2, Young-1)
root(ROOT-0, Jimmy-2)
neg(matter-5, No-4)
dep(Jimmy-2, matter-5)
dep(are-8, matter-5)
ref(matter-5, who-6)
nsubj(are-8, we-7)
acl:relcl(matter-5, are-8)
cc(are-8, or-10)
nsubj(doing-13, what-11)
aux(doing-13, were-12)
advcl(lets-27, doing-13)
cc(doing-13, or-15)
advmod(far-17, how-16)
advmod(have-19, far-17)
nsubj(have-19, we-18)
nsubj(come-21, we-18)
conj:or(doing-13, have-19)
advcl(lets-27, have-19)
mark(come-21, to-20)
xcomp(have-19, come-21)
nummod(years-24, twenty-23)
nsubj(lets-27, years-24)
case(tonight-26, from-25)
nmod:from(years-24, tonight-26)
acl:relcl(matter-5, lets-27)
conj:or(are-8, lets-27)
ccomp(lets-27, meet-28)
advmod(here-30, right-29)
advmod(meet-28, here-30)
case(Bradys-35, at-32)
compound(Bradys-35, Big-33)
compound(Bradys-35, Joe-34)
nmod:at(meet-28, Bradys-35)

(ROOT
  (NP
    (NP (NNP Young) (NNP Bob))
    (: :)
    (NP
      (NP (PRP$ Its))
      (NP (DT a) (NN deal)))
    (. .)))

compound(Bob-2, Young-1)
root(ROOT-0, Bob-2)
dep(Bob-2, Its-4)
det(deal-6, a-5)
dep(Its-4, deal-6)

(ROOT
  (S
    (NP (NNP Ill))
    (VP (VB see)
      (NP (PRP you))
      (ADVP (RB then))
      (, ,)
      (NP (NN pal)))
    (. !)))

nsubj(see-2, Ill-1)
root(ROOT-0, see-2)
dobj(see-2, you-3)
advmod(see-2, then-4)
dobj(see-2, pal-6)

(ROOT
  (NP
    (NP (NNP Scene) (NNP Three) (NNP Policeman))
    (: :)
    (NP
      (NP (NNP Thats))
      (ADJP (RB very) (JJ interesting)))
    (. .)))

compound(Policeman-3, Scene-1)
compound(Policeman-3, Three-2)
root(ROOT-0, Policeman-3)
dep(Policeman-3, Thats-5)
advmod(interesting-7, very-6)
amod(Thats-5, interesting-7)

(ROOT
  (S (CC But)
    (VP (VB havent)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD heard)
            (PP (IN from)
              (NP (PRP$ your) (NN friend)))
            (ADVP (IN at) (DT all))
            (SBAR (IN since)
              (S
                (NP (PRP you))
                (ADVP (RB last))
                (VP (VBD saw)
                  (NP (PRP him)))))))))
    (. ?)))

cc(havent-2, But-1)
root(ROOT-0, havent-2)
nsubj(heard-4, you-3)
ccomp(havent-2, heard-4)
case(friend-7, from-5)
nmod:poss(friend-7, your-6)
nmod:from(heard-4, friend-7)
case(all-9, at-8)
nmod:at(heard-4, all-9)
mark(saw-13, since-10)
nsubj(saw-13, you-11)
advmod(saw-13, last-12)
advcl(heard-4, saw-13)
dobj(saw-13, him-14)

(ROOT
  (FRAG
    (NP (NNP Bob))
    (: :)
    (FRAG
      (INTJ (UH Well))
      (, ,)
      (NP (RB yes)))
    (. .)))

root(ROOT-0, Bob-1)
discourse(yes-5, Well-3)
dep(Bob-1, yes-5)

(ROOT
  (S
    (PP (IN For)
      (NP (DT a) (NN time)))
    (NP (PRP we))
    (VP (VBD wrote)
      (NP (NNS letters)))
    (. .)))

case(time-3, For-1)
det(time-3, a-2)
nmod:for(wrote-5, time-3)
nsubj(wrote-5, we-4)
root(ROOT-0, wrote-5)
dobj(wrote-5, letters-6)

(ROOT
  (S (CC But)
    (PP (IN after)
      (NP
        (NP (DT a) (NN year))
        (CC or)
        (NP (CD two))))
    (NP (PRP we))
    (VP (VBD lost)
      (NP
        (NP (NN track))
        (PP (IN of)
          (NP (DT each) (JJ other)))))
    (. .)))

cc(lost-8, But-1)
case(year-4, after-2)
det(year-4, a-3)
nmod:after(lost-8, year-4)
cc(year-4, or-5)
conj:or(year-4, two-6)
nmod:after(lost-8, two-6)
nsubj(lost-8, we-7)
root(ROOT-0, lost-8)
dobj(lost-8, track-9)
case(other-12, of-10)
det(other-12, each-11)
nmod:of(track-9, other-12)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (NNP Jimmy))
          (VP (MD will)
            (VP (VB meet)
              (NP (PRP me))
              (SBAR
                (ADVP (RB here))
                (IN if)
                (S
                  (NP (NN hes))
                  (ADJP (RB still) (JJ alive)))))))))
    (. .)))

cc(know-3, But-1)
nsubj(know-3, I-2)
root(ROOT-0, know-3)
nsubj(meet-6, Jimmy-4)
aux(meet-6, will-5)
ccomp(know-3, meet-6)
dobj(meet-6, me-7)
advmod(alive-12, here-8)
mark(alive-12, if-9)
dep(alive-12, hes-10)
advmod(alive-12, still-11)
advcl(meet-6, alive-12)

(ROOT
  (S
    (NP (NNP Hell))
    (ADVP (RB never))
    (VP (VBP forget))
    (. .)))

nsubj(forget-3, Hell-1)
neg(forget-3, never-2)
root(ROOT-0, forget-3)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD came)
        (S
          (NP (DT a) (CD thousand) (NNS miles))
          (VP (TO to)
            (VP (VB be)
              (ADVP (RB here)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD will)
        (VP (VB be)
          (ADJP (JJ worth)
            (NP (PRP it)))
          (SBAR (IN if)
            (S
              (NP (PRP$ my) (JJ old) (NN pal))
              (VP (VBZ turns)
                (PRT (RP up))))))))
    (. !)))

nsubj(came-2, I-1)
root(ROOT-0, came-2)
det(miles-5, a-3)
nummod(miles-5, thousand-4)
dobj(came-2, miles-5)
nsubj(be-7, miles-5)
mark(be-7, to-6)
xcomp(came-2, be-7)
advmod(be-7, here-8)
cc(came-2, but-10)
nsubj(worth-14, it-11)
aux(worth-14, will-12)
cop(worth-14, be-13)
conj:but(came-2, worth-14)
dep(worth-14, it-15)
mark(turns-20, if-16)
nmod:poss(pal-19, my-17)
amod(pal-19, old-18)
nsubj(turns-20, pal-19)
advcl(worth-14, turns-20)
compound:prt(turns-20, up-21)

(ROOT
  (FRAG
    (NP (NNP Narrator))
    (: :)
    (S
      (NP (NNP Bob))
      (VP (VBZ takes)
        (NP (DT a) (JJ diamond-studded) (NN watch))
        (PP (IN from)
          (NP (PRP$ his) (NN pocket)))))
    (. .)))

root(ROOT-0, Narrator-1)
nsubj(takes-4, Bob-3)
parataxis(Narrator-1, takes-4)
det(watch-7, a-5)
amod(watch-7, diamond-studded-6)
dobj(takes-4, watch-7)
case(pocket-10, from-8)
nmod:poss(pocket-10, his-9)
nmod:from(takes-4, pocket-10)

(ROOT
  (NP
    (NP (NNP Bob))
    (: :)
    (NP
      (NP (PRP$ Its) (CD three) (NNS minutes))
      (PP (TO to)
        (NP (CD ten))))
    (. .)))

root(ROOT-0, Bob-1)
nmod:poss(minutes-5, Its-3)
nummod(minutes-5, three-4)
dep(Bob-1, minutes-5)
case(ten-7, to-6)
nmod:to(minutes-5, ten-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (RB exactly) (CD ten) (NN oclock))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP we))
            (VP (VBD parted)
              (ADVP (RB here)))))))
    (. .)))

nsubj(oclock-5, It-1)
cop(oclock-5, was-2)
advmod(oclock-5, exactly-3)
nummod(oclock-5, ten-4)
root(ROOT-0, oclock-5)
advmod(parted-8, when-6)
nsubj(parted-8, we-7)
acl:relcl(oclock-5, parted-8)
advmod(parted-8, here-9)

(ROOT
  (S
    (NP
      (NP (NNP Policeman))
      (: :)
      (VP (VBD Did)
        (ADVP (RB pretty) (RB well))
        (PP (IN in)
          (NP (DT the) (NNP West))))
      (, ,))
    (VP (VBP didnt)
      (NP (PRP you)))
    (. ?)))

nsubj(didnt-10, Policeman-1)
acl(Policeman-1, Did-3)
advmod(well-5, pretty-4)
advmod(Did-3, well-5)
case(West-8, in-6)
det(West-8, the-7)
nmod:in(Did-3, West-8)
root(ROOT-0, didnt-10)
dobj(didnt-10, you-11)

(ROOT
  (FRAG
    (NP (NNP Bob))
    (: :)
    (S
      (NP (PRP You))
      (VP (VBD bet)))
    (. !)))

root(ROOT-0, Bob-1)
nsubj(bet-4, You-3)
parataxis(Bob-1, bet-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hope)
      (SBAR
        (S
          (NP (NNP Jimmy))
          (VP (VBZ has)
            (VP (VBN done)
              (ADVP (DT half) (IN as) (RB well)))))))
    (. .)))

nsubj(hope-2, I-1)
root(ROOT-0, hope-2)
nsubj(done-5, Jimmy-3)
aux(done-5, has-4)
ccomp(hope-2, done-5)
dep(well-8, half-6)
case(well-8, as-7)
advmod(done-5, well-8)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ is)
      (ADJP (RB too) (JJ honest))
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (DT a) (NN fortune))))))
    (. .)))

nsubj(honest-4, He-1)
nsubj(make-6, He-1)
cop(honest-4, is-2)
advmod(honest-4, too-3)
root(ROOT-0, honest-4)
mark(make-6, to-5)
xcomp(honest-4, make-6)
det(fortune-8, a-7)
dobj(make-6, fortune-8)

(ROOT
  (FRAG
    (NP (NNP Policeman))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB go))))))
    (. .)))

root(ROOT-0, Policeman-1)
nsubj(have-4, I-3)
nsubj(go-6, I-3)
parataxis(Policeman-1, have-4)
mark(go-6, to-5)
xcomp(have-4, go-6)

(ROOT
  (S
    (ADVP (RB Hope))
    (NP (PRP$ your) (NN friend))
    (VP (VBZ comes)
      (PP (IN around)
        (NP (DT all) (NN right))))
    (. .)))

advmod(comes-4, Hope-1)
nmod:poss(friend-3, your-2)
nsubj(comes-4, friend-3)
root(ROOT-0, comes-4)
case(right-7, around-5)
det(right-7, all-6)
nmod:around(comes-4, right-7)

(ROOT
  (SQ (VBP Are)
    (NP (PRP you))
    (VP (VBG going)
      (S
        (VP (TO to)
          (VP (VB wait)
            (PP (IN until)
              (NP (CD ten) (NN oclock)))))))
    (. ?)))

aux(going-3, Are-1)
nsubj(going-3, you-2)
nsubj(wait-5, you-2)
root(ROOT-0, going-3)
mark(wait-5, to-4)
xcomp(going-3, wait-5)
case(oclock-8, until-6)
nummod(oclock-8, ten-7)
nmod:until(wait-5, oclock-8)

(ROOT
  (S
    (NP (NNP Ill))
    (VP (VBP wait)
      (PP (IN for)
        (NP (PRP him)))
      (PP
        (ADVP (IN at) (JJS least))
        (IN until)
        (NP (NN ten-thirty)))
      (: --)
      (NP (RB maybe) (JJR longer)))
    (. !)))

nsubj(wait-2, Ill-1)
root(ROOT-0, wait-2)
case(him-4, for-3)
nmod:for(wait-2, him-4)
advmod(ten-thirty-8, at-5)
mwe(at-5, least-6)
case(ten-thirty-8, until-7)
nmod:until(wait-2, ten-thirty-8)
advmod(longer-11, maybe-10)
dobj(wait-2, longer-11)

(ROOT
  (FRAG
    (INTJ (UH Goodbye))
    (, ,)
    (NP (NN officer))
    (. !)))

discourse(officer-3, Goodbye-1)
root(ROOT-0, officer-3)

(ROOT
  (FRAG
    (NP (NNP Policeman))
    (: :)
    (FRAG
      (INTJ (JJ Good) (NN night))
      (, ,)
      (NP (NN sir)))
    (. .)))

root(ROOT-0, Policeman-1)
amod(night-4, Good-3)
discourse(sir-6, night-4)
dep(Policeman-1, sir-6)

(ROOT
  (NP
    (NP (NNP Scene) (NNP Four) (NNP Narrator))
    (: :)
    (S
      (NP (PRP It))
      (VP (VBZ begins)
        (S
          (VP (TO to)
            (VP (VB rain))))))
    (. .)))

compound(Narrator-3, Scene-1)
compound(Narrator-3, Four-2)
root(ROOT-0, Narrator-3)
nsubj(begins-6, It-5)
nsubj(rain-8, It-5)
parataxis(Narrator-3, begins-6)
mark(rain-8, to-7)
xcomp(begins-6, rain-8)

(ROOT
  (S
    (NP (NNP Bob))
    (VP (VBZ waits) (, ,)
      (S
        (VP (VBG smoking)
          (NP (PRP$ his) (NN cigar)))))
    (. .)))

nsubj(waits-2, Bob-1)
root(ROOT-0, waits-2)
xcomp(waits-2, smoking-4)
nmod:poss(cigar-6, his-5)
dobj(smoking-4, cigar-6)

(ROOT
  (S
    (PP (IN After)
      (NP (CD twenty) (NNS minutes)))
    (, ,)
    (NP
      (NP (DT a) (JJ tall) (NN man))
      (PP (IN in)
        (NP (DT a) (JJ light) (NN overcoat))))
    (VP (VBZ crosses)
      (NP (DT the) (NN street)))
    (. .)))

case(minutes-3, After-1)
nummod(minutes-3, twenty-2)
nmod:after(crosses-12, minutes-3)
det(man-7, a-5)
amod(man-7, tall-6)
nsubj(crosses-12, man-7)
case(overcoat-11, in-8)
det(overcoat-11, a-9)
amod(overcoat-11, light-10)
nmod:in(man-7, overcoat-11)
root(ROOT-0, crosses-12)
det(street-14, the-13)
dobj(crosses-12, street-14)

(ROOT
  (NP
    (NP (NN Man))
    (: :)
    (SQ (VBZ Is)
      (NP
        (NP (DT that) (NN you))
        (, ,)
        (NP (NNP Bob) (. ?))))))

root(ROOT-0, Man-1)
appos(Man-1, Is-3)
det(you-5, that-4)
nsubj(Is-3, you-5)
appos(you-5, Bob-7)

(ROOT
  (NP
    (NP (NNP Bob))
    (: :)
    (SQ (VBZ Is)
      (NP
        (NP (DT that) (NN you))
        (, ,)
        (NP (NNP Jimmy) (NNP Wells) (. ?))))))

root(ROOT-0, Bob-1)
parataxis(Bob-1, Is-3)
det(you-5, that-4)
nsubj(Is-3, you-5)
compound(Wells-8, Jimmy-7)
appos(you-5, Wells-8)

(ROOT
  (NP
    (NP (NN Man))
    (: :)
    (NP
      (NP (NNP Bless))
      (NP (PRP$ my) (NN heart)))
    (. !)))

root(ROOT-0, Man-1)
dep(Man-1, Bless-3)
nmod:poss(heart-5, my-4)
dep(Bless-3, heart-5)

(ROOT
  (FRAG
    (NP
      (NP (PRP$ Its) (NNP Bob))
      (, ,)
      (ADJP (JJ sure)
        (PP (IN as)
          (NP (NN fate)))))
    (. .)))

nmod:poss(Bob-2, Its-1)
root(ROOT-0, Bob-2)
amod(Bob-2, sure-4)
case(fate-6, as-5)
nmod:as(sure-4, fate-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (NP (JJ certain) (NN Id)
        (S
          (VP (VB find)
            (NP (PRP you))
            (ADVP (RB here))
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (VBD were)
                  (ADVP (RB still))
                  (ADJP (JJ alive)))))))))
    (. .)))

nsubj(Id-4, I-1)
cop(Id-4, was-2)
amod(Id-4, certain-3)
root(ROOT-0, Id-4)
dep(Id-4, find-5)
dobj(find-5, you-6)
advmod(find-5, here-7)
mark(alive-12, if-8)
nsubj(alive-12, you-9)
cop(alive-12, were-10)
advmod(alive-12, still-11)
advcl(find-5, alive-12)

(ROOT
  (INTJ
    (INTJ (UH Well) (, ,) (UH well))
    (, ,)
    (INTJ (UH well) (. !))))

root(ROOT-0, Well-1)
dep(Well-1, well-3)
discourse(Well-1, well-5)

(ROOT
  (S
    (S
      (NP (DT The) (NNS restaurants))
      (VP (VBN gone)))
    (, ,)
    (CC or)
    (S
      (NP (PRP we))
      (VP (MD could)
        (VP (VB have)
          (NP (DT another) (NN dinner))
          (ADVP (RB here)))))
    (. .)))

det(restaurants-2, The-1)
nsubj(gone-3, restaurants-2)
root(ROOT-0, gone-3)
cc(gone-3, or-5)
nsubj(have-8, we-6)
aux(have-8, could-7)
conj:or(gone-3, have-8)
det(dinner-10, another-9)
dobj(have-8, dinner-10)
advmod(have-8, here-11)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBD was)
      (NP (DT the)
        (ADJP (NNP West) (, ,) (JJ old))
        (NN man)))
    (. ?)))

advmod(was-2, How-1)
root(ROOT-0, was-2)
det(man-7, the-3)
amod(old-6, West-4)
amod(man-7, old-6)
nsubj(was-2, man-7)

(ROOT
  (FRAG
    (NP (NNP Bob))
    (: :)
    (S
      (NP (PRP It))
      (VP (VBZ has)
        (VP (VBN given)
          (NP (PRP me))
          (NP
            (NP (DT all))
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBD wanted))))))))
    (. .)))

root(ROOT-0, Bob-1)
nsubj(given-5, It-3)
aux(given-5, has-4)
parataxis(Bob-1, given-5)
iobj(given-5, me-6)
dobj(given-5, all-7)
nsubj(wanted-9, I-8)
acl:relcl(all-7, wanted-9)

(ROOT
  (S
    (NP (NNP Youve))
    (VP (VBD changed)
      (NP
        (NP (DT a) (NN lot))
        (, ,)
        (NP (NNP Jimmy))))
    (. .)))

nsubj(changed-2, Youve-1)
root(ROOT-0, changed-2)
det(lot-4, a-3)
dobj(changed-2, lot-4)
appos(lot-4, Jimmy-6)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD were)
            (ADJP (RB so) (JJ tall))))))
    (. .)))

nsubj(thought-3, I-1)
neg(thought-3, never-2)
root(ROOT-0, thought-3)
nsubj(tall-7, you-4)
cop(tall-7, were-5)
advmod(tall-7, so-6)
ccomp(thought-3, tall-7)

(ROOT
  (S
    (NP (NNP Man))
    (: :)
    (S
      (INTJ (UH Oh))
      (, ,)
      (NP (PRP I))
      (VP (VBD grew)
        (SBAR
          (NP (DT a) (NN bit))
          (IN after)
          (S
            (NP (PRP I))
            (VP (VBD was)
              (NP (CD twenty)))))))
    (. .)))

dep(grew-6, Man-1)
discourse(grew-6, Oh-3)
nsubj(grew-6, I-5)
root(ROOT-0, grew-6)
det(bit-8, a-7)
dep(twenty-12, bit-8)
mark(twenty-12, after-9)
nsubj(twenty-12, I-10)
cop(twenty-12, was-11)
advcl(grew-6, twenty-12)

(ROOT
  (NP
    (NP (NNP Bob))
    (: :)
    (SQ (VBP Are)
      (NP (PRP you))
      (VP (VBG doing)
        (ADVP (RB well) (RB here))
        (PP (IN in)
          (NP
            (NP (NNP New) (NNP York))
            (, ,)
            (NP (NNP Jimmy)))))
      (. ?))))

root(ROOT-0, Bob-1)
aux(doing-5, Are-3)
nsubj(doing-5, you-4)
parataxis(Bob-1, doing-5)
advmod(here-7, well-6)
advmod(doing-5, here-7)
case(York-10, in-8)
compound(York-10, New-9)
nmod:in(doing-5, York-10)
appos(York-10, Jimmy-12)

(ROOT
  (FRAG
    (NP (NN Man))
    (: :)
    (FRAG (RB Not)
      (ADJP (JJ bad)))
    (. .)))

root(ROOT-0, Man-1)
dep(Man-1, Not-3)
dep(Not-3, bad-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP work)
      (PP (IN for)
        (NP (DT the) (NN city))))
    (. .)))

nsubj(work-2, I-1)
root(ROOT-0, work-2)
case(city-5, for-3)
det(city-5, the-4)
nmod:for(work-2, city-5)

(ROOT
  (S
    (PP (VBN Come)
      (PP (IN on)))
    (, ,)
    (NP (NNP Bob) (, ,))
    (VP (VBZ lets)
      (VP (VB find)
        (NP (DT a) (NN place)
          (S
            (VP (TO to)
              (VP (VB talk)
                (PP (IN about)
                  (NP (JJ old) (NNS times)))))))))
    (. .)))

case(on-2, Come-1)
advcl:come(lets-6, on-2)
nsubj(lets-6, Bob-4)
root(ROOT-0, lets-6)
xcomp(lets-6, find-7)
det(place-9, a-8)
dobj(find-7, place-9)
mark(talk-11, to-10)
acl(place-9, talk-11)
case(times-14, about-12)
amod(times-14, old-13)
nmod:about(talk-11, times-14)

(ROOT
  (FRAG
    (NP (NNP Narrator))
    (: :)
    (S
      (NP (DT The) (CD two) (NNS men))
      (VP (VBP walk)
        (PRT (RP up))
        (NP
          (NP (DT the) (NN street))
          (, ,)
          (NP
            (NP (NN arm))
            (PP (IN in)
              (NP (NN arm)))))))
    (. .)))

root(ROOT-0, Narrator-1)
det(men-5, The-3)
nummod(men-5, two-4)
nsubj(walk-6, men-5)
parataxis(Narrator-1, walk-6)
compound:prt(walk-6, up-7)
det(street-9, the-8)
dobj(walk-6, street-9)
appos(street-9, arm-11)
case(arm-13, in-12)
nmod:in(arm-11, arm-13)

(ROOT
  (S
    (NP (NNP Bob))
    (VP (VBZ tells)
      (NP (PRP$ his) (NN friend))
      (NP
        (NP (DT all))
        (PP (IN about)
          (NP (PRP$ his) (NN career)))))
    (. .)))

nsubj(tells-2, Bob-1)
root(ROOT-0, tells-2)
nmod:poss(friend-4, his-3)
dep(tells-2, friend-4)
dobj(tells-2, all-5)
case(career-8, about-6)
nmod:poss(career-8, his-7)
nmod:about(all-5, career-8)

(ROOT
  (S
    (NP (DT The) (JJ other) (NN man))
    (VP (VBZ listens)
      (PP (IN with)
        (NP (NN interest))))
    (. .)))

det(man-3, The-1)
amod(man-3, other-2)
nsubj(listens-4, man-3)
root(ROOT-0, listens-4)
case(interest-6, with-5)
nmod:with(listens-4, interest-6)

(ROOT
  (S
    (ADVP (RB Soon))
    (NP (PRP they))
    (VP (VBP pass)
      (NP (DT a) (JJ brightly-lit) (NN store)))
    (. .)))

advmod(pass-3, Soon-1)
nsubj(pass-3, they-2)
root(ROOT-0, pass-3)
det(store-6, a-4)
amod(store-6, brightly-lit-5)
dobj(pass-3, store-6)

(ROOT
  (S
    (PP (IN Under)
      (NP (DT the) (NNS lights)))
    (, ,)
    (NP (DT the) (CD two) (NNS men))
    (VP (VBP take)
      (NP (DT a) (JJ good) (NN look))
      (PP (IN at)
        (NP (DT each) (JJ other))))
    (. .)))

case(lights-3, Under-1)
det(lights-3, the-2)
nmod:under(take-8, lights-3)
det(men-7, the-5)
nummod(men-7, two-6)
nsubj(take-8, men-7)
root(ROOT-0, take-8)
det(look-11, a-9)
amod(look-11, good-10)
dobj(take-8, look-11)
case(other-14, at-12)
det(other-14, each-13)
nmod:at(take-8, other-14)

(ROOT
  (FRAG
    (NP (NNP Bob))
    (: :)
    (S
      (VP (VB Hold)
        (PRT (RP on))))
    (. !)))

root(ROOT-0, Bob-1)
parataxis(Bob-1, Hold-3)
compound:prt(Hold-3, on-4)

(ROOT
  (NP (NNP Youre)
    (CC not)
    (NNP Jimmy) (NNP Wells) (. !)))

compound(Wells-4, Youre-1)
cc(Youre-1, not-2)
conj:not(Youre-1, Jimmy-3)
compound(Wells-4, Jimmy-3)
root(ROOT-0, Wells-4)

(ROOT
  (S
    (NP (CD Twenty) (NNS years))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ long) (NN time))
        (, ,)
        (CC but)
        (NP
          (NP (PRP$ its)
            (ADJP (RB not) (RB long) (JJ enough)
              (S
                (VP (TO to)
                  (VP (VB turn)
                    (NP (DT a) (NNS mans))))))
            (NNS eyes))
          (PP (IN from)
            (NP
              (NP (JJ brown))
              (PP (TO to)
                (NP (NN blue))))))))
    (. !)))

nummod(years-2, Twenty-1)
nsubj(time-6, years-2)
cop(time-6, is-3)
det(time-6, a-4)
amod(time-6, long-5)
root(ROOT-0, time-6)
cc(time-6, but-8)
nmod:poss(eyes-17, its-9)
neg(enough-12, not-10)
advmod(enough-12, long-11)
amod(eyes-17, enough-12)
mark(turn-14, to-13)
xcomp(enough-12, turn-14)
det(mans-16, a-15)
dobj(turn-14, mans-16)
conj:but(time-6, eyes-17)
case(brown-19, from-18)
nmod:from(eyes-17, brown-19)
case(blue-21, to-20)
nmod:to(brown-19, blue-21)

(ROOT
  (FRAG
    (NP (NN Man))
    (: :)
    (S
      (NP (PRP It))
      (VP (MD can)
        (VP (VB be)
          (ADJP (JJ long) (RB enough)
            (S
              (VP (TO to)
                (VP (VB turn)
                  (NP (DT a) (JJ good) (NN man))
                  (PP (IN into)
                    (NP (DT a) (JJ bad) (NN one))))))))))
    (. .)))

root(ROOT-0, Man-1)
nsubj(long-6, It-3)
nsubj(turn-9, It-3)
aux(long-6, can-4)
cop(long-6, be-5)
appos(Man-1, long-6)
advmod(long-6, enough-7)
mark(turn-9, to-8)
xcomp(long-6, turn-9)
det(man-12, a-10)
amod(man-12, good-11)
dobj(turn-9, man-12)
case(one-16, into-13)
det(one-16, a-14)
amod(one-16, bad-15)
nmod:into(turn-9, one-16)

(ROOT
  (S
    (VP (VB Youve)
      (VP (VBN been)
        (PP (IN under)
          (NP (NN arrest)))
        (PP (IN for)
          (NP (DT the) (JJ past) (CD ten) (NNS minutes)))))
    (, ,)
    (NP (NNP Silky) (NNP Bob))
    (. .)))

root(ROOT-0, Youve-1)
cop(arrest-4, been-2)
case(arrest-4, under-3)
dep(Youve-1, arrest-4)
case(minutes-9, for-5)
det(minutes-9, the-6)
amod(minutes-9, past-7)
nummod(minutes-9, ten-8)
nmod:for(arrest-4, minutes-9)
compound(Bob-12, Silky-11)
dep(Youve-1, Bob-12)

(ROOT
  (S
    (NP (DT The) (NNP Chicago) (NN police) (NN department))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD might)
            (VP (VB come)
              (PP (TO to)
                (NP (NNP New) (NNP York))))))))
    (. .)))

det(department-4, The-1)
compound(department-4, Chicago-2)
compound(department-4, police-3)
nsubj(thought-5, department-4)
root(ROOT-0, thought-5)
nsubj(come-8, you-6)
aux(come-8, might-7)
ccomp(thought-5, come-8)
case(York-11, to-9)
compound(York-11, New-10)
nmod:to(come-8, York-11)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP have)
      (S
        (NP (DT some) (NNS questions))
        (VP (TO to)
          (VP (VB ask)
            (NP (PRP you))))))
    (. .)))

nsubj(have-2, They-1)
root(ROOT-0, have-2)
det(questions-4, some-3)
dobj(have-2, questions-4)
mark(ask-6, to-5)
ccomp(have-2, ask-6)
dobj(ask-6, you-7)

(ROOT
  (NP
    (NP (NNP Bob))
    (PRN (-LRB- -LRB-)
      (NP (NNP sighs))
      (-RRB- -RRB-))
    (: :)
    (NP
      (NP (NNP Ill))
      (VP (VBN come)
        (ADVP (RB quietly))))
    (. .)))

root(ROOT-0, Bob-1)
appos(Bob-1, sighs-3)
dep(Bob-1, Ill-6)
acl(Ill-6, come-7)
advmod(come-7, quietly-8)

(ROOT
  (SBARQ (CC But)
    (WHADVP (WRB how))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB know)
        (SBAR
          (WHADVP (WRB where))
          (S
            (VP (TO to)
              (VP (VB find)
                (NP (PRP me))))))))
    (. ?)))

cc(know-5, But-1)
advmod(know-5, how-2)
aux(know-5, did-3)
nsubj(know-5, you-4)
nsubj(find-8, you-4)
root(ROOT-0, know-5)
advmod(find-8, where-6)
mark(find-8, to-7)
xcomp(know-5, find-8)
dobj(find-8, me-9)

(ROOT
  (NP
    (NP (NN Man))
    (: :)
    (NP
      (NP (NNP Heres))
      (NP
        (NP (DT a) (NN note))
        (PP (IN for)
          (NP (PRP you)))))
    (. .)))

root(ROOT-0, Man-1)
dep(Man-1, Heres-3)
det(note-5, a-4)
dep(Heres-3, note-5)
case(you-7, for-6)
nmod:for(note-5, you-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB read)
        (NP (PRP it))
        (SBAR (IN before)
          (S
            (NP (PRP I))
            (VP (VBP take)
              (NP (PRP you))
              (PP (TO to)
                (NP (DT the) (NN police) (NN station))))))))
    (. .)))

nsubj(read-3, You-1)
aux(read-3, can-2)
root(ROOT-0, read-3)
dobj(read-3, it-4)
mark(take-7, before-5)
nsubj(take-7, I-6)
advcl(read-3, take-7)
dobj(take-7, you-8)
case(station-12, to-9)
det(station-12, the-10)
compound(station-12, police-11)
nmod:to(take-7, station-12)

(ROOT
  (NP
    (NP (PRP$ Its))
    (PP (IN from)
      (NP (NNP Patrolman) (NNP Wells)))
    (. .)))

root(ROOT-0, Its-1)
case(Wells-4, from-2)
compound(Wells-4, Patrolman-3)
nmod:from(Its-1, Wells-4)

(ROOT
  (FRAG
    (NP (NNP Narrator))
    (: :)
    (S
      (NP (NNP Bob))
      (VP (VBZ reads)
        (NP (DT the) (NN note))))
    (. .)))

root(ROOT-0, Narrator-1)
nsubj(reads-4, Bob-3)
parataxis(Narrator-1, reads-4)
det(note-6, the-5)
dobj(reads-4, note-6)

(ROOT
  (NP
    (NP (NNP Policeman))
    (: :)
    (S
      (NP (NNP Dear) (NNP Bob))
      (, ,)
      (NP (PRP I))
      (VP (VBD was)
        (PP (IN at)
          (NP
            (NP (DT the) (VBN appointed) (NN place))
            (PP (IN on)
              (NP (NN time)))))))
    (. .)))

root(ROOT-0, Policeman-1)
compound(Bob-4, Dear-3)
nsubj(place-11, Bob-4)
nsubj(place-11, I-6)
cop(place-11, was-7)
case(place-11, at-8)
det(place-11, the-9)
amod(place-11, appointed-10)
parataxis(Policeman-1, place-11)
case(time-13, on-12)
nmod:on(place-11, time-13)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBD struck)
          (NP (DT the) (NN match)
            (S
              (VP (TO to)
                (VP (VB light)
                  (NP (PRP$ your) (NN cigar)))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBD recognized)
      (NP (PRP$ your) (NN face))
      (PP (IN from)
        (NP
          (NP (DT a) (JJ wanted) (NN poster))
          (VP (VBN sent)
            (PP (IN from)
              (NP (NNP Chicago)))))))
    (. .)))

advmod(struck-3, When-1)
nsubj(struck-3, you-2)
advcl(recognized-12, struck-3)
det(match-5, the-4)
dobj(struck-3, match-5)
mark(light-7, to-6)
acl(match-5, light-7)
nmod:poss(cigar-9, your-8)
dobj(light-7, cigar-9)
nsubj(recognized-12, I-11)
root(ROOT-0, recognized-12)
nmod:poss(face-14, your-13)
dobj(recognized-12, face-14)
case(poster-18, from-15)
det(poster-18, a-16)
amod(poster-18, wanted-17)
nmod:from(recognized-12, poster-18)
acl(poster-18, sent-19)
case(Chicago-21, from-20)
nmod:from(sent-19, Chicago-21)

(ROOT
  (S
    (S
      (ADVP (RB Somehow))
      (NP (PRP I))
      (VP (VBP couldnt)
        (S
          (VP (VB arrest)
            (S
              (NP (PRP you))
              (NP (PRP myself)))))))
    (, ,) (IN so)
    (S
      (NP (PRP I))
      (VP
        (VP (VBD went)
          (PRT (RP around)))
        (CC and)
        (VP (VBD got)
          (NP (DT a) (JJ plainclothes) (NN detective))
          (S
            (VP (TO to)
              (VP (VB do)
                (NP (DT the) (NN job))))))))
    (. .)))

advmod(couldnt-3, Somehow-1)
nsubj(couldnt-3, I-2)
root(ROOT-0, couldnt-3)
ccomp(couldnt-3, arrest-4)
nsubj(myself-6, you-5)
xcomp(arrest-4, myself-6)
dep(couldnt-3, so-8)
nsubj(went-10, I-9)
nsubj(got-13, I-9)
parataxis(couldnt-3, went-10)
compound:prt(went-10, around-11)
cc(went-10, and-12)
parataxis(couldnt-3, got-13)
conj:and(went-10, got-13)
det(detective-16, a-14)
amod(detective-16, plainclothes-15)
dobj(got-13, detective-16)
mark(do-18, to-17)
advcl(got-13, do-18)
det(job-20, the-19)
dobj(do-18, job-20)

(ROOT
  (S
    (NP
      (NP (NNP Signed))
      (, ,)
      (NP
        (NP (PRP$ your) (NN friend))
        (PP (IN after)
          (NP (CD twenty) (NNS years))))
      (, ,))
    (VP (VBZ Jimmy))
    (. .)))

nsubj(Jimmy-9, Signed-1)
nmod:poss(friend-4, your-3)
appos(Signed-1, friend-4)
case(years-7, after-5)
nummod(years-7, twenty-6)
nmod:after(friend-4, years-7)
root(ROOT-0, Jimmy-9)

(ROOT
  (PRN (: --)
    (PP (IN from)
      (NP
        (NP (NNP Mystery) (NNP Plays))
        (: :)
        (NP
          (NP
            (QP (CD 8) (CD Plays)))
          (PP (IN for)
            (NP
              (NP (DT the) (NNP Classroom))
              (PP (VBN Based)
                (PP (IN on)
                  (NP
                    (NP (NNP Stories))
                    (PP (IN by)
                      (NP (NNP Famous) (NNP Writers))))))))
          (, ,)
          (VP (VBN adapted)
            (PP (IN by)
              (NP (NNP Tom) (NNP Conklin))))))
      (. .))))

case(Plays-4, from-2)
compound(Plays-4, Mystery-3)
root(ROOT-0, Plays-4)
compound(Plays-7, 8-6)
dep(Plays-4, Plays-7)
case(Classroom-10, for-8)
det(Classroom-10, the-9)
nmod:for(Plays-7, Classroom-10)
case(Stories-13, Based-11)
mwe(Based-11, on-12)
nmod:based_on(Classroom-10, Stories-13)
case(Writers-16, by-14)
compound(Writers-16, Famous-15)
nmod:by(Stories-13, Writers-16)
acl(Plays-7, adapted-18)
case(Conklin-21, by-19)
compound(Conklin-21, Tom-20)
nmod:by(adapted-18, Conklin-21)

(ROOT
  (FRAG
    (NP (NN Copyright))
    (. ?)))

root(ROOT-0, Copyright-1)

(ROOT
  (NP
    (NP (CD 1997))
    (PP (IN by)
      (NP (NNP Tom) (NNP Conklin)))
    (. .)))

root(ROOT-0, 1997-1)
case(Conklin-4, by-2)
compound(Conklin-4, Tom-3)
nmod:by(1997-1, Conklin-4)

(ROOT
  (S
    (VP (VBN Reprinted)
      (PP (IN by)
        (NP
          (NP (NN permission))
          (PP (IN of)
            (NP (NNP Scholastic) (NNP Inc.))))))
    (. .)))

root(ROOT-0, Reprinted-1)
case(permission-3, by-2)
nmod:by(Reprinted-1, permission-3)
case(Inc.-6, of-4)
compound(Inc.-6, Scholastic-5)
nmod:of(permission-3, Inc.-6)

