(ROOT
  (S
    (NP (NNP Unit) (CD 4))
    (VP (VBZ Tips)
      (PP (IN for)
        (S
          (VP (VBG Improving)
            (NP (PRP$ Your) (NN Memory))))))
    (. .)))

nsubj(Tips-3, Unit-1)
nummod(Unit-1, 4-2)
root(ROOT-0, Tips-3)
mark(Improving-5, for-4)
advcl(Tips-3, Improving-5)
nmod:poss(Memory-7, Your-6)
dobj(Improving-5, Memory-7)

(ROOT
  (S
    (NP (NNP Study))
    (VP (VBZ shows)
      (SBAR (IN that)
        (S
          (NP
            (NP (JJS most) (NNS problems))
            (PP (IN with)
              (NP (NN memory))))
          (VP (VB grow)
            (PRT (RP out))
            (PP (IN of)
              (NP (JJ bad) (NNS habits)))))))
    (. .)))

nsubj(shows-2, Study-1)
root(ROOT-0, shows-2)
mark(grow-8, that-3)
amod(problems-5, most-4)
nsubj(grow-8, problems-5)
case(memory-7, with-6)
nmod:with(problems-5, memory-7)
ccomp(shows-2, grow-8)
compound:prt(grow-8, out-9)
case(habits-12, of-10)
amod(habits-12, bad-11)
nmod:of(grow-8, habits-12)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP develop)
          (NP
            (NP (DT the) (NN habit))
            (PP (IN of)
              (S (RB not)
                (VP (VBG making)
                  (NP (DT an) (NN effort)
                    (S
                      (VP (TO to)
                        (VP (VB remember)
                          (NP (NNS things)))))))))))))
    (, ,)
    (NP (PRP$ your) (NN ability)
      (S
        (VP (TO to)
          (VP (VB memorize)))))
    (VP (MD will)
      (VP (VB begin)
        (S
          (VP (TO to)
            (VP (VB decrease))))))
    (. .)))

case(example-2, For-1)
nmod:for(begin-23, example-2)
mark(develop-6, if-4)
nsubj(develop-6, you-5)
advcl(begin-23, develop-6)
det(habit-8, the-7)
dobj(develop-6, habit-8)
mark(making-11, of-9)
neg(making-11, not-10)
acl(habit-8, making-11)
det(effort-13, an-12)
dobj(making-11, effort-13)
mark(remember-15, to-14)
acl(effort-13, remember-15)
dobj(remember-15, things-16)
nmod:poss(ability-19, your-18)
nsubj(begin-23, ability-19)
nsubj(decrease-25, ability-19)
mark(memorize-21, to-20)
acl(ability-19, memorize-21)
aux(begin-23, will-22)
root(ROOT-0, begin-23)
mark(decrease-25, to-24)
xcomp(begin-23, decrease-25)

(ROOT
  (S
    (PP (IN On)
      (NP (DT the) (JJ other) (NN hand)))
    (, ,)
    (NP (DT a) (JJ good) (NN memory))
    (VP (MD can)
      (VP (VB be)
        (NP
          (NP (DT the) (NN result))
          (PP (IN of)
            (NP (JJ good) (NNS habits))))))
    (. .)))

case(hand-4, On-1)
det(hand-4, the-2)
amod(hand-4, other-3)
nmod:on(result-12, hand-4)
det(memory-8, a-6)
amod(memory-8, good-7)
nsubj(result-12, memory-8)
aux(result-12, can-9)
cop(result-12, be-10)
det(result-12, the-11)
root(ROOT-0, result-12)
case(habits-15, of-13)
amod(habits-15, good-14)
nmod:of(result-12, habits-15)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB improve)
          (NP (PRP$ your) (NN memory)))))
    (, ,)
    (NP (PRP you))
    (VP (MD should)
      (VP (VB change)
        (NP
          (NP (DT the) (NN way))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP deal)
                (PP (IN with)
                  (NP (NN information)))))))))
    (. .)))

mark(improve-2, To-1)
advcl(change-8, improve-2)
nmod:poss(memory-4, your-3)
dobj(improve-2, memory-4)
nsubj(change-8, you-6)
aux(change-8, should-7)
root(ROOT-0, change-8)
det(way-10, the-9)
dobj(change-8, way-10)
nsubj(deal-12, you-11)
acl:relcl(way-10, deal-12)
case(information-14, with-13)
nmod:with(deal-12, information-14)

(ROOT
  (S
    (NP (RB Here))
    (VP (VBP are)
      (NP
        (NP (DT some) (NNS tips))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD may)
              (VP (VB assist)
                (NP (PRP you))
                (PP (IN in)
                  (S
                    (VP (VBG getting)
                      (PP (IN on)
                        (NP (DT the) (JJ right) (NN track))))))))))))
    (. .)))

nsubj(tips-4, Here-1)
cop(tips-4, are-2)
det(tips-4, some-3)
root(ROOT-0, tips-4)
nsubj(assist-7, tips-4)
ref(tips-4, that-5)
aux(assist-7, may-6)
acl:relcl(tips-4, assist-7)
dobj(assist-7, you-8)
mark(getting-10, in-9)
advcl(assist-7, getting-10)
case(track-14, on-11)
det(track-14, the-12)
amod(track-14, right-13)
nmod:on(getting-10, track-14)

(ROOT
  (S
    (VP (VB Set)
      (NP (JJ realistic) (NNS goals)))
    (. .)))

root(ROOT-0, Set-1)
amod(goals-3, realistic-2)
dobj(Set-1, goals-3)

(ROOT
  (S
    (VP (VB Do) (RB not)
      (VP (VB expect)
        (S
          (VP (TO to)
            (VP (VB remember)
              (NP (NN everything)))))))
    (. .)))

aux(expect-3, Do-1)
neg(expect-3, not-2)
root(ROOT-0, expect-3)
mark(remember-5, to-4)
xcomp(expect-3, remember-5)
dobj(remember-5, everything-6)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (NP
            (NP (NN memory) (NNS problems))
            (PP (IN in)
              (NP (JJ particular) (NNS areas)))))))
    (, ,)
    (VP (VB focus)
      (PP (IN on)
        (NP (PRP them)))
      (ADVP (RB first)))
    (. .)))

mark(have-3, If-1)
nsubj(have-3, you-2)
advcl(focus-10, have-3)
compound(problems-5, memory-4)
dobj(have-3, problems-5)
case(areas-8, in-6)
amod(areas-8, particular-7)
nmod:in(problems-5, areas-8)
root(ROOT-0, focus-10)
case(them-12, on-11)
nmod:on(focus-10, them-12)
advmod(focus-10, first-13)

(ROOT
  (S
    (SBAR (IN After)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (VP (VBN achieved)
            (NP
              (NP (DT some) (NN success))
              (PP (IN in)
                (NP (DT those) (NNS areas))))))))
    (, ,)
    (VP (VB move)
      (PRT (RP on))
      (S
        (VP (TO to)
          (VP (VB others.Stay)
            (ADJP (RB mentally) (JJ active))))))
    (. .)))

mark(achieved-4, After-1)
nsubj(achieved-4, you-2)
aux(achieved-4, have-3)
advcl(move-11, achieved-4)
det(success-6, some-5)
dobj(achieved-4, success-6)
case(areas-9, in-7)
det(areas-9, those-8)
nmod:in(success-6, areas-9)
root(ROOT-0, move-11)
compound:prt(move-11, on-12)
mark(others.Stay-14, to-13)
xcomp(move-11, others.Stay-14)
advmod(active-16, mentally-15)
xcomp(others.Stay-14, active-16)

(ROOT
  (S
    (S
      (VP (VBG Exercising)
        (NP (PRP$ your) (NN mind))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS best) (NN way))
        (SBAR
          (S
            (VP (TO to)
              (VP (VB keep)
                (S
                  (NP (PRP it))
                  (ADJP (JJ sharp)))))))))
    (. .)))

csubj(way-7, Exercising-1)
nmod:poss(mind-3, your-2)
dobj(Exercising-1, mind-3)
cop(way-7, is-4)
det(way-7, the-5)
amod(way-7, best-6)
root(ROOT-0, way-7)
mark(keep-9, to-8)
acl(way-7, keep-9)
nsubj(sharp-11, it-10)
xcomp(keep-9, sharp-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP tend)
          (S
            (VP (TO to)
              (VP
                (VP (VB avoid)
                  (NP (JJ mental) (NNS challenges)))
                (CC and)
                (VP
                  (ADVP (RB always))
                  (VB choose)
                  (NP (DT the) (JJS easiest) (NNS solutions)))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD will)
      (VP (VB become)
        (ADJP (JJ difficult)
          (PP (IN for)
            (NP (PRP you))))
        (S
          (VP (TO to)
            (VP (VB depend)
              (PP (IN on)
                (NP (PRP$ your) (NN memory)
                  (S
                    (VP (TO to)
                      (VP (VB solve)
                        (S
                          (VP (VBG challenging)
                            (NP (NN problems.Cut))
                            (PRT (RP down))
                            (PP (IN on)
                              (NP (NNS activities)))))
                        (SBAR (IN that)
                          (S
                            (NP (NN dont))
                            (VP (VBP require)
                              (S
                                (NP (PRP you))
                                (VP (TO to)
                                  (VP (VB think)))))))))))))))))
    (. .)))

mark(tend-3, If-1)
nsubj(tend-3, you-2)
nsubj(avoid-5, you-2)
nsubj(choose-10, you-2)
advcl(become-17, tend-3)
mark(avoid-5, to-4)
xcomp(tend-3, avoid-5)
amod(challenges-7, mental-6)
dobj(avoid-5, challenges-7)
cc(avoid-5, and-8)
advmod(choose-10, always-9)
xcomp(tend-3, choose-10)
conj:and(avoid-5, choose-10)
det(solutions-13, the-11)
amod(solutions-13, easiest-12)
dobj(choose-10, solutions-13)
nsubj(become-17, it-15)
nsubj(depend-22, it-15)
aux(become-17, will-16)
root(ROOT-0, become-17)
xcomp(become-17, difficult-18)
case(you-20, for-19)
nmod:for(difficult-18, you-20)
mark(depend-22, to-21)
xcomp(become-17, depend-22)
case(memory-25, on-23)
nmod:poss(memory-25, your-24)
nmod:on(depend-22, memory-25)
mark(solve-27, to-26)
acl(memory-25, solve-27)
xcomp(solve-27, challenging-28)
dobj(challenging-28, problems.Cut-29)
compound:prt(challenging-28, down-30)
case(activities-32, on-31)
nmod:on(challenging-28, activities-32)
mark(require-35, that-33)
nsubj(require-35, dont-34)
ccomp(solve-27, require-35)
dobj(require-35, you-36)
nsubj(think-38, you-36)
mark(think-38, to-37)
xcomp(require-35, think-38)

(ROOT
  (S
    (NP (NNP Watching) (NNP TV))
    (VP (VBZ is)
      (NP (DT an) (NN activity))
      (SBAR (IN that)
        (S
          (NP (JJS most) (NNS people))
          (VP (VBP do)
            (ADJP (RB too) (JJ much))))))
    (. .)))

compound(TV-2, Watching-1)
nsubj(activity-5, TV-2)
cop(activity-5, is-3)
det(activity-5, an-4)
root(ROOT-0, activity-5)
mark(do-9, that-6)
amod(people-8, most-7)
nsubj(do-9, people-8)
ccomp(activity-5, do-9)
advmod(much-11, too-10)
xcomp(do-9, much-11)

(ROOT
  (S
    (NP (JJ Many) (NN TV) (NNS programs))
    (VP (VBP require)
      (NP (DT no) (JJ mental) (NN input))
      (ADVP (IN at) (DT all)))
    (. .)))

amod(programs-3, Many-1)
compound(programs-3, TV-2)
nsubj(require-4, programs-3)
root(ROOT-0, require-4)
neg(input-7, no-5)
amod(input-7, mental-6)
dobj(require-4, input-7)
case(all-9, at-8)
nmod:at(require-4, all-9)

(ROOT
  (S
    (SBAR
      (X
        (X (DT The) (JJR more))
        (NP (NN time)))
      (S
        (NP (PRP you))
        (VP (VBP spend)
          (PP (IN on)
            (NP (DT these) (NNS programs))))))
    (, ,)
    (X (DT the) (RBR more) (JJ easily))
    (NP (PRP you))
    (VP (VBP pick)
      (PRT (RP up))
      (NP
        (NP (DT the) (NN habit))
        (PP (IN of)
          (S
            (VP (VBG turning)
              (PRT (RP off))
              (NP (PRP$ your) (NN brain.Read))
              (ADVP (RBR more)))))))
    (. .)))

det(more-2, The-1)
dep(time-3, more-2)
dep(spend-5, time-3)
nsubj(spend-5, you-4)
advcl(pick-14, spend-5)
case(programs-8, on-6)
det(programs-8, these-7)
nmod:on(spend-5, programs-8)
det(easily-12, the-10)
dep(easily-12, more-11)
dep(pick-14, easily-12)
nsubj(pick-14, you-13)
root(ROOT-0, pick-14)
compound:prt(pick-14, up-15)
det(habit-17, the-16)
dobj(pick-14, habit-17)
mark(turning-19, of-18)
acl(habit-17, turning-19)
compound:prt(turning-19, off-20)
nmod:poss(brain.Read-22, your-21)
dobj(turning-19, brain.Read-22)
advmod(turning-19, more-23)

(ROOT
  (S
    (NP (NNP Reading))
    (VP (VBZ provides)
      (S
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (JJS best) (NNS ways))))
        (VP (TO to)
          (VP (VB exercise)
            (NP (PRP$ your) (NN brain))))))
    (. .)))

nsubj(provides-2, Reading-1)
root(ROOT-0, provides-2)
dobj(provides-2, one-3)
nsubj(exercise-9, one-3)
case(ways-7, of-4)
det(ways-7, the-5)
amod(ways-7, best-6)
nmod:of(one-3, ways-7)
mark(exercise-9, to-8)
xcomp(provides-2, exercise-9)
nmod:poss(brain-11, your-10)
dobj(exercise-9, brain-11)

(ROOT
  (S
    (SBAR (IN Whether)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (ADJP (JJ busy)
            (S
              (VP (VBG working)
                (CC or)
                (VBG studying)))))))
    (, ,)
    (NP (PRP you))
    (VP (MD should)
      (VP (VB spare)
        (NP (DT some) (NN time)
          (S
            (VP (TO to)
              (VP (VB read)))))))
    (. .)))

mark(busy-4, Whether-1)
nsubj(busy-4, you-2)
cop(busy-4, are-3)
advcl(spare-11, busy-4)
dep(busy-4, working-5)
cc(working-5, or-6)
dep(busy-4, studying-7)
conj:or(working-5, studying-7)
nsubj(spare-11, you-9)
aux(spare-11, should-10)
root(ROOT-0, spare-11)
det(time-13, some-12)
dobj(spare-11, time-13)
mark(read-15, to-14)
acl(time-13, read-15)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBD read))))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP
            (ADVP (RB actively))
            (VB use)
            (NP (PRP$ your) (NN memory)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB recognize)
                      (NP (NNS words)))
                    (CC and)
                    (VP (VB arrange)
                      (NP (PRP them))
                      (PP (IN into)
                        (NP
                          (NP (NNS phrases))
                          (, ,)
                          (NP (RB then) (NNS sentences))
                          (, ,)
                          (CC and)
                          (ADVP (RB then))
                          (NP (NNS ideas)))))))))))))
    (. .)))

advmod(read-3, When-1)
nsubj(read-3, you-2)
advcl(have-6, read-3)
nsubj(have-6, you-5)
nsubj(use-9, you-5)
root(ROOT-0, have-6)
mark(use-9, to-7)
advmod(use-9, actively-8)
xcomp(have-6, use-9)
nmod:poss(memory-11, your-10)
dobj(use-9, memory-11)
mark(recognize-13, to-12)
acl(memory-11, recognize-13)
dobj(recognize-13, words-14)
cc(recognize-13, and-15)
acl(memory-11, arrange-16)
conj:and(recognize-13, arrange-16)
dobj(arrange-16, them-17)
case(phrases-19, into-18)
nmod:into(arrange-16, phrases-19)
advmod(sentences-22, then-21)
nmod:into(arrange-16, sentences-22)
conj:and(phrases-19, sentences-22)
cc(phrases-19, and-24)
advmod(ideas-26, then-25)
nmod:into(arrange-16, ideas-26)
conj:and(phrases-19, ideas-26)

(ROOT
  (X
    (SBAR
      (X (DT The) (JJR more))
      (S
        (ADVP (RB often))
        (NP (PRP you))
        (VP (VBD read))))
    (, ,)
    (X (DT the) (JJR more))
    (NP
      (NP (JJ mental) (NNS workouts))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP get.Get)
            (PP (IN into)
              (NP (DT the) (NN habit))))))
      (PP (IN of)
        (S
          (VP (VBG taking)
            (NP (NNS notes))))))
    (. .)))

det(more-2, The-1)
dep(read-5, more-2)
advmod(read-5, often-3)
nsubj(read-5, you-4)
dep(workouts-10, read-5)
det(more-8, the-7)
dep(workouts-10, more-8)
amod(workouts-10, mental-9)
root(ROOT-0, workouts-10)
nsubj(get.Get-12, you-11)
acl:relcl(workouts-10, get.Get-12)
case(habit-15, into-13)
det(habit-15, the-14)
nmod:into(get.Get-12, habit-15)
mark(taking-17, of-16)
acl(workouts-10, taking-17)
dobj(taking-17, notes-18)

(ROOT
  (S
    (SBAR (IN Whether)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP
            (VP (VBG reading))
            (, ,)
            (VP (VBG studying))
            (, ,)
            (CC or)
            (VP (VBG listening)
              (PP (TO to)
                (NP (DT a) (NN speech))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ useful)
        (S
          (VP (TO to)
            (VP (VB write)
              (PRT (RP down))
              (NP
                (NP (DT the) (NN information))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (MD may)
                      (VP (VB want)
                        (S
                          (VP (TO to)
                            (VP (VB look)
                              (ADVP (RB up) (RB later)))))))))))))))
    (. .)))

mark(reading-4, Whether-1)
nsubj(reading-4, you-2)
nsubj(studying-6, you-2)
nsubj(listening-9, you-2)
aux(reading-4, are-3)
advcl(useful-16, reading-4)
conj:or(reading-4, studying-6)
advcl(useful-16, studying-6)
cc(reading-4, or-8)
conj:or(reading-4, listening-9)
advcl(useful-16, listening-9)
case(speech-12, to-10)
det(speech-12, a-11)
nmod:to(listening-9, speech-12)
nsubj(useful-16, it-14)
nsubj(write-18, it-14)
cop(useful-16, is-15)
root(ROOT-0, useful-16)
mark(write-18, to-17)
xcomp(useful-16, write-18)
compound:prt(write-18, down-19)
det(information-21, the-20)
dobj(write-18, information-21)
nsubj(want-24, you-22)
nsubj(look-26, you-22)
aux(want-24, may-23)
acl:relcl(information-21, want-24)
mark(look-26, to-25)
xcomp(want-24, look-26)
advmod(later-28, up-27)
advmod(look-26, later-28)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN process))
        (PP (IN of)
          (S
            (VP (VBG writing)
              (PRT (RP down))
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ is)
                    (VP (VBN mentioned))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (ADVP (RB actually))
      (VP (VBG organizing)
        (NP
          (NP (NN information))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (ADVP (RB often))
              (VP (VBZ helps)
                (S
                  (NP (PRP you))
                  (VP (TO to)
                    (VP (VB recall)
                      (S
                        (NP (PRP it))
                        (VP (VB better.Try)
                          (NP (NN something) (JJ unfamiliar)))))))))))))
    (. .)))

case(process-3, In-1)
det(process-3, the-2)
nmod:in(organizing-14, process-3)
mark(writing-5, of-4)
acl(process-3, writing-5)
compound:prt(writing-5, down-6)
nsubjpass(mentioned-9, what-7)
auxpass(mentioned-9, is-8)
ccomp(writing-5, mentioned-9)
nsubj(organizing-14, you-11)
aux(organizing-14, are-12)
advmod(organizing-14, actually-13)
root(ROOT-0, organizing-14)
dobj(organizing-14, information-15)
nsubj(helps-19, information-15)
ref(information-15, which-17)
advmod(helps-19, often-18)
acl:relcl(information-15, helps-19)
dobj(helps-19, you-20)
nsubj(recall-22, you-20)
mark(recall-22, to-21)
xcomp(helps-19, recall-22)
nsubj(better.Try-24, it-23)
ccomp(recall-22, better.Try-24)
dobj(better.Try-24, something-25)
amod(something-25, unfamiliar-26)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD should)
      (ADVP (RB occasionally))
      (VP
        (VP (VB try)
          (NP (JJ new) (NNS things)))
        (CC or)
        (VP (VB learn)
          (NP (NN something))
          (SBAR (IN that)
            (S
              (NP (NNS interests))
              (VP (VBD youXand) (RB not)
                (ADVP (RB just))
                (VP (VB try)
                  (S
                    (VP (TO to)
                      (VP (VB get)
                        (NP (JJ high) (NNS scores))
                        (PP (IN on)
                          (NP (NNS exams)))))))))))))
    (. .)))

nsubj(try-4, You-1)
nsubj(learn-8, You-1)
aux(try-4, should-2)
advmod(try-4, occasionally-3)
root(ROOT-0, try-4)
amod(things-6, new-5)
dobj(try-4, things-6)
cc(try-4, or-7)
conj:or(try-4, learn-8)
dobj(learn-8, something-9)
mark(youXand-12, that-10)
nsubj(youXand-12, interests-11)
ccomp(learn-8, youXand-12)
neg(youXand-12, not-13)
advmod(youXand-12, just-14)
dep(youXand-12, try-15)
mark(get-17, to-16)
xcomp(try-15, get-17)
amod(scores-19, high-18)
dobj(get-17, scores-19)
case(exams-21, on-20)
nmod:on(get-17, exams-21)

(ROOT
  (S
    (VP (VB Learn)
      (NP
        (NP (DT a) (JJ new) (NN sport))
        (, ,)
        (NP (DT a) (JJ musical) (NN instrument))
        (, ,)
        (CC or)
        (NP (DT a) (JJ new) (NN language))))
    (. .)))

root(ROOT-0, Learn-1)
det(sport-4, a-2)
amod(sport-4, new-3)
dobj(Learn-1, sport-4)
det(instrument-8, a-6)
amod(instrument-8, musical-7)
dobj(Learn-1, instrument-8)
conj:or(sport-4, instrument-8)
cc(sport-4, or-10)
det(language-13, a-11)
amod(language-13, new-12)
dobj(Learn-1, language-13)
conj:or(sport-4, language-13)

(ROOT
  (S
    (NP (PRP$ Your) (NN brain))
    (VP (MD may)
      (VP
        (VP (VB grow)
          (ADJP (JJ lazy)
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (VBP dont)
                  (VP (VB exercise)
                    (NP (PRP it))
                    (PP (IN with)
                      (NP (JJ new) (NNS activities))))))))
          (ADVP (DT every) (RB now)))
        (CC and)
        (VP (VB then.Teach)
          (NP
            (NP (NNS others))
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (VBP know))))))))
    (. .)))

nmod:poss(brain-2, Your-1)
nsubj(grow-4, brain-2)
nsubj(then.Teach-17, brain-2)
aux(grow-4, may-3)
root(ROOT-0, grow-4)
xcomp(grow-4, lazy-5)
mark(dont-8, if-6)
nsubj(dont-8, you-7)
ccomp(lazy-5, dont-8)
xcomp(dont-8, exercise-9)
dobj(exercise-9, it-10)
case(activities-13, with-11)
amod(activities-13, new-12)
nmod:with(exercise-9, activities-13)
dep(now-15, every-14)
advmod(grow-4, now-15)
cc(grow-4, and-16)
conj:and(grow-4, then.Teach-17)
dobj(then.Teach-17, others-18)
dobj(know-21, others-18)
ref(others-18, what-19)
nsubj(know-21, you-20)
acl:relcl(others-18, know-21)

(ROOT
  (S
    (NP (VBG Teaching) (NNS others))
    (VP (VBZ helps)
      (S
        (NP (PRP you))
        (VP (VB strengthen)
          (NP (PRP$ your) (NN knowledge))
          (PP (IN by)
            (S
              (VP (VBG forcing)
                (S
                  (NP (PRP you))
                  (VP (TO to)
                    (VP (VB think)
                      (PP (IN about)
                        (NP
                          (NP (DT the) (NNS reasons)
                            (CC and)
                            (NNS connections))
                          (PP (VBG concerning)
                            (NP
                              (NP (DT the) (NN information))
                              (SBAR
                                (S
                                  (NP (PRP you))
                                  (VP (VBP are)
                                    (VP (VBG sharing))))))))))))))))))
    (. .)))

amod(others-2, Teaching-1)
nsubj(helps-3, others-2)
root(ROOT-0, helps-3)
nsubj(strengthen-5, you-4)
ccomp(helps-3, strengthen-5)
nmod:poss(knowledge-7, your-6)
dobj(strengthen-5, knowledge-7)
mark(forcing-9, by-8)
advcl(strengthen-5, forcing-9)
dobj(forcing-9, you-10)
nsubj(think-12, you-10)
mark(think-12, to-11)
xcomp(forcing-9, think-12)
case(reasons-15, about-13)
det(reasons-15, the-14)
nmod:about(think-12, reasons-15)
cc(reasons-15, and-16)
nmod:about(think-12, connections-17)
conj:and(reasons-15, connections-17)
case(information-20, concerning-18)
det(information-20, the-19)
nmod:concerning(reasons-15, information-20)
nsubj(sharing-23, you-21)
aux(sharing-23, are-22)
acl:relcl(information-20, sharing-23)

(ROOT
  (S
    (NP
      (NP (JJ Many) (NNS people))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP have)
            (VP (VBN practiced)
              (NP (DT the) (NNS tips)))))))
    (ADVP (RB above))
    (VP (VBP have)
      (VP (VBN noticed)
        (NP (JJ great) (NNS improvements))
        (PP (IN in)
          (NP (PRP$ their) (NNS memories)))))
    (. .)))

amod(people-2, Many-1)
nsubj(practiced-5, people-2)
nsubj(noticed-10, people-2)
ref(people-2, who-3)
aux(practiced-5, have-4)
acl:relcl(people-2, practiced-5)
det(tips-7, the-6)
dobj(practiced-5, tips-7)
advmod(noticed-10, above-8)
aux(noticed-10, have-9)
root(ROOT-0, noticed-10)
amod(improvements-12, great-11)
dobj(noticed-10, improvements-12)
case(memories-15, in-13)
nmod:poss(memories-15, their-14)
nmod:in(noticed-10, memories-15)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (S
      (NP (NN everyone))
      (VP (VBZ is)
        (ADJP (JJ unique))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNS results))
      (VP (MD may)
        (VP (VB vary)
          (PP (IN from)
            (NP (NN person)))
          (PP (TO to)
            (NP (NN person))))))
    (. .)))

advmod(unique-5, However-1)
nsubj(unique-5, everyone-3)
cop(unique-5, is-4)
root(ROOT-0, unique-5)
cc(unique-5, and-7)
det(results-9, the-8)
nsubj(vary-11, results-9)
aux(vary-11, may-10)
conj:and(unique-5, vary-11)
case(person-13, from-12)
nmod:from(vary-11, person-13)
case(person-15, to-14)
nmod:to(vary-11, person-15)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ matters)
        (ADVP
          (ADVP (RBR more))
          (SBAR (IN than)
            (S
              (NP (DT these) (NNS tips))
              (VP (VBZ is)
                (S
                  (VP (TO to)
                    (VP (VB find)
                      (PRT (RP out))
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (VP (VBZ works)
                            (NP
                              (NP (JJS best))
                              (PP (IN for)
                                (NP (PRP you))))))))))))))))
    (. .)))

nsubj(matters-2, What-1)
root(ROOT-0, matters-2)
advmod(matters-2, more-3)
mark(is-7, than-4)
det(tips-6, these-5)
nsubj(is-7, tips-6)
nsubj(find-9, tips-6)
advcl(more-3, is-7)
mark(find-9, to-8)
xcomp(is-7, find-9)
compound:prt(find-9, out-10)
nsubj(works-12, what-11)
ccomp(find-9, works-12)
dobj(works-12, best-13)
case(you-15, for-14)
nmod:for(best-13, you-15)

(ROOT
  (S
    (VP (VBN XAdapted)
      (PP (IN from)
        (NP (NNP Tips)))
      (PP (IN on)
        (S
          (VP (VBG Improving)
            (NP (PRP$ Your) (NN Memory))))))
    (. .)))

root(ROOT-0, XAdapted-1)
case(Tips-3, from-2)
nmod:from(XAdapted-1, Tips-3)
mark(Improving-5, on-4)
advcl(XAdapted-1, Improving-5)
nmod:poss(Memory-7, Your-6)
dobj(Improving-5, Memory-7)

