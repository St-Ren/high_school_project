(ROOT
  (S
    (S
      (NP (NNP Jenny))
      (VP (VBD decided)
        (S
          (VP (TO to)
            (VP (VB dump)
              (NP (NNP Henry)))))))
    (, ,)
    (CC but)
    (S
      (PP (RB instead) (IN of)
        (S
          (VP (VBG saying)
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP want)
                  (S
                    (VP (TO to)
                      (VP (VB break)
                        (PRT (RP up))
                        (PP (IN with)
                          (NP (PRP you))))))))))))
      (, ,)
      (NP (PRP she))
      (VP (VBD said)
        (VP (VB Youre)
          (NP (DT a) (JJ good) (NN guy)))))
    (. .)))

nsubj(decided-2, Jenny-1)
nsubj(dump-4, Jenny-1)
root(ROOT-0, decided-2)
mark(dump-4, to-3)
xcomp(decided-2, dump-4)
dobj(dump-4, Henry-5)
cc(decided-2, but-7)
mark(saying-10, instead-8)
mwe(instead-8, of-9)
advcl(said-20, saying-10)
nsubj(want-12, I-11)
nsubj(break-14, I-11)
ccomp(saying-10, want-12)
mark(break-14, to-13)
xcomp(want-12, break-14)
compound:prt(break-14, up-15)
case(you-17, with-16)
nmod:with(break-14, you-17)
nsubj(said-20, she-19)
conj:but(decided-2, said-20)
xcomp(said-20, Youre-21)
det(guy-24, a-22)
amod(guy-24, good-23)
dobj(Youre-21, guy-24)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP (NNP Professor) (NNP Brown))
          (VP (VBD went)
            (PP (IN into)
              (NP (DT the) (NN classroom))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD said)
        (S
          (NP (PRP$ Its))
          (ADJP (RB pretty) (JJ hot))
          (ADVP (RB here)))))
    (, ,)
    (CC and)
    (S
      (NP (CD two) (NNS students))
      (VP (VBD turned)
        (PP (IN on)
          (NP (DT the) (NN air) (NN conditioner)))))
    (. .)))

mark(went-4, As-1)
compound(Brown-3, Professor-2)
nsubj(went-4, Brown-3)
advcl(said-10, went-4)
case(classroom-7, into-5)
det(classroom-7, the-6)
nmod:into(went-4, classroom-7)
nsubj(said-10, he-9)
root(ROOT-0, said-10)
nsubj(hot-13, Its-11)
advmod(hot-13, pretty-12)
xcomp(said-10, hot-13)
advmod(hot-13, here-14)
cc(said-10, and-16)
nummod(students-18, two-17)
nsubj(turned-19, students-18)
conj:and(said-10, turned-19)
case(conditioner-23, on-20)
det(conditioner-23, the-21)
compound(conditioner-23, air-22)
nmod:on(turned-19, conditioner-23)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD may)
      (VP (VB have)
        (VP (VBN found)
          (SBAR (IN that)
            (S
              (ADVP (RB sometimes))
              (NP (PRP$ our) (NNS words))
              (VP (VBP do) (RB not)
                (ADVP (RB literally))
                (VP (VB mean)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP we))
                      (VP (VBP want)
                        (S
                          (VP (TO to)
                            (VP (VB say)
                              (PP (IN in)
                                (NP (PRP$ our) (NNS hearts))))))))))))))))
    (. .)))

nsubj(found-4, You-1)
aux(found-4, may-2)
aux(found-4, have-3)
root(ROOT-0, found-4)
mark(mean-12, that-5)
advmod(mean-12, sometimes-6)
nmod:poss(words-8, our-7)
nsubj(mean-12, words-8)
aux(mean-12, do-9)
neg(mean-12, not-10)
advmod(mean-12, literally-11)
ccomp(found-4, mean-12)
dobj(want-15, what-13)
nsubj(say-17, what-13)
nsubj(want-15, we-14)
ccomp(mean-12, want-15)
mark(say-17, to-16)
xcomp(want-15, say-17)
case(hearts-20, in-18)
nmod:poss(hearts-20, our-19)
nmod:in(say-17, hearts-20)

(ROOT
  (SBARQ (CC But)
    (WHADVP (WRB why))
    (SQ (VBD cant)
      (NP (PRP we))
      (VP
        (ADVP (RB just))
        (VB say)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP we))
            (VP (VBP mean))))))
    (. ?)))

cc(say-6, But-1)
advmod(say-6, why-2)
aux(say-6, cant-3)
nsubj(say-6, we-4)
advmod(say-6, just-5)
root(ROOT-0, say-6)
dobj(mean-9, what-7)
nsubj(mean-9, we-8)
ccomp(say-6, mean-9)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBZ is)
      (NP
        (NP (RB so) (JJ much) (NN communication))
        (ADJP (RB not) (JJ direct))))
    (. ?)))

advmod(is-2, Why-1)
root(ROOT-0, is-2)
advmod(communication-5, so-3)
amod(communication-5, much-4)
nsubj(is-2, communication-5)
neg(direct-7, not-6)
amod(communication-5, direct-7)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP we))
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB pick)
              (PRT (RP up))
              (NP
                (NP (DT the) (JJ actual) (NNS meanings))
                (PP (IN of)
                  (NP (NNS words))))
              (PP
                (PP (IN in)
                  (NP (DT the) (NN voice)))
                (CC and)
                (PP (IN on)
                  (NP (DT the) (NN face)))))))))
    (. ?)))

advmod(have-4, Why-1)
aux(have-4, do-2)
nsubj(have-4, we-3)
nsubj(pick-6, we-3)
nsubj(pick-6', we-3)
root(ROOT-0, have-4)
mark(pick-6, to-5)
xcomp(have-4, pick-6)
xcomp(have-4, pick-6')
conj:and(pick-6, pick-6')
compound:prt(pick-6, up-7)
det(meanings-10, the-8)
amod(meanings-10, actual-9)
dobj(pick-6, meanings-10)
case(words-12, of-11)
nmod:of(meanings-10, words-12)
case(voice-15, in-13)
det(voice-15, the-14)
nmod:in(pick-6, voice-15)
cc(pick-6, and-16)
case(face-19, on-17)
det(face-19, the-18)
nmod:on(pick-6', face-19)

(ROOT
  (S
    (ADVP (RB First))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ important)
        (S
          (VP (TO to)
            (VP
              (VP (VB get)
                (PRT (RP along)))
              (CC and)
              (VP (VB have)
                (S
                  (NP (JJ good) (NN relationshipswto))
                  (VP (VB make)
                    (S
                      (NP (NNS people))
                      (ADJP (JJ happy)))))))))))
    (. .)))

advmod(important-5, First-1)
nsubj(important-5, it-3)
nsubj(get-7, it-3)
nsubj(have-10, it-3)
cop(important-5, is-4)
root(ROOT-0, important-5)
mark(get-7, to-6)
xcomp(important-5, get-7)
compound:prt(get-7, along-8)
cc(get-7, and-9)
xcomp(important-5, have-10)
conj:and(get-7, have-10)
amod(relationshipswto-12, good-11)
nsubj(make-13, relationshipswto-12)
ccomp(have-10, make-13)
nsubj(happy-15, people-14)
xcomp(make-13, happy-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (RB far) (JJR better))
      (S
        (VP
          (VP (TO to)
            (VP (VB get)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP we))
                  (VP (VBP want))))))
          (CC and)
          (VP (TO to)
            (VP (VB be)
              (VP (VBN understood) (, ,)
                (PP (IN without)
                  (S
                    (VP (VBG saying)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP we))
                          (ADVP (RB really))
                          (VP (VBP mean)))))))))))))
    (. .)))

nsubj(better-4, It-1)
cop(better-4, is-2)
advmod(better-4, far-3)
root(ROOT-0, better-4)
mark(get-6, to-5)
ccomp(better-4, get-6)
dobj(want-9, what-7)
nsubj(want-9, we-8)
ccomp(get-6, want-9)
cc(get-6, and-10)
mark(understood-13, to-11)
auxpass(understood-13, be-12)
ccomp(better-4, understood-13)
conj:and(get-6, understood-13)
mark(saying-16, without-15)
advcl(understood-13, saying-16)
dobj(mean-20, what-17)
nsubj(mean-20, we-18)
advmod(mean-20, really-19)
ccomp(saying-16, mean-20)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ makes)
      (SBAR
        (S
          (NP (PRP us))
          (VP (VBP feel)
            (NP
              (NP (DT the) (JJ fine) (NN pleasure))
              (PP (IN of)
                (S
                  (VP (VBG being)
                    (PP (IN on)
                      (NP (DT the) (JJ same) (NN wavelength)))))))))))
    (. .)))

nsubj(makes-2, It-1)
root(ROOT-0, makes-2)
nsubj(feel-4, us-3)
ccomp(makes-2, feel-4)
det(pleasure-7, the-5)
amod(pleasure-7, fine-6)
dobj(feel-4, pleasure-7)
mark(wavelength-13, of-8)
cop(wavelength-13, being-9)
case(wavelength-13, on-10)
det(wavelength-13, the-11)
amod(wavelength-13, same-12)
acl:on(pleasure-7, wavelength-13)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN pleasure))
        (PP (IN of)
          (NP
            (NP (DT those) (JJ special) (NNS conversations))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP we))
                (VP (VBP say)
                  (NP
                    (NP (RB just) (DT a) (JJ few) (NN wordswor))
                    (SBAR
                      (S
                        (NP
                          (NP (DT no) (NNS words))
                          (PP (IN at)
                            (NP (JJ allwand) (NN feel))))
                        (VP (VBD understood))))))))))))
    (. .)))

nsubj(pleasure-4, This-1)
cop(pleasure-4, is-2)
det(pleasure-4, the-3)
root(ROOT-0, pleasure-4)
case(conversations-8, of-5)
det(conversations-8, those-6)
amod(conversations-8, special-7)
nmod:of(pleasure-4, conversations-8)
advmod(say-11, when-9)
nsubj(say-11, we-10)
acl:relcl(conversations-8, say-11)
advmod(wordswor-15, just-12)
det(wordswor-15, a-13)
amod(wordswor-15, few-14)
dobj(say-11, wordswor-15)
neg(words-17, no-16)
nsubj(understood-21, words-17)
case(feel-20, at-18)
amod(feel-20, allwand-19)
nmod:at(words-17, feel-20)
acl:relcl(wordswor-15, understood-21)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN communication) (NN prize))
          (CC and)
          (NP (DT the) (NN reason)))))
    (NP (PRP we))
    (VP (VBP play)
      (NP
        (NP (DT the) (NN birthday-present))
        (CC and)
        (NP (JJ do-you-love-me) (NNS games))))
    (. .)))

nsubj(prize-5, It-1)
cop(prize-5, is-2)
det(prize-5, the-3)
compound(prize-5, communication-4)
dep(play-10, prize-5)
cc(prize-5, and-6)
det(reason-8, the-7)
conj:and(prize-5, reason-8)
dep(play-10, reason-8)
nsubj(play-10, we-9)
root(ROOT-0, play-10)
det(birthday-present-12, the-11)
dobj(play-10, birthday-present-12)
cc(birthday-present-12, and-13)
amod(games-15, do-you-love-me-14)
dobj(play-10, games-15)
conj:and(birthday-present-12, games-15)

(ROOT
  (S
    (NP (NNS People))
    (VP (MD can)
      (VP (VB protect)
        (NP (PRP themselves))
        (PP (IN by)
          (S
            (VP (VBG using)
              (NP (NN indirectness)))))))
    (. .)))

nsubj(protect-3, People-1)
aux(protect-3, can-2)
root(ROOT-0, protect-3)
dobj(protect-3, themselves-4)
mark(using-6, by-5)
advcl(protect-3, using-6)
dobj(using-6, indirectness-7)

(ROOT
  (S
    (ADVP (LS Second))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN benefit))
        (PP (IN in)
          (NP (NN self-defense)))))
    (. .)))

advmod(is-4, Second-1)
expl(is-4, there-3)
root(ROOT-0, is-4)
det(benefit-6, a-5)
nsubj(is-4, benefit-6)
case(self-defense-8, in-7)
nmod:in(benefit-6, self-defense-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP we))
            (VP (VBP want)
              (CC or)
              (VBP think))))
        (VP (VBZ does) (RB not)
          (VP (VB meet)
            (PP (IN with)
              (NP (DT a) (JJ positive) (NN response)))))))
    (, ,)
    (NP (PRP we))
    (VP
      (VP (MD can)
        (VP (VB take)
          (NP (PRP it))
          (ADVP (RB back))))
      (, ,)
      (CC or)
      (VP (VBP say)
        (SBAR (IN that)
          (S
            (VP (VBZ is) (RB not)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP we))
                  (VP (VBD meant)))))))))
    (. .)))

mark(meet-9, If-1)
dobj(want-4, what-2)
nsubj(want-4, we-3)
nsubj(think-6, we-3)
csubj(meet-9, want-4)
cc(want-4, or-5)
conj:or(want-4, think-6)
csubj(meet-9, think-6)
aux(meet-9, does-7)
neg(meet-9, not-8)
advcl(take-17, meet-9)
case(response-13, with-10)
det(response-13, a-11)
amod(response-13, positive-12)
nmod:with(meet-9, response-13)
nsubj(take-17, we-15)
nsubj(say-22, we-15)
aux(take-17, can-16)
root(ROOT-0, take-17)
dobj(take-17, it-18)
advmod(take-17, back-19)
cc(take-17, or-21)
conj:or(take-17, say-22)
mark(is-24, that-23)
ccomp(say-22, is-24)
neg(is-24, not-25)
dobj(meant-28, what-26)
nsubj(meant-28, we-27)
ccomp(is-24, meant-28)

(ROOT
  (S
    (PP (IN Through)
      (NP (NN indirectness)))
    (, ,)
    (NP (PRP we))
    (VP (VBP give)
      (NP (NNS others))
      (NP
        (NP (DT an) (NN idea))
        (PP (IN of)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP we))
              (VP (VBP have)
                (PP (IN in)
                  (NP (NN mind)))
                (ADVP (RB so))))))
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (MD can)
              (VP (VB see)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP they))
                    (VP (MD might)
                      (VP (VB think)
                        (SBAR (IN before)
                          (S
                            (NP (PRP we))
                            (VP (VBP give)
                              (NP
                                (ADJP (RB too) (JJ much))
                                (NN awaywa))
                              (NP
                                (NP (JJ natural) (NN way))
                                (PP (IN of)
                                  (S
                                    (VP (VBG balancing)
                                      (NP (PRP$ our) (NNS needs))
                                      (PP (IN with)
                                        (NP
                                          (NP (DT the) (NNS needs))
                                          (PP (IN of)
                                            (NP (NNS others))))))))))))))))))))))
    (. .)))

case(indirectness-2, Through-1)
nmod:through(give-5, indirectness-2)
nsubj(give-5, we-4)
root(ROOT-0, give-5)
iobj(give-5, others-6)
det(idea-8, an-7)
dobj(give-5, idea-8)
mark(have-12, of-9)
dobj(have-12, what-10)
nsubj(have-12, we-11)
acl(idea-8, have-12)
case(mind-14, in-13)
nmod:in(have-12, mind-14)
advmod(have-12, so-15)
mark(see-19, that-16)
nsubj(see-19, we-17)
aux(see-19, can-18)
dep(idea-8, see-19)
dobj(think-23, what-20)
nsubj(think-23, they-21)
aux(think-23, might-22)
ccomp(see-19, think-23)
mark(give-26, before-24)
nsubj(give-26, we-25)
advcl(think-23, give-26)
advmod(much-28, too-27)
amod(awaywa-29, much-28)
iobj(give-26, awaywa-29)
amod(way-31, natural-30)
dobj(give-26, way-31)
mark(balancing-33, of-32)
acl(way-31, balancing-33)
nmod:poss(needs-35, our-34)
dobj(balancing-33, needs-35)
case(needs-38, with-36)
det(needs-38, the-37)
nmod:with(balancing-33, needs-38)
case(others-40, of-39)
nmod:of(needs-38, others-40)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJR better))
      (S
        (VP (TO to)
          (VP (VB give)
            (NP (DT a) (NN hint))
            (PP (TO to)
              (NP (PRP$ our) (NNS listeners)))
            (PP (IN about)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP we))
                  (VP (VBP want)
                    (S
                      (VP (TO to)
                        (VP (VB say))))))))))))
    (. .)))

nsubj(better-3, It-1)
nsubj(give-5, It-1)
cop(better-3, is-2)
root(ROOT-0, better-3)
mark(give-5, to-4)
xcomp(better-3, give-5)
det(hint-7, a-6)
dobj(give-5, hint-7)
case(listeners-10, to-8)
nmod:poss(listeners-10, our-9)
nmod:to(give-5, listeners-10)
mark(want-14, about-11)
dobj(want-14, what-12)
nsubj(say-16, what-12)
nsubj(want-14, we-13)
advcl(give-5, want-14)
mark(say-16, to-15)
xcomp(want-14, say-16)

(ROOT
  (S
    (PP (IN By)
      (S
        (VP (VBG doing)
          (NP (DT this)))))
    (, ,)
    (NP (PRP we))
    (VP (MD can)
      (VP (VB get)
        (NP
          (NP
            (NP (DT a) (NN sense))
            (PP (IN of)
              (NP (NNS others) (NNS ideas))))
          (CC and)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (NNS others))
              (VP (MD might)
                (VP (VB react)
                  (PP (TO to)
                    (NP (PRP$ our) (NNS ideas))))))))))
    (. .)))

mark(doing-2, By-1)
advcl(get-7, doing-2)
dobj(doing-2, this-3)
nsubj(get-7, we-5)
aux(get-7, can-6)
root(ROOT-0, get-7)
det(sense-9, a-8)
dobj(get-7, sense-9)
case(ideas-12, of-10)
compound(ideas-12, others-11)
nmod:of(sense-9, ideas-12)
cc(sense-9, and-13)
advmod(react-17, how-14)
nsubj(react-17, others-15)
aux(react-17, might-16)
dobj(get-7, react-17)
conj:and(sense-9, react-17)
case(ideas-20, to-18)
nmod:poss(ideas-20, our-19)
nmod:to(react-17, ideas-20)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN beauty)
          (CC and)
          (NNS dangers))
        (PP (IN of)
          (NP (NN language))))
      (VP (VBP are)
        (NP
          (NP (CD two) (NNS sides))
          (PP (IN of)
            (NP (DT the) (JJ same) (NN coin))))))
    (: :)
    (S
      (SBAR
        (X (DT the) (RBR more) (JJ indirect))
        (S
          (NP (PRP we))
          (VP (VBP are))))
      (, ,)
      (NP (DT the) (JJR more) (NN room))
      (VP (VBZ is)
        (VP (VBN left)
          (PP (IN for)
            (NP (NNS listeners)))
          (S
            (VP (TO to)
              (VP (VB interpret)))))))
    (. .)))

det(beauty-2, The-1)
nsubj(sides-9, beauty-2)
cc(beauty-2, and-3)
conj:and(beauty-2, dangers-4)
nsubj(sides-9, dangers-4)
case(language-6, of-5)
nmod:of(beauty-2, language-6)
cop(sides-9, are-7)
nummod(sides-9, two-8)
root(ROOT-0, sides-9)
case(coin-13, of-10)
det(coin-13, the-11)
amod(coin-13, same-12)
nmod:of(sides-9, coin-13)
det(indirect-17, the-15)
dep(indirect-17, more-16)
dep(are-19, indirect-17)
nsubj(are-19, we-18)
advcl(left-25, are-19)
det(room-23, the-21)
amod(room-23, more-22)
nsubjpass(left-25, room-23)
nsubj(interpret-29, room-23)
auxpass(left-25, is-24)
parataxis(sides-9, left-25)
case(listeners-27, for-26)
nmod:for(left-25, listeners-27)
mark(interpret-29, to-28)
xcomp(left-25, interpret-29)

(ROOT
  (S
    (NP
      (NP (DT A) (NN word) (NN spoken))
      (CC or)
      (NP (DT a) (JJ small) (NN gesture)))
    (VP (MD can)
      (VP (VB mean)
        (ADVP (RB much) (RBR more))
        (PP (IN than)
          (NP (PRP$ its) (JJ literal) (NN sense)))))
    (. .)))

det(spoken-3, A-1)
compound(spoken-3, word-2)
nsubj(mean-9, spoken-3)
cc(spoken-3, or-4)
det(gesture-7, a-5)
amod(gesture-7, small-6)
conj:or(spoken-3, gesture-7)
nsubj(mean-9, gesture-7)
aux(mean-9, can-8)
root(ROOT-0, mean-9)
advmod(more-11, much-10)
advmod(mean-9, more-11)
case(sense-15, than-12)
nmod:poss(sense-15, its-13)
amod(sense-15, literal-14)
nmod:than(mean-9, sense-15)

(ROOT
  (S (CC But)
    (S
      (NP (JJ subtle) (NNS signals))
      (VP (MD can)
        (VP (VB be)
          (VP (VBN missed)))))
    (, ,)
    (CC and)
    (S
      (NP (NN meaning))
      (VP (MD can)
        (VP (VB be)
          (VP (VBN taken)
            (SBAR
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD was) (RB not)
                    (VP (VBN intended)))))
              (CC and)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD may)
                    (CC or)
                    (MD may) (RB not)
                    (VP (VB be)
                      (NP (DT a) (JJ good) (NN thing)))))))))))
    (. .)))

cc(missed-6, But-1)
amod(signals-3, subtle-2)
nsubjpass(missed-6, signals-3)
aux(missed-6, can-4)
auxpass(missed-6, be-5)
root(ROOT-0, missed-6)
cc(missed-6, and-8)
nsubjpass(taken-12, meaning-9)
aux(taken-12, can-10)
auxpass(taken-12, be-11)
conj:and(missed-6, taken-12)
nsubjpass(intended-16, that-13)
auxpass(intended-16, was-14)
neg(intended-16, not-15)
dep(taken-12, intended-16)
cc(intended-16, and-17)
nsubj(thing-26, that-18)
aux(thing-26, may-19)
cc(thing-26, or-20)
aux(thing-26, may-21)
neg(thing-26, not-22)
cop(thing-26, be-23)
det(thing-26, a-24)
amod(thing-26, good-25)
dep(taken-12, thing-26)
conj:and(intended-16, thing-26)

(ROOT
  (S
    (NP (PRP$ Our) (NN power)
      (S
        (VP (TO to)
          (VP (VB communicate)
            (ADVP (RB so) (RB much))
            (PP (IN by)
              (NP (RB so) (JJ few) (NNS words)))))))
    (VP (MD can)
      (ADVP (RB inevitably))
      (VP (VB cause)
        (NP (NN communication) (NNS problems))))
    (. .)))

nmod:poss(power-2, Our-1)
nsubj(cause-13, power-2)
mark(communicate-4, to-3)
acl(power-2, communicate-4)
advmod(much-6, so-5)
advmod(communicate-4, much-6)
case(words-10, by-7)
advmod(words-10, so-8)
amod(words-10, few-9)
nmod:by(communicate-4, words-10)
aux(cause-13, can-11)
advmod(cause-13, inevitably-12)
root(ROOT-0, cause-13)
compound(problems-15, communication-14)
dobj(cause-13, problems-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNS others))
        (VP (VB respond)
          (ADVP (RB oddly))
          (PP (TO to)
            (NP
              (NP (NNS things))
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBP say)))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD may)
      (VP (VB try)
        (S
          (VP (TO to)
            (VP (VB state)
              (NP (PRP$ our) (NNS intentions))
              (ADVP (RBR more) (RB directly)))))))
    (. .)))

mark(respond-3, If-1)
nsubj(respond-3, others-2)
advcl(try-12, respond-3)
advmod(respond-3, oddly-4)
case(things-6, to-5)
nmod:to(respond-3, things-6)
nsubj(say-8, we-7)
acl:relcl(things-6, say-8)
nsubj(try-12, we-10)
nsubj(state-14, we-10)
aux(try-12, may-11)
root(ROOT-0, try-12)
mark(state-14, to-13)
xcomp(try-12, state-14)
nmod:poss(intentions-16, our-15)
dobj(state-14, intentions-16)
advmod(directly-18, more-17)
advmod(state-14, directly-18)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP we))
        (VP (VBP find)
          (S
            (NP (NNS others))
            (ADJP (JJ indirect))))))
    (, ,)
    (NP (PRP we))
    (VP (MD can)
      (VP (VB ask)
        (NP (DT the) (NN speaker)
          (S
            (VP (TO to)
              (VP (VB explain)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP he)
                      (CC or)
                      (PRP she))
                    (VP (VBZ means))))))))))
    (. .)))

advmod(find-3, When-1)
nsubj(find-3, we-2)
advcl(ask-9, find-3)
nsubj(indirect-5, others-4)
xcomp(find-3, indirect-5)
nsubj(ask-9, we-7)
aux(ask-9, can-8)
root(ROOT-0, ask-9)
det(speaker-11, the-10)
dobj(ask-9, speaker-11)
mark(explain-13, to-12)
acl(speaker-11, explain-13)
dobj(means-18, what-14)
nsubj(means-18, he-15)
cc(he-15, or-16)
conj:or(he-15, she-17)
nsubj(means-18, she-17)
ccomp(explain-13, means-18)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP we))
    (VP (MD must)
      (VP (VB realize)
        (SBAR (IN that)
          (S
            (NP (DT some) (NNS people))
            (VP (MD will)
              (VP
                (VP (VB feel)
                  (VP (VBN challenged)
                    (SBAR (IN if)
                      (S
                        (NP (PRP$ their) (NN meaning))
                        (VP (VBZ is)
                          (VP (VBN questioned)))))))
                (, ,)
                (CC and)
                (ADVP (RB then))
                (VP (VB talk)
                  (PP (IN in)
                    (NP
                      (NP (DT a) (NN way))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (MD will)
                            (VP (VB make)
                              (S
                                (NP (DT some) (NNS people))
                                (ADJP (JJ uncomfortable))))))))))))))))
    (. .)))

advmod(realize-5, However-1)
nsubj(realize-5, we-3)
aux(realize-5, must-4)
root(ROOT-0, realize-5)
mark(feel-10, that-6)
det(people-8, some-7)
nsubj(feel-10, people-8)
nsubj(talk-20, people-8)
aux(feel-10, will-9)
ccomp(realize-5, feel-10)
dep(feel-10, challenged-11)
mark(questioned-16, if-12)
nmod:poss(meaning-14, their-13)
nsubjpass(questioned-16, meaning-14)
auxpass(questioned-16, is-15)
advcl(challenged-11, questioned-16)
cc(feel-10, and-18)
advmod(talk-20, then-19)
ccomp(realize-5, talk-20)
conj:and(feel-10, talk-20)
case(way-23, in-21)
det(way-23, a-22)
nmod:in(talk-20, way-23)
nsubj(make-26, way-23)
ref(way-23, that-24)
aux(make-26, will-25)
acl:relcl(way-23, make-26)
det(people-28, some-27)
nsubj(uncomfortable-29, people-28)
xcomp(make-26, uncomfortable-29)

(ROOT
  (S
    (S
      (ADVP (RB Therefore))
      (, ,)
      (NP (DT the)
        (ADJP (RBS most) (JJ important))
        (NN thing))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB bear)
              (PP (IN in)
                (NP (NN mind)))
              (SBAR (IN that)
                (S
                  (NP (NNS misunderstandings))
                  (VP (VBP are)
                    (ADJP (JJ natural)
                      (CC and)
                      (JJ normal))))))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBP are) (RB not)
        (NP (NNS signs))
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP
                (NP (NN something))
                (ADJP (JJ wrong)
                  (PP
                    (PP (IN with)
                      (NP (NN someone)))
                    (, ,)
                    (CC or)
                    (PP (IN with)
                      (NP (DT the) (NN relationship)))))))))))
    (. .)))

advmod(is-7, Therefore-1)
det(thing-6, the-3)
advmod(important-5, most-4)
amod(thing-6, important-5)
nsubj(is-7, thing-6)
nsubj(bear-9, thing-6)
root(ROOT-0, is-7)
mark(bear-9, to-8)
xcomp(is-7, bear-9)
case(mind-11, in-10)
nmod:in(bear-9, mind-11)
mark(natural-15, that-12)
nsubj(natural-15, misunderstandings-13)
nsubj(normal-17, misunderstandings-13)
cop(natural-15, are-14)
ccomp(bear-9, natural-15)
cc(natural-15, and-16)
ccomp(bear-9, normal-17)
conj:and(natural-15, normal-17)
nsubj(signs-22, they-19)
cop(signs-22, are-20)
neg(signs-22, not-21)
parataxis(is-7, signs-22)
mark(is-25, that-23)
expl(is-25, there-24)
ccomp(signs-22, is-25)
nsubj(is-25, something-26)
amod(something-26, wrong-27)
amod(something-26, wrong-27')
conj:or(wrong-27, wrong-27')
case(someone-29, with-28)
nmod:with(wrong-27, someone-29)
cc(wrong-27, or-31)
case(relationship-34, with-32)
det(relationship-34, the-33)
nmod:with(wrong-27', relationship-34)

