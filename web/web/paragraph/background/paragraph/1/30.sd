(ROOT
  (SQ (MD Can)
    (NP (NNS Dogs))
    (VP (VB Talk))
    (. ?)))

aux(Talk-3, Can-1)
nsubj(Talk-3, Dogs-2)
root(ROOT-0, Talk-3)

(ROOT
  (SQ (MD Can)
    (NP (PRP you))
    (VP (VB understand)
      (NP (PRP$ your) (NN dog)))
    (. ?)))

aux(understand-3, Can-1)
nsubj(understand-3, you-2)
root(ROOT-0, understand-3)
nmod:poss(dog-5, your-4)
dobj(understand-3, dog-5)

(ROOT
  (SQ (MD Can)
    (NP (PRP$ your) (NN dog))
    (VP (VB understand)
      (NP (PRP you)))
    (. ?)))

aux(understand-4, Can-1)
nmod:poss(dog-3, your-2)
nsubj(understand-4, dog-3)
root(ROOT-0, understand-4)
dobj(understand-4, you-5)

(ROOT
  (S
    (NP (DT Some) (NNS people))
    (VP (VBP say)
      (SBAR
        (S
          (NP (DT the) (NN answer))
          (VP (VBZ is)
            (NP (UH yes))
            (PP (TO to)
              (NP (DT both) (NNS questions)))))))
    (. .)))

det(people-2, Some-1)
nsubj(say-3, people-2)
root(ROOT-0, say-3)
det(answer-5, the-4)
nsubj(yes-7, answer-5)
cop(yes-7, is-6)
ccomp(say-3, yes-7)
case(questions-10, to-8)
det(questions-10, both-9)
nmod:to(yes-7, questions-10)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Germany)))
    (, ,)
    (NP (NNS researchers))
    (VP (VBD studied)
      (NP
        (NP (DT a) (NN dog))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD could)
              (VP (VB understand)
                (NP
                  (QP (JJR more) (IN than) (CD 200))
                  (NNS words))))))))
    (. .)))

case(Germany-2, In-1)
nmod:in(studied-5, Germany-2)
nsubj(studied-5, researchers-4)
root(ROOT-0, studied-5)
det(dog-7, a-6)
dobj(studied-5, dog-7)
nsubj(understand-10, dog-7)
ref(dog-7, that-8)
aux(understand-10, could-9)
acl:relcl(dog-7, understand-10)
advmod(200-13, more-11)
mwe(more-11, than-12)
nummod(words-14, 200-13)
dobj(understand-10, words-14)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Tokyo)))
    (, ,)
    (NP (DT a) (NN company))
    (VP (VBD invented)
      (SBAR
        (S
          (NP (DT a) (NN device))
          (VP (VBD called)
            (NP (DT the) (NN Bow-Lingual))))))
    (. .)))

case(Tokyo-2, In-1)
nmod:in(invented-6, Tokyo-2)
det(company-5, a-4)
nsubj(invented-6, company-5)
root(ROOT-0, invented-6)
det(device-8, a-7)
nsubj(called-9, device-8)
ccomp(invented-6, called-9)
det(Bow-Lingual-11, the-10)
dobj(called-9, Bow-Lingual-11)

(ROOT
  (S
    (NP (DT This) (NN device))
    (VP (MD can)
      (VP (VB translate)
        (NP (DT a) (NNS dogs) (NN bark))
        (PP (IN into)
          (NP (NNS words)))))
    (. .)))

det(device-2, This-1)
nsubj(translate-4, device-2)
aux(translate-4, can-3)
root(ROOT-0, translate-4)
det(bark-7, a-5)
compound(bark-7, dogs-6)
dobj(translate-4, bark-7)
case(words-9, into-8)
nmod:into(translate-4, words-9)

(ROOT
  (S
    (NP (DT The) (NN Bow-Lingual))
    (VP (VBZ is)
      (VP (VBG becoming)
        (ADJP (RB very) (JJ popular))))
    (. .)))

det(Bow-Lingual-2, The-1)
nsubj(becoming-4, Bow-Lingual-2)
aux(becoming-4, is-3)
root(ROOT-0, becoming-4)
advmod(popular-6, very-5)
xcomp(becoming-4, popular-6)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (ADVP (RB now))
    (NP (PRP you))
    (VP (MD can)
      (VP (VB get)
        (NP
          (NP (CD one))
          (PP (IN in)
            (NP (JJ different) (NNS languages))))
        (PP (DT all) (IN over)
          (NP (DT the) (NN world)))))
    (. !)))

case(fact-2, In-1)
nmod:in(get-7, fact-2)
advmod(you-5, now-4)
nsubj(get-7, you-5)
aux(get-7, can-6)
root(ROOT-0, get-7)
dobj(get-7, one-8)
case(languages-11, in-9)
amod(languages-11, different-10)
nmod:in(one-8, languages-11)
dep(world-15, all-12)
case(world-15, over-13)
det(world-15, the-14)
nmod:over(get-7, world-15)

(ROOT
  (S
    (NP
      (NP (NNP Rico))
      (, ,)
      (NP
        (NP (DT a) (JJ nine-year-old) (NN dog))
        (PP (IN in)
          (NP (NNP Germany))))
      (, ,))
    (VP (VBD knew)
      (NP
        (NP (DT the) (NNS names))
        (PP (IN of)
          (NP
            (QP (IN over) (CD 200))
            (NNS toys)))))
    (. .)))

nsubj(knew-9, Rico-1)
det(dog-5, a-3)
amod(dog-5, nine-year-old-4)
appos(Rico-1, dog-5)
case(Germany-7, in-6)
nmod:in(dog-5, Germany-7)
root(ROOT-0, knew-9)
det(names-11, the-10)
dobj(knew-9, names-11)
case(toys-15, of-12)
advmod(200-14, over-13)
nummod(toys-15, 200-14)
nmod:of(names-11, toys-15)

(ROOT
  (S
    (PP (IN In)
      (NP (DT an) (NN experiment)))
    (, ,)
    (NP (DT the) (NNS researchers))
    (VP (VBD put)
      (NP (DT a) (JJ new) (NN toy))
      (PP
        (ADVP (RB together))
        (IN with)
        (NP
          (NP (CD seven))
          (PP (IN of)
            (NP (NNP Ricos) (JJ old) (NNS toys)))))
      (PP (IN in)
        (NP (DT a) (NN room))))
    (. .)))

case(experiment-3, In-1)
det(experiment-3, an-2)
nmod:in(put-7, experiment-3)
det(researchers-6, the-5)
nsubj(put-7, researchers-6)
root(ROOT-0, put-7)
det(toy-10, a-8)
amod(toy-10, new-9)
dobj(put-7, toy-10)
case(seven-13, together-11)
mwe(together-11, with-12)
nmod:together_with(put-7, seven-13)
case(toys-17, of-14)
compound(toys-17, Ricos-15)
amod(toys-17, old-16)
nmod:of(seven-13, toys-17)
case(room-20, in-18)
det(room-20, a-19)
nmod:in(put-7, room-20)

(ROOT
  (S (RB Then)
    (NP (PRP they))
    (VP (VBD told)
      (S
        (NP (NNP Rico))
        (VP (TO to)
          (VP (VB get)
            (NP (DT the) (JJ new) (NN toy)))))
      (, ,)
      (S
        (VP (VBG calling)
          (NP (DT that) (NN toy))
          (PP (IN by)
            (NP (PRP$ its) (JJ new) (NN name))))))
    (. .)))

advmod(told-3, Then-1)
nsubj(told-3, they-2)
root(ROOT-0, told-3)
dobj(told-3, Rico-4)
nsubj(get-6, Rico-4)
mark(get-6, to-5)
xcomp(told-3, get-6)
det(toy-9, the-7)
amod(toy-9, new-8)
dobj(get-6, toy-9)
xcomp(told-3, calling-11)
det(toy-13, that-12)
dobj(calling-11, toy-13)
case(name-17, by-14)
nmod:poss(name-17, its-15)
amod(name-17, new-16)
nmod:by(calling-11, name-17)

(ROOT
  (S
    (NP (NNP Rico))
    (VP
      (VP (VBD understood)
        (NP (DT the) (NN order)))
      (CC and)
      (VP (VBD finished)
        (NP (DT the) (NN task) (CD 7))
        (PRT (RP out))
        (PP (IN of)
          (NP
            (QP (CD 10) (NNS times))))))
    (. .)))

nsubj(understood-2, Rico-1)
nsubj(finished-6, Rico-1)
root(ROOT-0, understood-2)
det(order-4, the-3)
dobj(understood-2, order-4)
cc(understood-2, and-5)
conj:and(understood-2, finished-6)
det(task-8, the-7)
dobj(finished-6, task-8)
nummod(task-8, 7-9)
compound:prt(finished-6, out-10)
case(times-13, of-11)
compound(times-13, 10-12)
nmod:of(finished-6, times-13)

(ROOT
  (S
    (ADVP
      (NP (CD One) (NN month))
      (RB later))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBD did)
        (NP (DT the) (NN experiment))
        (ADVP (RB again))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Rico))
      (ADVP (RB still))
      (VP (VBD remembered)
        (NP
          (NP (DT the) (NN name))
          (PP (IN of)
            (NP (DT the) (JJ new) (NN toy))))))
    (. .)))

nummod(month-2, One-1)
nmod:npmod(later-3, month-2)
advmod(did-6, later-3)
nsubj(did-6, they-5)
root(ROOT-0, did-6)
det(experiment-8, the-7)
dobj(did-6, experiment-8)
advmod(did-6, again-9)
cc(did-6, and-11)
nsubj(remembered-14, Rico-12)
advmod(remembered-14, still-13)
conj:and(did-6, remembered-14)
det(name-16, the-15)
dobj(remembered-14, name-16)
case(toy-20, of-17)
det(toy-20, the-18)
amod(toy-20, new-19)
nmod:of(name-16, toy-20)

(ROOT
  (S
    (ADVP (RB Thus))
    (, ,)
    (PP (VBG according)
      (PP (TO to)
        (NP (DT the) (NNS researchers))))
    (, ,)
    (NP (DT a) (NN dog))
    (VP (MD can)
      (VP (VB hear)
        (CC and)
        (VB learn)
        (NP (JJ new) (NNS words))
        (PP
          (ADVP (RB just))
          (IN like)
          (NP (DT a) (NN child)))))
    (. .)))

advmod(hear-11, Thus-1)
case(researchers-6, according-3)
mwe(according-3, to-4)
det(researchers-6, the-5)
nmod:according_to(hear-11, researchers-6)
det(dog-9, a-8)
nsubj(hear-11, dog-9)
nsubj(learn-13, dog-9)
aux(hear-11, can-10)
root(ROOT-0, hear-11)
cc(hear-11, and-12)
conj:and(hear-11, learn-13)
amod(words-15, new-14)
dobj(hear-11, words-15)
advmod(child-19, just-16)
case(child-19, like-17)
det(child-19, a-18)
nmod:like(hear-11, child-19)

(ROOT
  (S
    (S
      (NP (NNS Dogs))
      (VP (MD can)
        (VP
          (VP (VB listen)
            (PP (TO to)))
          (CC and)
          (VP (VB understand)
            (NP (PRP$ their) (NNS owners))))))
    (, ,)
    (CC but)
    (SQ (MD can)
      (NP (PRP$ their) (NNS owners))
      (VP (VB understand)
        (NP (PRP them)))
      (. ?))))

nsubj(listen-3, Dogs-1)
nsubj(understand-6, Dogs-1)
aux(listen-3, can-2)
root(ROOT-0, listen-3)
nmod(listen-3, to-4)
cc(listen-3, and-5)
conj:and(listen-3, understand-6)
nmod:poss(owners-8, their-7)
dobj(understand-6, owners-8)
cc(listen-3, but-10)
aux(understand-14, can-11)
nmod:poss(owners-13, their-12)
nsubj(understand-14, owners-13)
conj:but(listen-3, understand-14)
dobj(understand-14, them-15)

(ROOT
  (S
    (NP (DT The) (NNP Bow-Lingual) (NNP Dog) (NNP Translator))
    (VP (MD may)
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB help)))))))
    (. .)))

det(Translator-4, The-1)
compound(Translator-4, Bow-Lingual-2)
compound(Translator-4, Dog-3)
nsubj(able-7, Translator-4)
nsubj(help-9, Translator-4)
aux(able-7, may-5)
cop(able-7, be-6)
root(ROOT-0, able-7)
mark(help-9, to-8)
xcomp(able-7, help-9)

(ROOT
  (S
    (NP (DT The) (NN Bow-Lingual))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ small) (NN device))
        (PP (IN with)
          (NP (DT a) (NN microphone)))))
    (. .)))

det(Bow-Lingual-2, The-1)
nsubj(device-6, Bow-Lingual-2)
cop(device-6, is-3)
det(device-6, a-4)
amod(device-6, small-5)
root(ROOT-0, device-6)
case(microphone-9, with-7)
det(microphone-9, a-8)
nmod:with(device-6, microphone-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB attach)
        (NP (DT the) (NN microphone))
        (PP (TO to)
          (NP (PRP$ your) (NNS dogs) (NN collar)))))
    (. .)))

nsubj(attach-3, You-1)
aux(attach-3, can-2)
root(ROOT-0, attach-3)
det(microphone-5, the-4)
dobj(attach-3, microphone-5)
case(collar-9, to-6)
nmod:poss(collar-9, your-7)
compound(collar-9, dogs-8)
nmod:to(attach-3, collar-9)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP$ your) (NN dog))
        (VP (VBZ barks))))
    (, ,)
    (NP (DT the) (NN Bow-Lingual))
    (VP (VBZ records)
      (NP (DT the) (NN sound)))
    (. .)))

advmod(barks-4, When-1)
nmod:poss(dog-3, your-2)
nsubj(barks-4, dog-3)
advcl(records-8, barks-4)
det(Bow-Lingual-7, the-6)
nsubj(records-8, Bow-Lingual-7)
root(ROOT-0, records-8)
det(sound-10, the-9)
dobj(records-8, sound-10)

(ROOT
  (S (RB Then)
    (NP (PRP it))
    (VP (VBZ translates)
      (NP
        (NP
          (NP (DT the) (NN sound))
          (PP (IN into)
            (NP (CD six) (NNS emotions))))
        (: :)
        (UCP
          (ADJP (JJ happy))
          (, ,)
          (ADJP (JJ sad))
          (, ,)
          (ADJP (JJ watchful))
          (, ,)
          (ADJP (JJ frustrated))
          (, ,)
          (ADJP (JJ needy))
          (, ,)
          (CC and)
          (NP (JJ confident)))))
    (. .)))

advmod(translates-3, Then-1)
nsubj(translates-3, it-2)
root(ROOT-0, translates-3)
det(sound-5, the-4)
dobj(translates-3, sound-5)
case(emotions-8, into-6)
nummod(emotions-8, six-7)
nmod:into(sound-5, emotions-8)
amod(sound-5, happy-10)
amod(sound-5, sad-12)
conj:and(happy-10, sad-12)
amod(sound-5, watchful-14)
conj:and(happy-10, watchful-14)
amod(sound-5, frustrated-16)
conj:and(happy-10, frustrated-16)
amod(sound-5, needy-18)
conj:and(happy-10, needy-18)
cc(happy-10, and-20)
amod(sound-5, confident-21)
conj:and(happy-10, confident-21)

(ROOT
  (S
    (SBAR (IN After)
      (S
        (NP (PRP it))
        (VP (VBZ translates)
          (NP (DT the) (NN sound))
          (PP (IN into)
            (NP (DT an) (NN emotion))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ matches)
      (NP (DT the) (NN emotion))
      (PP (IN with)
        (NP
          (NP (JJ common) (NNS phrases))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBP fit)
                (NP (PRP$ your) (JJ dogs) (JJ emotional) (NN state))))))))
    (. .)))

mark(translates-3, After-1)
nsubj(translates-3, it-2)
advcl(matches-11, translates-3)
det(sound-5, the-4)
dobj(translates-3, sound-5)
case(emotion-8, into-6)
det(emotion-8, an-7)
nmod:into(translates-3, emotion-8)
nsubj(matches-11, it-10)
root(ROOT-0, matches-11)
det(emotion-13, the-12)
dobj(matches-11, emotion-13)
case(phrases-16, with-14)
amod(phrases-16, common-15)
nmod:with(matches-11, phrases-16)
nsubj(fit-18, phrases-16)
ref(phrases-16, which-17)
acl:relcl(phrases-16, fit-18)
nmod:poss(state-22, your-19)
amod(state-22, dogs-20)
amod(state-22, emotional-21)
dobj(fit-18, state-22)

(ROOT
  (S
    (S
      (NP (DT These))
      (VP (VBP include)
        (SBAR
          (S
            (NP (DT This) (NN bone))
            (VP (VBZ is)
              (ADJP (JJ delicious)))))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP feel)
          (ADJP (JJ great))))
      (, ,))
    (CC and)
    (S
      (NP (NNP Lets))
      (VP (VBP go))
      (, ,)
      (ADVP (RB etc.)))
    (. .)))

nsubj(include-2, These-1)
root(ROOT-0, include-2)
det(bone-4, This-3)
nsubj(delicious-6, bone-4)
cop(delicious-6, is-5)
ccomp(include-2, delicious-6)
nsubj(feel-9, I-8)
dep(include-2, feel-9)
xcomp(feel-9, great-10)
cc(include-2, and-12)
nsubj(go-14, Lets-13)
conj:and(include-2, go-14)
advmod(go-14, etc.-16)

(ROOT
  (S
    (NP (DT This) (NN device))
    (VP (VBZ helps)
      (S
        (NP (NN everyone))
        (VP (VB understand)
          (NP (NNS dogs)))))
    (. .)))

det(device-2, This-1)
nsubj(helps-3, device-2)
root(ROOT-0, helps-3)
nsubj(understand-5, everyone-4)
ccomp(helps-3, understand-5)
dobj(understand-5, dogs-6)

(ROOT
  (S
    (NP (NN Understanding) (NNS dogs) (NN language))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ great) (NN help))
        (PP (IN in)
          (S
            (VP (VBG knowing)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ is)
                    (ADJP (JJ wrong)
                      (PP (IN with)
                        (NP (DT a) (NN dog))))
                    (SBAR (IN if)
                      (S
                        (NP (PRP he))
                        (VP (VBZ has)
                          (NP (DT a) (NN health) (NN problem))
                          (PRN (, ,)
                            (CC and)
                            (ADVP (RB also)))
                          (PP (IN in)
                            (NP (NN dog) (NN training))))))))))))))
    (. .)))

compound(language-3, Understanding-1)
compound(language-3, dogs-2)
nsubj(help-7, language-3)
cop(help-7, is-4)
det(help-7, a-5)
amod(help-7, great-6)
root(ROOT-0, help-7)
mark(knowing-9, in-8)
acl(help-7, knowing-9)
nsubj(wrong-12, what-10)
cop(wrong-12, is-11)
ccomp(knowing-9, wrong-12)
case(dog-15, with-13)
det(dog-15, a-14)
nmod:with(wrong-12, dog-15)
mark(has-18, if-16)
nsubj(has-18, he-17)
advcl(wrong-12, has-18)
det(problem-21, a-19)
compound(problem-21, health-20)
dobj(has-18, problem-21)
cc(also-24, and-23)
dep(has-18, also-24)
case(training-27, in-25)
compound(training-27, dog-26)
nmod:in(has-18, training-27)

(ROOT
  (S
    (PP (IN With)
      (NP
        (NP (DT the) (NN help))
        (PP (IN of)
          (NP (DT the) (NNP Bow-Lingual) (NNP Translator)))))
    (, ,)
    (NP
      (NP (NNP Dr.) (NNPS Dolittles) (NN dream))
      (PP (IN of)
        (S
          (VP (VBG talking)
            (PP (IN with)
              (NP (NNS animals)))))))
    (VP (VBZ is)
      (ADVP (RB no) (RB longer))
      (NP (DT a) (NN fantasy)))
    (. .)))

case(help-3, With-1)
det(help-3, the-2)
nmod:with(fantasy-20, help-3)
case(Translator-7, of-4)
det(Translator-7, the-5)
compound(Translator-7, Bow-Lingual-6)
nmod:of(help-3, Translator-7)
compound(dream-11, Dr.-9)
compound(dream-11, Dolittles-10)
nsubj(fantasy-20, dream-11)
mark(talking-13, of-12)
acl(dream-11, talking-13)
case(animals-15, with-14)
nmod:with(talking-13, animals-15)
cop(fantasy-20, is-16)
neg(longer-18, no-17)
advmod(fantasy-20, longer-18)
det(fantasy-20, a-19)
root(ROOT-0, fantasy-20)

(ROOT
  (S
    (ADVP (RB As) (RB long)
      (SBAR (IN as)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (DT a) (NN need))
              (PP (IN for)
                (NP (JJ pet-owner) (NN communication))))))))
    (, ,)
    (NP (EX there))
    (VP (MD will)
      (ADVP (RB probably))
      (VP (VB be)
        (NP (JJR more) (JJ new) (NNS inventions))))
    (. .)))

advmod(long-2, As-1)
advmod(inventions-18, long-2)
mark(is-5, as-3)
expl(is-5, there-4)
ccomp(long-2, is-5)
det(need-7, a-6)
nsubj(is-5, need-7)
case(communication-10, for-8)
amod(communication-10, pet-owner-9)
nmod:for(need-7, communication-10)
expl(inventions-18, there-12)
aux(inventions-18, will-13)
advmod(inventions-18, probably-14)
cop(inventions-18, be-15)
amod(inventions-18, more-16)
amod(inventions-18, new-17)
root(ROOT-0, inventions-18)

(ROOT
  (S
    (NP (DT The) (NN Bow-Lingual))
    (VP (VBZ is)
      (ADJP (RB so) (JJ popular))
      (SBAR (IN that) (RB soon)
        (S
          (NP (EX there))
          (VP (MD may)
            (VP (VB be)
              (NP
                (NP (CD one))
                (PP (IN for)
                  (NP (NNS cats))))
              (, ,)
              (ADVP (RB too)))))))
    (. .)))

det(Bow-Lingual-2, The-1)
nsubj(popular-5, Bow-Lingual-2)
cop(popular-5, is-3)
advmod(popular-5, so-4)
root(ROOT-0, popular-5)
mark(one-11, that-6)
advmod(one-11, soon-7)
expl(one-11, there-8)
aux(one-11, may-9)
cop(one-11, be-10)
ccomp(popular-5, one-11)
case(cats-13, for-12)
nmod:for(one-11, cats-13)
advmod(one-11, too-15)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (NP (PRP it))
    (VP (MD will)
      (VP (VB be)
        (NP (DT the) (NN Meow-Lingual))))
    (. .)))

case(course-2, Of-1)
nmod:of(Meow-Lingual-8, course-2)
nsubj(Meow-Lingual-8, it-4)
aux(Meow-Lingual-8, will-5)
cop(Meow-Lingual-8, be-6)
det(Meow-Lingual-8, the-7)
root(ROOT-0, Meow-Lingual-8)

(ROOT
  (PRN (: --)
    (PP (IN from)
      (NP
        (NP (NNP Read))
        (PP (IN on)
          (NP (CD 3)))
        (, ,)
        (PP (IN by)
          (NP (NNP Nancy) (NNP Nici) (NNP Mare)))))
    (, ,)
    (S
      (VP (VBN reprinted)
        (PP (IN with)
          (NP
            (NP (NN permission))
            (PP (IN of)
              (NP (DT The) (NNP McGraw-Hill) (NNPS Companies)))))))))

case(Read-3, from-2)
nmod:from(reprinted-12, Read-3)
case(3-5, on-4)
nmod:on(Read-3, 3-5)
case(Mare-10, by-7)
compound(Mare-10, Nancy-8)
compound(Mare-10, Nici-9)
nmod:by(Read-3, Mare-10)
root(ROOT-0, reprinted-12)
case(permission-14, with-13)
nmod:with(reprinted-12, permission-14)
case(Companies-18, of-15)
det(Companies-18, The-16)
compound(Companies-18, McGraw-Hill-17)
nmod:of(permission-14, Companies-18)

