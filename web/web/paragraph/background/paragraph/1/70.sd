(ROOT
  (S
    (NP (RB Now))
    (VP (VBP do) (RB n't)
      (VP (VB get)
        (S
          (NP (PRP me))
          (ADJP (JJ wrong)))))
    (. .)))

nsubj(get-4, Now-1)
aux(get-4, do-2)
neg(get-4, n't-3)
root(ROOT-0, get-4)
nsubj(wrong-6, me-5)
xcomp(get-4, wrong-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (ADJP (RB so) (JJ dumb)))
    (. .)))

nsubj(dumb-5, I-1)
cop(dumb-5, am-2)
neg(dumb-5, not-3)
advmod(dumb-5, so-4)
root(ROOT-0, dumb-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP get)
      (PRT (RP around)))
    (. .)))

nsubj(get-2, I-1)
root(ROOT-0, get-2)
compound:prt(get-2, around-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP (CD two) (JJR older) (NNS sisters)))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
nummod(sisters-5, two-3)
amod(sisters-5, older-4)
dobj(have-2, sisters-5)

(ROOT
  (S
    (ADVP (RB So))
    (, ,)
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ is)
            (VP (VBG going)
              (PRT (RP on)))))))
    (. .)))

advmod(know-4, So-1)
nsubj(know-4, I-3)
root(ROOT-0, know-4)
nsubj(going-7, what-5)
aux(going-7, is-6)
ccomp(know-4, going-7)
compound:prt(going-7, on-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (JJ funny))
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (PRP I))
          (VP (VBD met)
            (NP (PRP him))))))
    (. .)))

nsubj(funny-3, It-1)
cop(funny-3, was-2)
root(ROOT-0, funny-3)
advmod(met-6, how-4)
nsubj(met-6, I-5)
ccomp(funny-3, met-6)
dobj(met-6, him-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN winter) (NN night))
        (PP (IN like)
          (NP (DT any) (JJ other) (NN night)))))
    (. .)))

nsubj(night-5, It-1)
cop(night-5, was-2)
det(night-5, a-3)
compound(night-5, winter-4)
root(ROOT-0, night-5)
case(night-9, like-6)
det(night-9, any-7)
amod(night-9, other-8)
nmod:like(night-5, night-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did) (RB not)
      (VP (VB have)
        (NP
          (NP (PRP$ my) (NN chemistry) (NN homework))
          (VP (VBN done)))))
    (. .)))

nsubj(have-4, I-1)
aux(have-4, did-2)
neg(have-4, not-3)
root(ROOT-0, have-4)
nmod:poss(homework-7, my-5)
compound(homework-7, chemistry-6)
dobj(have-4, homework-7)
acl(homework-7, done-8)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBD looked)
        (PRT (RP out))
        (NP (DT the) (NN window)))
      (CC and)
      (VP (VBD noticed)
        (NP (DT the) (NN moonlight))
        (PP (IN on)
          (NP
            (NP (DT the) (NNS twigs))
            (CC and)
            (NP
              (NP (DT the) (NN snow))
              (VP (VBG blowing)
                (PP (IN in)
                  (NP (DT the) (NN wind)))))))))
    (. .)))

nsubj(looked-2, I-1)
nsubj(noticed-7, I-1)
root(ROOT-0, looked-2)
compound:prt(looked-2, out-3)
det(window-5, the-4)
dobj(looked-2, window-5)
cc(looked-2, and-6)
conj:and(looked-2, noticed-7)
det(moonlight-9, the-8)
dobj(noticed-7, moonlight-9)
case(twigs-12, on-10)
det(twigs-12, the-11)
nmod:on(noticed-7, twigs-12)
cc(twigs-12, and-13)
det(snow-15, the-14)
nmod:on(noticed-7, snow-15)
conj:and(twigs-12, snow-15)
acl(snow-15, blowing-16)
case(wind-19, in-17)
det(wind-19, the-18)
nmod:in(blowing-16, wind-19)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (MD could) (RB not)
      (VP (VB stay)
        (ADVP (RB inside))))
    (. .)))

nsubj(stay-5, I-1)
advmod(stay-5, just-2)
aux(stay-5, could-3)
neg(stay-5, not-4)
root(ROOT-0, stay-5)
advmod(stay-5, inside-6)

(ROOT
  (S
    (NP (DT The) (VBG skating) (NN rink))
    (VP (VBZ is)
      (ADVP (RB just))
      (NP
        (NP (DT a) (JJ five-minute) (NN walk))
        (PP (IN from)
          (NP (PRP$ my) (NN house))))
      (SBAR (IN if)
        (S
          (NP (DT the) (NNS sidewalks))
          (VP (VBP are) (RB not)
            (ADJP (JJ slippery)))))
      (, ,)
      (SBAR (IN so)
        (S
          (NP (PRP I))
          (VP (VBD went)
            (S
              (VP (VBG skating)))))))
    (. .)))

det(rink-3, The-1)
amod(rink-3, skating-2)
nsubj(walk-8, rink-3)
cop(walk-8, is-4)
advmod(walk-8, just-5)
det(walk-8, a-6)
amod(walk-8, five-minute-7)
root(ROOT-0, walk-8)
case(house-11, from-9)
nmod:poss(house-11, my-10)
nmod:from(walk-8, house-11)
mark(slippery-17, if-12)
det(sidewalks-14, the-13)
nsubj(slippery-17, sidewalks-14)
cop(slippery-17, are-15)
neg(slippery-17, not-16)
advcl(walk-8, slippery-17)
mark(went-21, so-19)
nsubj(went-21, I-20)
advcl(walk-8, went-21)
xcomp(went-21, skating-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADVP (RB out))
      (PP (IN of)
        (NP (NN breath)))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBD got)
            (ADVP (RB there))))))
    (. .)))

nsubj(breath-5, I-1)
cop(breath-5, was-2)
case(breath-5, out-3)
mwe(out-3, of-4)
root(ROOT-0, breath-5)
advmod(got-8, when-6)
nsubj(got-8, I-7)
advcl(breath-5, got-8)
advmod(got-8, there-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD waited)
      (NP (DT a) (NN moment)
        (S
          (VP (TO to)
            (VP (VB feel)
              (ADJP (JJ calm)))))))
    (. .)))

nsubj(waited-2, I-1)
root(ROOT-0, waited-2)
det(moment-4, a-3)
dobj(waited-2, moment-4)
mark(feel-6, to-5)
acl(moment-4, feel-6)
xcomp(feel-6, calm-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP know) (, ,)
      (S
        (VP (TO to)
          (VP (VB start)
            (S
              (VP (TO to)
                (VP (VB skate)
                  (PP (IN in)
                    (NP
                      (NP (DT a) (JJ crowded) (NN rink))
                      (SBAR
                        (S
                          (VP (VBZ is)
                            (PP (IN like)
                              (S
                                (VP (VBG jumping)
                                  (PP (IN onto)
                                    (NP (DT a) (VBG moving) (NN merry-go-round))))))))))))))))))
    (. .)))

nsubj(know-2, You-1)
nsubj(start-5, You-1)
nsubj(skate-7, You-1)
root(ROOT-0, know-2)
mark(start-5, to-4)
xcomp(know-2, start-5)
mark(skate-7, to-6)
xcomp(start-5, skate-7)
case(rink-11, in-8)
det(rink-11, a-9)
amod(rink-11, crowded-10)
nmod:in(skate-7, rink-11)
cop(jumping-14, is-12)
mark(jumping-14, like-13)
acl:relcl(rink-11, jumping-14)
case(merry-go-round-18, onto-15)
det(merry-go-round-18, a-16)
amod(merry-go-round-18, moving-17)
nmod:onto(jumping-14, merry-go-round-18)

(ROOT
  (S
    (PP (IN Upon)
      (S
        (VP (VBG getting)
          (PP (IN into)
            (NP (DT the) (NN rink))))))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJ fine)))
    (. .)))

mark(getting-2, Upon-1)
advcl(fine-11, getting-2)
case(rink-5, into-3)
det(rink-5, the-4)
nmod:into(getting-2, rink-5)
advmod(fine-11, however-7)
nsubj(fine-11, I-9)
cop(fine-11, was-10)
root(ROOT-0, fine-11)

(ROOT
  (S
    (ADVP (IN At) (JJS least))
    (, ,)
    (NP (PRP I))
    (VP (VBD found)
      (PRT (RP out))
      (SBAR
        (WHADVP (RB exactly) (WRB where))
        (S
          (NP (DT the) (JJ rough) (NN ice))
          (VP (VBD was)))))
    (. .)))

advmod(found-5, At-1)
mwe(At-1, least-2)
nsubj(found-5, I-4)
root(ROOT-0, found-5)
compound:prt(found-5, out-6)
advmod(where-8, exactly-7)
advmod(was-12, where-8)
det(ice-11, the-9)
amod(ice-11, rough-10)
nsubj(was-12, ice-11)
advcl(found-5, was-12)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was) (`` ``)
        (VP (VBP round) (, ,) (VBP round) (, ,) (VBP jump)
          (NP (DT the) (NN rut)))))
    (, ,)
    (NP
      (NP (NN round))
      (, ,)
      (NP (NN round))
      (, ,))
    (VP (VBP jump)
      (SBAR
        (S
          (NP
            (NP (DT the) (NN rut))
            (, ,)
            (NP (NN round))
            (, ,))
          (VP (VBP round)))))
    (. .) ('' '')))

nsubj(round-4, It-1)
aux(round-4, was-2)
ccomp(jump-16, round-4)
dep(round-4, round-6)
dep(round-4, jump-8)
det(rut-10, the-9)
dobj(round-4, rut-10)
nsubj(jump-16, round-12)
appos(round-12, round-14)
root(ROOT-0, jump-16)
det(rut-18, the-17)
nsubj(round-22, rut-18)
appos(rut-18, round-20)
ccomp(jump-16, round-22)

(ROOT
  (S (CC And)
    (ADVP (RB then))
    (, ,)
    (ADVP (RB there))
    (NP (PRP he))
    (VP (VBD was))
    (. !)))

cc(was-6, And-1)
advmod(was-6, then-2)
advmod(was-6, there-4)
nsubj(was-6, he-5)
root(ROOT-0, was-6)

(ROOT
  (S
    (NP
      (NP (DT All))
      (PP (IN of)
        (NP
          (NP (DT a) (JJ sudden))
          (NP (PRP$ his) (NN arm)))))
    (VP (VBD was)
      (PP (IN around)
        (NP (PRP$ my) (NN waist)))
      (ADJP (RB so) (JJ warm)
        (CC and)
        (JJ tight)))
    (. .)))

nsubj(warm-12, All-1)
nsubj(tight-14, All-1)
case(sudden-4, of-2)
det(sudden-4, a-3)
nmod:of(All-1, sudden-4)
nmod:poss(arm-6, his-5)
dep(sudden-4, arm-6)
cop(warm-12, was-7)
case(waist-10, around-8)
nmod:poss(waist-10, my-9)
nmod:around(warm-12, waist-10)
advmod(warm-12, so-11)
root(ROOT-0, warm-12)
cc(warm-12, and-13)
conj:and(warm-12, tight-14)

(ROOT
  (S (CC And)
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD said)))
      (, ,))
    (`` ``)
    (VP (VBD Mind)
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (VBP skate)
            (PP (IN with)
              (NP (PRP you)))))))
    (. ?) ('' '')))

cc(Mind-6, And-1)
nsubj(said-3, he-2)
parataxis(Mind-6, said-3)
root(ROOT-0, Mind-6)
mark(skate-9, if-7)
nsubj(skate-9, I-8)
advcl(Mind-6, skate-9)
case(you-11, with-10)
nmod:with(skate-9, you-11)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD took)
      (NP (PRP$ my) (JJ other) (NN hand)))
    (. .)))

advmod(took-3, Then-1)
nsubj(took-3, he-2)
root(ROOT-0, took-3)
nmod:poss(hand-6, my-4)
amod(hand-6, other-5)
dobj(took-3, hand-6)

(ROOT
  (S
    (S
      (VP
        (ADVP (RB Just))
        (VB like)
        (NP (DT that))))
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBD were)
        (VP (VBG skating))))
    (. .)))

advmod(like-2, Just-1)
root(ROOT-0, like-2)
dobj(like-2, that-3)
cc(like-2, and-4)
nsubj(skating-7, we-5)
aux(skating-7, were-6)
conj:and(like-2, skating-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (SBAR (RB not) (IN that)
        (S
          (NP (PRP I))
          (VP (VBD had)
            (ADVP (RB never))
            (VP (VBN skated)
              (PP (IN with)
                (NP (DT a) (NN boy)))
              (ADVP (RB before)))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
dep(skated-8, not-3)
mark(skated-8, that-4)
nsubj(skated-8, I-5)
aux(skated-8, had-6)
neg(skated-8, never-7)
dep(was-2, skated-8)
case(boy-11, with-9)
det(boy-11, a-10)
nmod:with(skated-8, boy-11)
advmod(skated-8, before-12)

(ROOT
  (S
    (VP (VB Do) (RB n't)
      (VP (VB be)
        (ADJP (JJ silly))))
    (. .)))

aux(silly-4, Do-1)
neg(silly-4, n't-2)
cop(silly-4, be-3)
root(ROOT-0, silly-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD told)
      (NP (PRP you))
      (ADVP (RB before)))
    (. .)))

nsubj(told-2, I-1)
root(ROOT-0, told-2)
dobj(told-2, you-3)
advmod(told-2, before-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP get)
      (PRT (RP around)))
    (. .)))

nsubj(get-2, I-1)
root(ROOT-0, get-2)
compound:prt(get-2, around-3)

(ROOT
  (S (CC But)
    (NP (DT this))
    (VP (VBD was)
      (ADJP (JJ different)))
    (. .)))

cc(different-4, But-1)
nsubj(different-4, this-2)
cop(different-4, was-3)
root(ROOT-0, different-4)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (JJ smooth)))
    (. !)))

nsubj(smooth-3, He-1)
cop(smooth-3, was-2)
root(ROOT-0, smooth-3)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT a) (JJ big) (NN shot))
          (PP (IN at)
            (NP (NN school))))
        (CC and)
        (NP
          (NP (DT the) (JJS best) (NN dancer))
          (PP (IN in)
            (NP (NN town))))))
    (. .)))

nsubj(shot-5, He-1)
cop(shot-5, was-2)
det(shot-5, a-3)
amod(shot-5, big-4)
root(ROOT-0, shot-5)
case(school-7, at-6)
nmod:at(shot-5, school-7)
cc(shot-5, and-8)
det(dancer-11, the-9)
amod(dancer-11, best-10)
conj:and(shot-5, dancer-11)
case(town-13, in-12)
nmod:in(dancer-11, town-13)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (ADJP (JJ different)))
    (. .)))

nsubj(different-3, This-1)
cop(different-3, was-2)
root(ROOT-0, different-3)

(ROOT
  (S (RB Then)
    (NP (PRP we))
    (VP
      (VP (VBD sat)
        (PP (IN on)
          (NP (DT the) (JJ big) (NN snow) (NN bank)))
        (PP (IN by)
          (NP (DT the) (NN rink))))
      (CC and)
      (ADVP (RB just))
      (VP (VBD watched)))
    (. .)))

advmod(sat-3, Then-1)
nsubj(sat-3, we-2)
nsubj(watched-14, we-2)
root(ROOT-0, sat-3)
case(bank-8, on-4)
det(bank-8, the-5)
amod(bank-8, big-6)
compound(bank-8, snow-7)
nmod:on(sat-3, bank-8)
case(rink-11, by-9)
det(rink-11, the-10)
nmod:by(sat-3, rink-11)
cc(sat-3, and-12)
advmod(watched-14, just-13)
conj:and(sat-3, watched-14)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADJP
          (ADVP (NN cold) (IN at))
          (JJ first))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB pretty) (RB soon))
      (NP (PRP I))
      (VP (VBD got)
        (ADJP (JJ warm))
        (ADVP (DT all) (RP over))))
    (. .)))

nsubj(first-5, It-1)
cop(first-5, was-2)
advmod(first-5, cold-3)
case(cold-3, at-4)
root(ROOT-0, first-5)
cc(first-5, but-7)
advmod(soon-9, pretty-8)
advmod(got-11, soon-9)
nsubj(got-11, I-10)
conj:but(first-5, got-11)
xcomp(got-11, warm-12)
dep(over-14, all-13)
advmod(got-11, over-14)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD threw)
        (NP (DT some) (NN snow))
        (PP (IN at)
          (NP (PRP me)))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD fell)
        (PP (IN in)
          (NP (DT a) (JJ little) (JJ white) (NN shower)))
        (PP (IN on)
          (NP (PRP$ my) (NN hair)))))
    (. .)))

nsubj(threw-2, He-1)
root(ROOT-0, threw-2)
det(snow-4, some-3)
dobj(threw-2, snow-4)
case(me-6, at-5)
nmod:at(threw-2, me-6)
cc(threw-2, and-7)
nsubj(fell-9, it-8)
conj:and(threw-2, fell-9)
case(shower-14, in-10)
det(shower-14, a-11)
amod(shower-14, little-12)
amod(shower-14, white-13)
nmod:in(fell-9, shower-14)
case(hair-17, on-15)
nmod:poss(hair-17, my-16)
nmod:on(fell-9, hair-17)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP (VBD leaned)
      (PRT (RP over))
      (S
        (VP (TO to)
          (VP (VB brush)
            (NP (PRP it))
            (PRT (RP off))))))
    (. .)))

cc(leaned-3, And-1)
nsubj(leaned-3, he-2)
nsubj(brush-6, he-2)
root(ROOT-0, leaned-3)
compound:prt(leaned-3, over-4)
mark(brush-6, to-5)
xcomp(leaned-3, brush-6)
dobj(brush-6, it-7)
compound:prt(brush-6, off-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD held)
      (NP (PRP$ my) (NN breath)))
    (. .)))

nsubj(held-2, I-1)
root(ROOT-0, held-2)
nmod:poss(breath-4, my-3)
dobj(held-2, breath-4)

(ROOT
  (S
    (NP (DT The) (NN night))
    (VP (VBD stood)
      (ADVP (RB still)))
    (. .)))

det(night-2, The-1)
nsubj(stood-3, night-2)
root(ROOT-0, stood-3)
advmod(stood-3, still-4)

(ROOT
  (S
    (ADVP (RB Then))
    (PRN
      (S
        (NP (PRP he))
        (VP
          (VP (VBD sat)
            (PRT (RP up))
            (ADVP (RB straight)))
          (CC and)
          (VP (VBD said))))
      (, ,))
    (`` ``)
    (NP (PRP We))
    (VP (MD 'd)
      (ADVP (RBR better))
      (VP (VB start)
        (PP (IN for)
          (NP (NN home)))
        (ADVP (RB now))))
    (. .) ('' '')))

advmod(start-13, Then-1)
nsubj(sat-3, he-2)
nsubj(said-7, he-2)
parataxis(start-13, sat-3)
compound:prt(sat-3, up-4)
advmod(sat-3, straight-5)
cc(sat-3, and-6)
conj:and(sat-3, said-7)
parataxis(start-13, said-7)
nsubj(start-13, We-10)
aux(start-13, 'd-11)
advmod(start-13, better-12)
root(ROOT-0, start-13)
case(home-15, for-14)
nmod:for(start-13, home-15)
advmod(start-13, now-16)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD went)
      (S
        (VP (TO to)
          (VP (VB get)
            (NP (PRP$ my) (NNS shoes))))))
    (. .)))

nsubj(went-2, He-1)
nsubj(get-4, He-1)
root(ROOT-0, went-2)
mark(get-4, to-3)
xcomp(went-2, get-4)
nmod:poss(shoes-6, my-5)
dobj(get-4, shoes-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADVP (RB still))
      (VP (VBG smiling)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD came))))))
    (. .)))

nsubj(smiling-4, He-1)
aux(smiling-4, was-2)
advmod(smiling-4, still-3)
root(ROOT-0, smiling-4)
advmod(came-7, when-5)
nsubj(came-7, he-6)
advcl(smiling-4, came-7)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD took)
        (PRT (RP off))
        (NP (PRP$ my) (NNS skates)))
      (CC and)
      (VP
        (VP (VBD tied)
          (NP (DT the) (JJ wet) (NN skate) (NNS strings))
          (PP (IN in)
            (NP (DT a) (NN knot))))
        (CC and)
        (VP (VBD put)
          (NP (PRP them))
          (PP (IN over)
            (NP (PRP$ his) (NN shoulder))))))
    (. .)))

nsubj(took-2, He-1)
nsubj(tied-7, He-1)
root(ROOT-0, took-2)
compound:prt(took-2, off-3)
nmod:poss(skates-5, my-4)
dobj(took-2, skates-5)
cc(took-2, and-6)
conj:and(took-2, tied-7)
det(strings-11, the-8)
amod(strings-11, wet-9)
compound(strings-11, skate-10)
dobj(tied-7, strings-11)
case(knot-14, in-12)
det(knot-14, a-13)
nmod:in(tied-7, knot-14)
cc(tied-7, and-15)
conj:and(took-2, put-16)
conj:and(tied-7, put-16)
dobj(put-16, them-17)
case(shoulder-20, over-18)
nmod:poss(shoulder-20, his-19)
nmod:over(put-16, shoulder-20)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP
      (VP (VBD held)
        (PRT (RP out))
        (NP (PRP$ his) (NN hand)))
      (CC and)
      (VP (VBD helped)
        (NP (PRP me))
        (PRT (RP up))
        (PP (IN from)
          (NP (DT the) (NN snow) (NN bank)))))
    (. .)))

advmod(held-3, Then-1)
nsubj(held-3, he-2)
nsubj(helped-8, he-2)
root(ROOT-0, held-3)
compound:prt(held-3, out-4)
nmod:poss(hand-6, his-5)
dobj(held-3, hand-6)
cc(held-3, and-7)
conj:and(held-3, helped-8)
dobj(helped-8, me-9)
compound:prt(helped-8, up-10)
case(bank-14, from-11)
det(bank-14, the-12)
compound(bank-14, snow-13)
nmod:from(helped-8, bank-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (VP (VBG snowing)
        (ADVP (RBR harder))
        (ADVP (RB now))))
    (. .)))

nsubj(snowing-3, It-1)
aux(snowing-3, was-2)
root(ROOT-0, snowing-3)
advmod(snowing-3, harder-4)
advmod(snowing-3, now-5)

(ROOT
  (NP
    (NP (NNP Big))
    (, ,)
    (NP
      (NP (JJ quiet) (NNS flakes))
      (VP (VBG clung)
        (PP (TO to)
          (NP (PRP us)))
        (ADVP (RB lovingly))))
    (. .)))

root(ROOT-0, Big-1)
amod(flakes-4, quiet-3)
appos(Big-1, flakes-4)
acl(flakes-4, clung-5)
case(us-7, to-6)
nmod:to(clung-5, us-7)
advmod(clung-5, lovingly-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was) (RB all)
      (ADJP (RB so) (JJ lovely))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBD was)
            (ADJP (JJ sorry)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD lived)
                    (ADVP
                      (NP
                        (QP (RB only) (DT a) (JJ few))
                        (NNS blocks))
                      (RB away))))))))))
    (. .)))

nsubj(lovely-5, It-1)
cop(lovely-5, was-2)
advmod(lovely-5, all-3)
advmod(lovely-5, so-4)
root(ROOT-0, lovely-5)
mark(sorry-9, that-6)
nsubj(sorry-9, I-7)
cop(sorry-9, was-8)
ccomp(lovely-5, sorry-9)
nsubj(lived-11, I-10)
ccomp(sorry-9, lived-11)
advmod(few-14, only-12)
advmod(few-14, a-13)
nummod(blocks-15, few-14)
nmod:npmod(away-16, blocks-15)
advmod(lived-11, away-16)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP (DT a)
            (ADJP (RB very) (JJ short)
              (CC and)
              (JJ respectable))
            (NN kind))
          (PP (IN of)
            (NP (NN conversation))))))
    (CC and)
    (RB then)
    (S
      (NP (PRP we))
      (VP (VBD were)
        (ADVP (RB home))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(kind-8, a-3)
advmod(short-5, very-4)
amod(kind-8, short-5)
cc(short-5, and-6)
conj:and(short-5, respectable-7)
amod(kind-8, respectable-7)
nsubj(was-2, kind-8)
case(conversation-10, of-9)
nmod:of(kind-8, conversation-10)
cc(was-2, and-11)
advmod(were-14, then-12)
nsubj(were-14, we-13)
conj:and(was-2, were-14)
advmod(were-14, home-15)

(ROOT
  (S
    (NP (DT The) (NN porch) (NN light))
    (VP (VBD was)
      (PP (IN on)))
    (. .)))

det(light-3, The-1)
compound(light-3, porch-2)
nsubj(on-5, light-3)
cop(on-5, was-4)
root(ROOT-0, on-5)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD stood)
        (ADVP (RB there)
          (NP (DT a) (NN moment)))
        (PP (IN by)
          (NP (DT the) (JJ front) (NNS steps)))))
    (CC and)
    (S
      (NP (DT the) (NN snow))
      (VP (VBD turned)
        (NP (NN pinkish))
        (PP (IN in)
          (NP
            (NP (DT the) (NN light))
            (CC and)
            (NP
              (NP (DT a) (JJ few) (JJ feathery) (NNS flakes))
              (VP (VBN settled)
                (PP (IN on)
                  (NP (PRP$ my) (NN hair)))))))))
    (. .)))

nsubj(stood-2, We-1)
root(ROOT-0, stood-2)
advmod(stood-2, there-3)
det(moment-5, a-4)
nmod:npmod(there-3, moment-5)
case(steps-9, by-6)
det(steps-9, the-7)
amod(steps-9, front-8)
nmod:by(stood-2, steps-9)
cc(stood-2, and-10)
det(snow-12, the-11)
nsubj(turned-13, snow-12)
conj:and(stood-2, turned-13)
dobj(turned-13, pinkish-14)
case(light-17, in-15)
det(light-17, the-16)
nmod:in(turned-13, light-17)
cc(light-17, and-18)
det(flakes-22, a-19)
amod(flakes-22, few-20)
amod(flakes-22, feathery-21)
nmod:in(turned-13, flakes-22)
conj:and(light-17, flakes-22)
acl(flakes-22, settled-23)
case(hair-26, on-24)
nmod:poss(hair-26, my-25)
nmod:on(settled-23, hair-26)

(ROOT
  (S (RB Then)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD took)
          (NP (PRP$ my) (NNS skates)))
        (CC and)
        (VP
          (VP (VBD put)
            (NP (PRP them))
            (PP (IN over)
              (NP (PRP$ my) (NN shoulder))))
          (CC and)
          (VP (VBD stood)
            (S
              (ADJP (RB very) (RB very) (JJ close)
                (PP (TO to)
                  (NP (PRP$ my) (NN cheek)))))))))
    (CC and)
    (S
      (NP (NNP softly))
      (VP (VBD said) (, ,) (`` ``)
        (ADJP (JJ Good)
          (NP (NN night)))
        (ADVP (RB now))))
    (. .)))

advmod(took-3, Then-1)
nsubj(took-3, he-2)
nsubj(put-7, he-2)
root(ROOT-0, took-3)
nmod:poss(skates-5, my-4)
dobj(took-3, skates-5)
cc(took-3, and-6)
conj:and(took-3, put-7)
dobj(put-7, them-8)
case(shoulder-11, over-9)
nmod:poss(shoulder-11, my-10)
nmod:over(put-7, shoulder-11)
cc(put-7, and-12)
conj:and(took-3, stood-13)
conj:and(put-7, stood-13)
advmod(cheek-19, very-14)
advmod(cheek-19, very-15)
case(cheek-19, close-16)
mwe(close-16, to-17)
nmod:poss(cheek-19, my-18)
nmod:close_to(stood-13, cheek-19)
cc(took-3, and-20)
nsubj(said-22, softly-21)
conj:and(took-3, said-22)
xcomp(said-22, Good-25)
nmod:tmod(Good-25, night-26)
advmod(said-22, now-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB call)
        (NP (PRP you))))
    (. .) ('' '')))

nsubj(call-3, I-1)
aux(call-3, 'll-2)
root(ROOT-0, call-3)
dobj(call-3, you-4)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB call)
        (NP (PRP you))))
    (. .) ('' '')))

nsubj(call-4, I-2)
aux(call-4, 'll-3)
root(ROOT-0, call-4)
dobj(call-4, you-5)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD was)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP he))
          (VP (VBD said) (, ,) (`` ``)
            (S
              (NP (PRP I))
              (VP (MD 'll)
                (VP (VB call)
                  (NP (PRP you)))))))))
    (. .) ('' '')))

nsubj(was-2, That-1)
root(ROOT-0, was-2)
dobj(said-5, what-3)
nsubj(said-5, he-4)
ccomp(was-2, said-5)
nsubj(call-10, I-8)
aux(call-10, 'll-9)
ccomp(said-5, call-10)
dobj(call-10, you-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD could) (RB not)
      (VP (VB sleep)
        (NP (DT all) (NN night))))
    (. .)))

nsubj(sleep-4, I-1)
aux(sleep-4, could-2)
neg(sleep-4, not-3)
root(ROOT-0, sleep-4)
det(night-6, all-5)
nmod:tmod(sleep-4, night-6)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD was)
      (NP (JJ last) (NNP Thursday)))
    (. .)))

nsubj(Thursday-4, That-1)
cop(Thursday-4, was-2)
amod(Thursday-4, last-3)
root(ROOT-0, Thursday-4)

(ROOT
  (S
    (NP (NNP Tonight))
    (VP (VBZ is)
      (NP (NNP Tuesday)))
    (. .)))

nsubj(Tuesday-3, Tonight-1)
cop(Tuesday-3, is-2)
root(ROOT-0, Tuesday-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB think)
        (PP (IN of)
          (NP
            (NP
              (NP (NN anything))
              (PP (CC but)
                (NP (NNS snowflakes)
                  (CC and)
                  (NN ice) (NNS skates))))
            (CC and)
            (NP
              (NP (DT a) (JJ yellow) (NN moon))
              (CC and)
              (NP (NNP Thursday)))))
        (NP (NN night))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, can-2)
neg(think-4, not-3)
root(ROOT-0, think-4)
case(anything-6, of-5)
nmod:of(think-4, anything-6)
case(snowflakes-8, but-7)
nmod:but(anything-6, snowflakes-8)
cc(snowflakes-8, and-9)
compound(skates-11, ice-10)
nmod:but(anything-6, skates-11)
conj:and(snowflakes-8, skates-11)
cc(anything-6, and-12)
det(moon-15, a-13)
amod(moon-15, yellow-14)
nmod:of(think-4, moon-15)
conj:and(anything-6, moon-15)
cc(moon-15, and-16)
conj:and(anything-6, Thursday-17)
conj:and(moon-15, Thursday-17)
nmod:tmod(think-4, night-18)

(ROOT
  (S
    (NP (DT The) (NN telephone))
    (VP (VBZ is)
      (VP (VBG sitting)
        (PP (IN on)
          (NP (DT the) (NN corner) (NN tablesilent)))))
    (. .)))

det(telephone-2, The-1)
nsubj(sitting-4, telephone-2)
aux(sitting-4, is-3)
root(ROOT-0, sitting-4)
case(tablesilent-8, on-5)
det(tablesilent-8, the-6)
compound(tablesilent-8, corner-7)
nmod:on(sitting-4, tablesilent-8)

(ROOT
  (S
    (NP (PRP$ My) (NN heart))
    (ADVP (RB still))
    (VP (VBZ prays)
      (SBAR (CC but)
        (S
          (NP (PRP$ my) (NN mind))
          (ADVP (RB just))
          (VP (VBZ laughs)))))
    (. .)))

nmod:poss(heart-2, My-1)
nsubj(prays-4, heart-2)
advmod(prays-4, still-3)
root(ROOT-0, prays-4)
cc(laughs-9, but-5)
nmod:poss(mind-7, my-6)
nsubj(laughs-9, mind-7)
advmod(laughs-9, just-8)
ccomp(prays-4, laughs-9)

(ROOT
  (S
    (S
      (ADVP (JJ Outside))
      (NP (DT the) (NN night))
      (VP (VBZ is)
        (ADVP (RB still))))
    (, ,) (IN so)
    (S
      (ADVP (RB still))
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD will)
              (VP (VB go)
                (ADJP (JJ crazy))))))))
    (. .)))

advmod(is-4, Outside-1)
det(night-3, the-2)
nsubj(is-4, night-3)
root(ROOT-0, is-4)
advmod(is-4, still-5)
dep(is-4, so-7)
advmod(think-10, still-8)
nsubj(think-10, I-9)
parataxis(is-4, think-10)
nsubj(go-13, I-11)
aux(go-13, will-12)
ccomp(think-10, go-13)
xcomp(go-13, crazy-14)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (ADJP (RB even) (JJ sad))
      (SBAR (IN because)
        (S
          (PRN (, ,)
            (ADVP (DT all))
            (PP (IN of)
              (NP (DT a) (JJ sudden)))
            (, ,))
          (NP (PRP I))
          (VP (VBP know)))))
    (. .)))

advmod(sad-7, However-1)
nsubj(sad-7, I-3)
cop(sad-7, am-4)
neg(sad-7, not-5)
advmod(sad-7, even-6)
root(ROOT-0, sad-7)
mark(know-16, because-8)
dep(sudden-13, all-10)
case(sudden-13, of-11)
det(sudden-13, a-12)
dep(know-16, sudden-13)
nsubj(know-16, I-15)
advcl(sad-7, know-16)

(ROOT
  (S
    (S
      (PP (IN For)
        (ADVP (RB suddenly)))
      (NP (PRP I))
      (VP (VBP know)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT the) (NNS stars))
            (VP (VBD knew)
              (SBAR
                (S
                  (NP (PDT all) (DT the) (NN timehe))
                  (VP (MD will)
                    (ADVP
                      (ADVP (RB never))
                      (, ,)
                      (ADVP (RB never)))
                    (VP (VB callnever))))))))))
    (. .)))

case(suddenly-2, For-1)
advcl:for(know-4, suddenly-2)
nsubj(know-4, I-3)
root(ROOT-0, know-4)
nsubj(know-7, I-6)
parataxis(know-4, know-7)
dobj(knew-11, what-8)
det(stars-10, the-9)
nsubj(knew-11, stars-10)
ccomp(know-7, knew-11)
det:predet(timehe-14, all-12)
det(timehe-14, the-13)
nsubj(callnever-19, timehe-14)
aux(callnever-19, will-15)
advmod(callnever-19, never-16)
advmod(never-16, never-18)
ccomp(knew-11, callnever-19)

