(ROOT
  (S
    (NP (PRP$ Its)
      (ADJP (RB so) (JJ easy)
        (S
          (VP (TO to)
            (VP (VB forget)
              (NP
                (NP (DT the) (JJ simple) (NNS things))
                (PP (IN in)
                  (NP (NN life))))
              (, ,)
              (PP (IN like)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP it))
                    (VP (VBZ feels)
                      (SBAR (IN like)
                        (S
                          (VP
                            (VP (TO to)
                              (VP (VB swing)
                                (PP (IN on)
                                  (NP (DT a) (NN swing)))))
                            (, ,)
                            (CC or)
                            (VP (TO to)))))))))))))
      (NN watch))
    (VP (VBZ leaves)
      (S
        (VP (VBG blowing)
          (PP (IN in)
            (NP (DT the) (NN wind))))))
    (. .)))

nmod:poss(watch-25, Its-1)
advmod(easy-3, so-2)
amod(watch-25, easy-3)
mark(forget-5, to-4)
xcomp(easy-3, forget-5)
det(things-8, the-6)
amod(things-8, simple-7)
dobj(forget-5, things-8)
case(life-10, in-9)
nmod:in(things-8, life-10)
mark(feels-15, like-12)
dobj(feels-15, what-13)
nsubj(feels-15, it-14)
advcl(forget-5, feels-15)
mark(swing-18, like-16)
mark(swing-18, to-17)
advcl(feels-15, swing-18)
case(swing-21, on-19)
det(swing-21, a-20)
nmod:on(swing-18, swing-21)
cc(swing-18, or-23)
advcl(feels-15, to-24)
conj:or(swing-18, to-24)
nsubj(leaves-26, watch-25)
root(ROOT-0, leaves-26)
xcomp(leaves-26, blowing-27)
case(wind-30, in-28)
det(wind-30, the-29)
nmod:in(blowing-27, wind-30)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP we))
        (VP
          (VP (VB grow)
            (PRT (RP up)))
          (CC and)
          (VP (VB get)
            (ADJP (RB so) (JJ busy))))))
    (, ,)
    (NP (PRP$ its)
      (ADJP (JJ easy)
        (S
          (VP (TO to)
            (VP (VB forget)
              (FRAG
                (WHADJP (WRB how) (JJ much)))))))
      (NN fun) (NN life))
    (VP (MD can)
      (VP (VB be) (, ,)
        (PP (IN like))
        (SBAR
          (WHADJP (WRB how) (JJ much))
          (S
            (NP
              (NP (NN fun))
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (S
                      (VP
                        (VP (TO to)
                          (VP (VB eat)
                            (NP
                              (NP (DT a) (NN piece))
                              (PP (IN of)
                                (NP (JJ gooey) (NN pizza))))))
                        (CC or)
                        (VP (TO to)
                          (VP (VB make)))))))))
            (VP (VBZ faces)
              (PP (IN in)
                (NP (DT the) (NN mirror))))))))
    (. .)))

advmod(grow-3, When-1)
nsubj(grow-3, we-2)
nsubj(get-6, we-2)
advcl(like-21, grow-3)
compound:prt(grow-3, up-4)
cc(grow-3, and-5)
conj:and(grow-3, get-6)
advcl(like-21, get-6)
advmod(busy-8, so-7)
xcomp(get-6, busy-8)
nmod:poss(life-17, its-10)
amod(life-17, easy-11)
mark(forget-13, to-12)
xcomp(easy-11, forget-13)
advmod(much-15, how-14)
dep(forget-13, much-15)
compound(life-17, fun-16)
nsubj(like-21, life-17)
aux(like-21, can-18)
cop(like-21, be-19)
root(ROOT-0, like-21)
advmod(much-23, how-22)
dep(faces-37, much-23)
nsubj(faces-37, fun-24)
nsubj(is-26, it-25)
acl:relcl(fun-24, is-26)
mark(eat-28, to-27)
ccomp(is-26, eat-28)
det(piece-30, a-29)
dobj(eat-28, piece-30)
case(pizza-33, of-31)
amod(pizza-33, gooey-32)
nmod:of(piece-30, pizza-33)
cc(eat-28, or-34)
mark(make-36, to-35)
ccomp(is-26, make-36)
conj:or(eat-28, make-36)
ccomp(like-21, faces-37)
case(mirror-40, in-38)
det(mirror-40, the-39)
nmod:in(faces-37, mirror-40)

(ROOT
  (S
    (NP
      (NP (PRP$ Its)
        (ADJP (JJ easy)
          (S
            (VP (TO to)
              (VP (VB forget)
                (SBAR
                  (WHADVP (WRB how)
                    (ADJP (JJ wonderful)))
                  (S
                    (NP (PRP it))
                    (VP (VBZ is)
                      (S
                        (VP (TO to)
                          (VP (VB let)
                            (NP (PRP$ our) (NNS minds))))))))))))
        (NNS wander))
      (CC and)
      (NP
        (NP (NN imagine-imagine) (RB perhaps))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP$ its))
            (VP (VBP like)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (NP
                      (NP
                        (NP (DT a) (NN dinosaur))
                        (, ,)
                        (CC or)
                        (NP (DT an) (NNS octopus))
                        (, ,))
                      (CC or)
                      (NP (RB even) (DT a)))))))))))
    (VP (VBD mermaid)
      (S
        (VP (VBG gliding)
          (PP (IN through)
            (NP (DT the) (NN sea))))))
    (. .)))

nmod:poss(wander-13, Its-1)
amod(wander-13, easy-2)
mark(forget-4, to-3)
xcomp(easy-2, forget-4)
advmod(is-8, how-5)
dep(how-5, wonderful-6)
nsubj(is-8, it-7)
nsubj(let-10, it-7)
ccomp(forget-4, is-8)
mark(let-10, to-9)
xcomp(is-8, let-10)
nmod:poss(minds-12, our-11)
dobj(let-10, minds-12)
nsubj(mermaid-32, wander-13)
cc(wander-13, and-14)
conj:and(wander-13, imagine-imagine-15)
dobj(like-19, imagine-imagine-15)
nsubj(dinosaur-23, imagine-imagine-15)
nsubj(mermaid-32, imagine-imagine-15)
advmod(imagine-imagine-15, perhaps-16)
ref(imagine-imagine-15, what-17)
nsubj(like-19, its-18)
acl:relcl(imagine-imagine-15, like-19)
mark(dinosaur-23, to-20)
cop(dinosaur-23, be-21)
det(dinosaur-23, a-22)
xcomp(like-19, dinosaur-23)
cc(dinosaur-23, or-25)
det(octopus-27, an-26)
xcomp(like-19, octopus-27)
conj:or(dinosaur-23, octopus-27)
cc(dinosaur-23, or-29)
advmod(a-31, even-30)
xcomp(like-19, a-31)
conj:or(dinosaur-23, a-31)
root(ROOT-0, mermaid-32)
xcomp(mermaid-32, gliding-33)
case(sea-36, through-34)
det(sea-36, the-35)
nmod:through(gliding-33, sea-36)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT a) (NN way)
        (S
          (VP (TO to)
            (VP (VB help)
              (S
                (NP (PRP us))
                (VP (VB remember)
                  (NP
                    (NP (DT these) (NNS joys))
                    (PP (IN of)
                      (NP
                        (NP
                          (NP (NN childhood))
                          (, ,)
                          (NP (DT the) (NN fun))
                          (, ,)
                          (NP
                            (NP (JJ silly) (, ,) (JJ imaginary) (NNS things))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (VBD were)
                                  (ADVP (RB once))
                                  (NP
                                    (NP (PDT such) (DT a) (JJ big) (NN part))
                                    (PP (IN of)
                                      (NP (PRP$ our) (NNS lives)))))))))
                        (: :)
                        (S
                          (VP (TO to)
                            (VP (VB read)
                              (NP (JJ childrens) (NN poetry)))))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(way-4, a-3)
nsubj(is-2, way-4)
mark(help-6, to-5)
acl(way-4, help-6)
nsubj(remember-8, us-7)
ccomp(help-6, remember-8)
det(joys-10, these-9)
dobj(remember-8, joys-10)
case(childhood-12, of-11)
nmod:of(joys-10, childhood-12)
det(fun-15, the-14)
appos(childhood-12, fun-15)
amod(things-20, silly-17)
amod(things-20, imaginary-19)
appos(childhood-12, things-20)
nsubj(part-27, things-20)
ref(things-20, that-21)
cop(part-27, were-22)
advmod(part-27, once-23)
det:predet(part-27, such-24)
det(part-27, a-25)
amod(part-27, big-26)
acl:relcl(things-20, part-27)
case(lives-30, of-28)
nmod:poss(lives-30, our-29)
nmod:of(part-27, lives-30)
mark(read-33, to-32)
acl(childhood-12, read-33)
amod(poetry-35, childrens-34)
dobj(read-33, poetry-35)

(ROOT
  (S
    (NP (JJ Childrens) (NN poetry))
    (VP (VBZ is) (RB not)
      (ADVP (RB just))
      (PP (IN for)
        (NP (NNS children))))
    (. .)))

amod(poetry-2, Childrens-1)
nsubj(children-7, poetry-2)
cop(children-7, is-3)
neg(children-7, not-4)
advmod(children-7, just-5)
case(children-7, for-6)
root(ROOT-0, children-7)

(ROOT
  (NP
    (NP (PRP$ Its))
    (PP (IN for)
      (NP
        (NP (NN anyone))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ knows)
              (SBAR
                (WHADVP (WRB how)
                  (NP (JJ special)))
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (S
                      (VP
                        (VP (TO to)
                          (VP (VB be)))
                        (CC and)
                        (VP (TO to)
                          (VP (VB feel)
                            (PP (IN like)
                              (NP (DT a) (NN child)))))))))))))))
    (. .)))

root(ROOT-0, Its-1)
case(anyone-3, for-2)
nmod:for(Its-1, anyone-3)
nsubj(knows-5, anyone-3)
ref(anyone-3, who-4)
acl:relcl(anyone-3, knows-5)
advmod(is-9, how-6)
dep(how-6, special-7)
nsubj(is-9, it-8)
ccomp(knows-5, is-9)
mark(be-11, to-10)
ccomp(is-9, be-11)
cc(be-11, and-12)
mark(feel-14, to-13)
ccomp(is-9, feel-14)
conj:and(be-11, feel-14)
case(child-17, like-15)
det(child-17, a-16)
nmod:like(feel-14, child-17)

(ROOT
  (S
    (NP (PRP We))
    (VP (VB invite)
      (S
        (NP (PRP you))
        (ADVP (RB now))
        (VP (TO to)
          (VP (VB begin)
            (S
              (VP (VBG exploring)
                (PP (IN for)
                  (NP (PRP yourself)))
                (NP
                  (NP (DT the) (NNS delightfulness))
                  (PP (IN of)
                    (NP (JJ childrens) (NN poetry))))))))))
    (. .)))

nsubj(invite-2, We-1)
root(ROOT-0, invite-2)
dobj(invite-2, you-3)
nsubj(begin-6, you-3)
advmod(begin-6, now-4)
mark(begin-6, to-5)
xcomp(invite-2, begin-6)
xcomp(begin-6, exploring-7)
case(yourself-9, for-8)
nmod:for(exploring-7, yourself-9)
det(delightfulness-11, the-10)
dobj(exploring-7, delightfulness-11)
case(poetry-14, of-12)
amod(poetry-14, childrens-13)
nmod:of(delightfulness-11, poetry-14)

(ROOT
  (S
    (NP (DT The) (NN following))
    (VP (VBP are)
      (NP
        (NP (CD two) (NNS selections))
        (PP (IN from)
          (NP
            (NP (DT A) (NNP Childs) (NNP Garden))
            (PP (IN of)
              (NP (NNP Verses))))))
      (PP (IN by)
        (NP (NNP Robert) (NNP Louis) (NNP Stevenson))))
    (. .)))

det(following-2, The-1)
nsubj(selections-5, following-2)
cop(selections-5, are-3)
nummod(selections-5, two-4)
root(ROOT-0, selections-5)
case(Garden-9, from-6)
det(Garden-9, A-7)
compound(Garden-9, Childs-8)
nmod:from(selections-5, Garden-9)
case(Verses-11, of-10)
nmod:of(Garden-9, Verses-11)
case(Stevenson-15, by-12)
compound(Stevenson-15, Robert-13)
compound(Stevenson-15, Louis-14)
nmod:by(selections-5, Stevenson-15)

