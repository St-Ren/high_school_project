(ROOT
  (S
    (NP (DT The) (NN Earth))
    (VP (VBZ is)
      (VP (VBG getting)
        (NP (JJR warmer))
        (SBAR (IN because)
          (S
            (NP (NNS people))
            (VP (VBP are)
              (VP (VBG adding)
                (NP (NNS gases))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN environment))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (NN trap)
                          (NP (NN heat)))))))))))))
    (. .)))

det(Earth-2, The-1)
nsubj(getting-4, Earth-2)
aux(getting-4, is-3)
root(ROOT-0, getting-4)
dobj(getting-4, warmer-5)
mark(adding-9, because-6)
nsubj(adding-9, people-7)
aux(adding-9, are-8)
advcl(getting-4, adding-9)
dobj(adding-9, gases-10)
case(environment-13, to-11)
det(environment-13, the-12)
nmod:to(adding-9, environment-13)
nsubj(trap-15, environment-13)
ref(environment-13, that-14)
acl:relcl(environment-13, trap-15)
dobj(trap-15, heat-16)

(ROOT
  (S
    (NP (JJ Many) (NNS scientists))
    (VP (VBP regard)
      (S
        (VP (VBG burning)
          (NP
            (ADJP (RB too) (JJ much))
            (JJ fossil) (NN fuel))
          (PP (IN as)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ main) (NNS causes))
                  (PP (IN of)
                    (NP (JJ global) (NN warming))))))))))
    (. .)))

amod(scientists-2, Many-1)
nsubj(regard-3, scientists-2)
root(ROOT-0, regard-3)
xcomp(regard-3, burning-4)
advmod(much-6, too-5)
amod(fuel-8, much-6)
amod(fuel-8, fossil-7)
dobj(burning-4, fuel-8)
case(one-10, as-9)
nmod:as(burning-4, one-10)
case(causes-14, of-11)
det(causes-14, the-12)
amod(causes-14, main-13)
nmod:of(one-10, causes-14)
case(warming-17, of-15)
amod(warming-17, global-16)
nmod:of(causes-14, warming-17)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (JJ global) (NNS temperatures))
        (VP (VBP rise))))
    (, ,)
    (NP
      (NP (PRP$ our) (NN climate))
      (CC and)
      (NP (PRP$ our) (NN environment)))
    (VP (VB change)
      (ADVP (RB greatly)))
    (. .)))

mark(rise-4, As-1)
amod(temperatures-3, global-2)
nsubj(rise-4, temperatures-3)
advcl(change-11, rise-4)
nmod:poss(climate-7, our-6)
nsubj(change-11, climate-7)
cc(climate-7, and-8)
nmod:poss(environment-10, our-9)
conj:and(climate-7, environment-10)
nsubj(change-11, environment-10)
root(ROOT-0, change-11)
advmod(change-11, greatly-12)

(ROOT
  (S
    (NP
      (NP (NNS People))
      (, ,)
      (NP (NNS animals))
      (, ,)
      (CC and)
      (NP (PRP$ our) (VBG living) (NN environment)))
    (VP (VBP are)
      (VP (VBG experiencing)
        (NP
          (NP (DT the) (NNS consequences))
          (PP (IN of)
            (NP
              (NP (DT these) (NNS changes))
              (PP (IN in)
                (NP (JJ many) (NNS ways))))))))
    (. .)))

nsubj(experiencing-10, People-1)
conj:and(People-1, animals-3)
nsubj(experiencing-10, animals-3)
cc(People-1, and-5)
nmod:poss(environment-8, our-6)
amod(environment-8, living-7)
conj:and(People-1, environment-8)
nsubj(experiencing-10, environment-8)
aux(experiencing-10, are-9)
root(ROOT-0, experiencing-10)
det(consequences-12, the-11)
dobj(experiencing-10, consequences-12)
case(changes-15, of-13)
det(changes-15, these-14)
nmod:of(consequences-12, changes-15)
case(ways-18, in-16)
amod(ways-18, many-17)
nmod:in(changes-15, ways-18)

(ROOT
  (S
    (NP (DT The) (JJ extreme) (NN weather))
    (VP (MD may)
      (VP (VB be)
        (NP
          (NP (DT the)
            (ADJP (RBS most) (JJ serious))
            (NN result))
          (PP (IN of)
            (NP (NN climate) (NN change))))))
    (. .)))

det(weather-3, The-1)
amod(weather-3, extreme-2)
nsubj(result-9, weather-3)
aux(result-9, may-4)
cop(result-9, be-5)
det(result-9, the-6)
advmod(serious-8, most-7)
amod(result-9, serious-8)
root(ROOT-0, result-9)
case(change-12, of-10)
compound(change-12, climate-11)
nmod:of(result-9, change-12)

(ROOT
  (S
    (NP (NNS Snowstorms)
      (CC and)
      (NNS heatwaves))
    (VP (VBP are)
      (NP (NNS examples)))
    (. .)))

nsubj(examples-5, Snowstorms-1)
cc(Snowstorms-1, and-2)
conj:and(Snowstorms-1, heatwaves-3)
nsubj(examples-5, heatwaves-3)
cop(examples-5, are-4)
root(ROOT-0, examples-5)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ recent) (NNS years)))
    (, ,)
    (NP
      (NP (NNS thousands))
      (PP (IN of)
        (NP
          (NP (NNS people))
          (PP (IN in)
            (NP (NNP Europe)
              (CC and)
              (NNP North) (NNP America))))))
    (VP (VBD were)
      (VP
        (VP (VBN hurt))
        (, ,)
        (VP (VBN made)
          (S
            (ADJP (RB ill))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB even))
          (VBN killed)
          (PP (RB because) (IN of)
            (NP (DT the)
              (ADJP (RB extremely) (JJ high)
                (CC or)
                (JJ low))
              (NNS temperatures))))))
    (. .)))

case(years-3, In-1)
amod(years-3, recent-2)
nmod:in(hurt-14, years-3)
nsubjpass(hurt-14, thousands-5)
nsubjpass(made-16, thousands-5)
nsubjpass(killed-21, thousands-5)
case(people-7, of-6)
nmod:of(thousands-5, people-7)
case(America-12, in-8)
compound(America-12, Europe-9)
cc(Europe-9, and-10)
conj:and(Europe-9, North-11)
compound(America-12, North-11)
nmod:in(people-7, America-12)
auxpass(hurt-14, were-13)
root(ROOT-0, hurt-14)
conj:and(hurt-14, made-16)
xcomp(made-16, ill-17)
cc(hurt-14, and-19)
advmod(killed-21, even-20)
conj:and(hurt-14, killed-21)
case(temperatures-29, because-22)
mwe(because-22, of-23)
det(temperatures-29, the-24)
advmod(high-26, extremely-25)
amod(temperatures-29, high-26)
cc(high-26, or-27)
conj:or(high-26, low-28)
amod(temperatures-29, low-28)
nmod:because_of(killed-21, temperatures-29)

(ROOT
  (S
    (NP
      (NP (DT An) (NN increase))
      (PP (IN of)
        (NP (NNS droughts)
          (CC and)
          (NNS floods))))
    (VP
      (VP
        (ADVP (RB also))
        (VBZ damages)
        (NP (NN food) (NN production)))
      (CC and)
      (VP (VBZ causes)
        (NP (JJ serious) (NN illness))
        (PP (IN in)
          (NP (NNP Asia)
            (CC and)
            (NNP Africa)))))
    (. .)))

det(increase-2, An-1)
nsubj(damages-8, increase-2)
nsubj(causes-12, increase-2)
case(droughts-4, of-3)
nmod:of(increase-2, droughts-4)
cc(droughts-4, and-5)
nmod:of(increase-2, floods-6)
conj:and(droughts-4, floods-6)
advmod(damages-8, also-7)
root(ROOT-0, damages-8)
compound(production-10, food-9)
dobj(damages-8, production-10)
cc(damages-8, and-11)
conj:and(damages-8, causes-12)
amod(illness-14, serious-13)
dobj(causes-12, illness-14)
case(Asia-16, in-15)
nmod:in(causes-12, Asia-16)
cc(Asia-16, and-17)
nmod:in(causes-12, Africa-18)
conj:and(Asia-16, Africa-18)

(ROOT
  (S (`` ``)
    (ADVP (RB Can))
    (NP (PRP we))
    (VP (VBP do)
      (NP (NN something))
      (S
        (VP (TO to)
          (VP (VB lessen)
            (NP
              (NP (DT the) (NN impact))
              (PP (IN of)
                (NP (NN climate) (NN change))))))))
    (. ?) ('' '')))

advmod(do-4, Can-2)
nsubj(do-4, we-3)
root(ROOT-0, do-4)
dobj(do-4, something-5)
mark(lessen-7, to-6)
advcl(do-4, lessen-7)
det(impact-9, the-8)
dobj(lessen-7, impact-9)
case(change-12, of-10)
compound(change-12, climate-11)
nmod:of(impact-9, change-12)

(ROOT
  (S
    (NP (JJ Many) (NNS people))
    (VP (VBP ask)
      (NP (DT this) (NN question)))
    (. .)))

amod(people-2, Many-1)
nsubj(ask-3, people-2)
root(ROOT-0, ask-3)
det(question-5, this-4)
dobj(ask-3, question-5)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Taiwan)))
    (, ,)
    (NP (NNS people))
    (VP (VBP have)
      (VP (VBN taken)
        (NP (NN action))))
    (. .)))

case(Taiwan-2, In-1)
nmod:in(taken-6, Taiwan-2)
nsubj(taken-6, people-4)
aux(taken-6, have-5)
root(ROOT-0, taken-6)
dobj(taken-6, action-7)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP (EX there))
    (VP (VBP are)
      (NP (JJ new) (NNS laws)
        (S
          (VP (TO to)
            (VP (VB push)
              (PP (IN for)
                (S
                  (VP (VBG developing)
                    (NP
                      (NP
                        (ADJP (JJ green)
                          (CC and)
                          (JJ clean))
                        (NN energy))
                      (PP (JJ such) (IN as)
                        (NP
                          (NP (NN wind))
                          (CC and)
                          (NP (JJ solar) (NN power)))))))))))))
    (. .)))

case(example-2, For-1)
nmod:for(are-5, example-2)
expl(are-5, there-4)
root(ROOT-0, are-5)
amod(laws-7, new-6)
nsubj(are-5, laws-7)
mark(push-9, to-8)
acl(laws-7, push-9)
mark(developing-11, for-10)
advcl(push-9, developing-11)
amod(energy-15, green-12)
cc(green-12, and-13)
conj:and(green-12, clean-14)
amod(energy-15, clean-14)
dobj(developing-11, energy-15)
case(wind-18, such-16)
mwe(such-16, as-17)
nmod:such_as(energy-15, wind-18)
cc(wind-18, and-19)
amod(power-21, solar-20)
nmod:such_as(energy-15, power-21)
conj:and(wind-18, power-21)

(ROOT
  (S
    (NP (DT The) (JJ new) (NNS policies))
    (VP (VBP aim)
      (S
        (VP (TO to)
          (VP (VB reduce)
            (NP
              (NP (DT the) (NN use))
              (PP (IN of)
                (NP (JJ fossil) (NNS fuels)
                  (CC and)
                  (NN carbon) (NNS emissions))))))))
    (. .)))

det(policies-3, The-1)
amod(policies-3, new-2)
nsubj(aim-4, policies-3)
nsubj(reduce-6, policies-3)
root(ROOT-0, aim-4)
mark(reduce-6, to-5)
xcomp(aim-4, reduce-6)
det(use-8, the-7)
dobj(reduce-6, use-8)
case(fuels-11, of-9)
amod(fuels-11, fossil-10)
nmod:of(use-8, fuels-11)
cc(fuels-11, and-12)
compound(emissions-14, carbon-13)
nmod:of(use-8, emissions-14)
conj:and(fuels-11, emissions-14)

(ROOT
  (S
    (NP
      (NP (NNP Electric) (NNS scooters))
      (CC and)
      (NP (NNS bikes)))
    (VP (VBP are)
      (ADVP (RB also))
      (ADJP
        (ADVP (RBR more)
          (CC and)
          (RBR more))
        (JJ popular)))
    (. .)))

compound(scooters-2, Electric-1)
nsubj(popular-10, scooters-2)
cc(scooters-2, and-3)
conj:and(scooters-2, bikes-4)
nsubj(popular-10, bikes-4)
cop(popular-10, are-5)
advmod(popular-10, also-6)
advmod(popular-10, more-7)
cc(more-7, and-8)
conj:and(more-7, more-9)
advmod(popular-10, more-9)
root(ROOT-0, popular-10)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP hope)
      (S
        (VP (TO to)
          (VP
            (VP (VB slow)
              (PRT (RP down))
              (NP (DT the) (NN climate) (NN change))
              (PP (IN by)
                (S
                  (VP (VBG releasing)
                    (NP (JJR less) (NN carbon))))))
            (CC and)
            (VP (VB heat)
              (PP (IN into)
                (NP (DT the) (NN air))))))))
    (. .)))

nsubj(hope-2, People-1)
nsubj(slow-4, People-1)
nsubj(heat-14, People-1)
root(ROOT-0, hope-2)
mark(slow-4, to-3)
xcomp(hope-2, slow-4)
compound:prt(slow-4, down-5)
det(change-8, the-6)
compound(change-8, climate-7)
dobj(slow-4, change-8)
mark(releasing-10, by-9)
advcl(slow-4, releasing-10)
amod(carbon-12, less-11)
dobj(releasing-10, carbon-12)
cc(slow-4, and-13)
xcomp(hope-2, heat-14)
conj:and(slow-4, heat-14)
case(air-17, into-15)
det(air-17, the-16)
nmod:into(heat-14, air-17)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNS people))
        (VP (VBP view)
          (NP (DT the) (NN climate) (NN change))
          (PP (IN as)
            (NP (DT a) (JJ serious) (NN thing))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP understand)
      (SBAR (IN that)
        (S
          (S
            (VP (VBG dealing)
              (PP (IN with)
                (NP (NN climate) (NN change)))))
          (VP (VBZ is) (RB not)
            (NP (DT an) (JJ easy) (NN job))))))
    (. .)))

advmod(view-3, When-1)
nsubj(view-3, people-2)
advcl(understand-13, view-3)
det(change-6, the-4)
compound(change-6, climate-5)
dobj(view-3, change-6)
case(thing-10, as-7)
det(thing-10, a-8)
amod(thing-10, serious-9)
nmod:as(view-3, thing-10)
nsubj(understand-13, they-12)
root(ROOT-0, understand-13)
mark(job-23, that-14)
csubj(job-23, dealing-15)
case(change-18, with-16)
compound(change-18, climate-17)
nmod:with(dealing-15, change-18)
cop(job-23, is-19)
neg(job-23, not-20)
det(job-23, an-21)
amod(job-23, easy-22)
ccomp(understand-13, job-23)

(ROOT
  (S
    (NP (NN Everyone))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB work)
            (ADVP (RB together))
            (PP (IN for)
              (NP (DT the) (VBG living) (NN environment)))))))
    (. .)))

nsubj(has-2, Everyone-1)
nsubj(work-4, Everyone-1)
root(ROOT-0, has-2)
mark(work-4, to-3)
xcomp(has-2, work-4)
advmod(work-4, together-5)
case(environment-9, for-6)
det(environment-9, the-7)
amod(environment-9, living-8)
nmod:for(work-4, environment-9)

(ROOT
  (S
    (S
      (VP (VBG Adopting)
        (NP (JJ new) (NNS lifestyles))
        (PP (IN with)
          (NP (JJR less) (NN carbon) (NNS emissions)))))
    (VP (MD can)
      (VP (VB be)
        (NP (DT a)
          (ADJP (RB very) (JJ good))
          (NN start))))
    (. .)))

csubj(start-13, Adopting-1)
amod(lifestyles-3, new-2)
dobj(Adopting-1, lifestyles-3)
case(emissions-7, with-4)
amod(emissions-7, less-5)
compound(emissions-7, carbon-6)
nmod:with(Adopting-1, emissions-7)
aux(start-13, can-8)
cop(start-13, be-9)
det(start-13, a-10)
advmod(good-12, very-11)
amod(start-13, good-12)
root(ROOT-0, start-13)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP believe)
      (SBAR (IN that)
        (S
          (NP
            (NP
              (NP (NN everyone) (POS 's))
              (NN goodwill))
            (PP (IN for)
              (NP (DT the) (NN Earth))))
          (VP (MD will)
            (VP (VB bring)
              (NP (PRP us))
              (NP (DT a) (JJR better) (NN world)))))))
    (. .)))

nsubj(believe-2, We-1)
root(ROOT-0, believe-2)
mark(bring-11, that-3)
nmod:poss(goodwill-6, everyone-4)
case(everyone-4, 's-5)
nsubj(bring-11, goodwill-6)
case(Earth-9, for-7)
det(Earth-9, the-8)
nmod:for(goodwill-6, Earth-9)
aux(bring-11, will-10)
ccomp(believe-2, bring-11)
iobj(bring-11, us-12)
det(world-15, a-13)
amod(world-15, better-14)
dobj(bring-11, world-15)

