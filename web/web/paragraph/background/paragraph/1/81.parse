(ROOT
  (S
    (PP (IN On)
      (NP (NNP January) (CD 9) (, ,) (CD 2003)))
    (, ,)
    (NP (JJ 159) (NNS whales))
    (VP (VBD were)
      (VP (VBN discovered)
        (PP (IN on)
          (NP
            (NP (DT a) (NN beach))
            (PP (IN in)
              (NP (NNP New) (NNP Zealand)))))))
    (. .)))

case(January-2, On-1)
nmod:on(discovered-10, January-2)
nummod(January-2, 9-3)
nummod(January-2, 2003-5)
amod(whales-8, 159-7)
nsubjpass(discovered-10, whales-8)
auxpass(discovered-10, were-9)
root(ROOT-0, discovered-10)
case(beach-13, on-11)
det(beach-13, a-12)
nmod:on(discovered-10, beach-13)
case(Zealand-16, in-14)
compound(Zealand-16, New-15)
nmod:in(beach-13, Zealand-16)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP
          (QP (RB about) (CD 50))
          (NNS people))
        (VP (VBD worked)
          (ADJP (RB very) (JJ hard)))))
    (, ,)
    (NP (PRP they))
    (VP (VBD managed)
      (S
        (VP (TO to)
          (VP (VB help)
            (NP
              (QP (RB only) (RB about) (CD 40))
              (NNS whales))
            (VP (VB return)
              (PP (TO to)
                (NP (DT the) (NN sea))))))))
    (. .)))

mark(worked-5, Although-1)
advmod(50-3, about-2)
nummod(people-4, 50-3)
nsubj(worked-5, people-4)
advcl(managed-10, worked-5)
advmod(hard-7, very-6)
xcomp(worked-5, hard-7)
nsubj(managed-10, they-9)
nsubj(help-12, they-9)
root(ROOT-0, managed-10)
mark(help-12, to-11)
xcomp(managed-10, help-12)
advmod(40-15, only-13)
advmod(40-15, about-14)
nummod(whales-16, 40-15)
dobj(help-12, whales-16)
dep(help-12, return-17)
case(sea-20, to-18)
det(sea-20, the-19)
nmod:to(return-17, sea-20)

(ROOT
  (S
    (NP
      (QP (JJR More) (IN than) (CD 100)))
    (VP (VBD died)
      (SBAR (IN before)
        (S
          (NP (PRP they))
          (VP (MD could)
            (VP (VB be)
              (ADJP (JJ rescued)))))))
    (. .)))

advmod(100-3, More-1)
mwe(More-1, than-2)
nsubj(died-4, 100-3)
root(ROOT-0, died-4)
mark(rescued-9, before-5)
nsubj(rescued-9, they-6)
aux(rescued-9, could-7)
cop(rescued-9, be-8)
advcl(died-4, rescued-9)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP have)
      (VP (VBN been)
        (ADJP (JJ aware)
          (PP (IN of)
            (NP
              (NP (DT the) (NN problem))
              (PP (IN of)
                (NP (JJ beached) (NNS whales))))))
        (PP (IN for)
          (NP (DT a) (JJ long) (NN time)))))
    (. .)))

nsubj(aware-4, People-1)
aux(aware-4, have-2)
cop(aware-4, been-3)
root(ROOT-0, aware-4)
case(problem-7, of-5)
det(problem-7, the-6)
nmod:of(aware-4, problem-7)
case(whales-10, of-8)
amod(whales-10, beached-9)
nmod:of(problem-7, whales-10)
case(time-14, for-11)
det(time-14, a-12)
amod(time-14, long-13)
nmod:for(aware-4, time-14)

(ROOT
  (S
    (NP (RB Even) (DT the) (JJ ancient) (NN Romans))
    (VP (VBD wrote)
      (PP (IN about)
        (S
          (VP (VBG finding)
            (NP (NNS whales))
            (PP (IN on)
              (NP (PRP$ their) (NNS shores)))))))
    (. .)))

advmod(Romans-4, Even-1)
det(Romans-4, the-2)
amod(Romans-4, ancient-3)
nsubj(wrote-5, Romans-4)
root(ROOT-0, wrote-5)
mark(finding-7, about-6)
advcl(wrote-5, finding-7)
dobj(finding-7, whales-8)
case(shores-11, on-9)
nmod:poss(shores-11, their-10)
nmod:on(finding-7, shores-11)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP (NNS efforts)
          (S
            (VP (TO to)
              (VP (VB help)
                (NP (JJ beached) (NNS whales))))))
        (VP (VBP have)
          (VP (VBN increased)))))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (ADVP (RB still))
      (ADJP (RB usually) (JJ unsuccessful)))
    (. .)))

mark(increased-8, Although-1)
nsubj(increased-8, efforts-2)
mark(help-4, to-3)
acl(efforts-2, help-4)
amod(whales-6, beached-5)
dobj(help-4, whales-6)
aux(increased-8, have-7)
advcl(unsuccessful-14, increased-8)
nsubj(unsuccessful-14, they-10)
cop(unsuccessful-14, are-11)
advmod(unsuccessful-14, still-12)
advmod(unsuccessful-14, usually-13)
root(ROOT-0, unsuccessful-14)

(ROOT
  (S
    (NP (NNP Little))
    (VP (VBZ is)
      (VP (VBN known)
        (PP (IN about)
          (NP (DT the) (NNS reasons)))
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (NNS whales))
            (VP (VB end)
              (PRT (RP up))
              (PP (IN on)
                (NP
                  (NP (NNS beaches))
                  (PP (IN in)
                    (NP (DT the) (JJ first) (NN place))))))))))
    (. .)))

nsubjpass(known-3, Little-1)
auxpass(known-3, is-2)
root(ROOT-0, known-3)
case(reasons-6, about-4)
det(reasons-6, the-5)
nmod:about(known-3, reasons-6)
advmod(end-9, why-7)
nsubj(end-9, whales-8)
advcl(known-3, end-9)
compound:prt(end-9, up-10)
case(beaches-12, on-11)
nmod:on(end-9, beaches-12)
case(place-16, in-13)
det(place-16, the-14)
amod(place-16, first-15)
nmod:in(beaches-12, place-16)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (NNS people))
    (VP (VBP have)
      (VP (VBN come)
        (PRT (RP up))
        (PP (IN with)
          (NP
            (NP (DT a) (NN number))
            (PP (IN of)
              (NP (NNS possibilities)))))))
    (. .)))

advmod(come-5, However-1)
nsubj(come-5, people-3)
aux(come-5, have-4)
root(ROOT-0, come-5)
compound:prt(come-5, up-6)
case(number-9, with-7)
det(number-9, a-8)
nmod:with(come-5, number-9)
case(possibilities-11, of-10)
nmod:of(number-9, possibilities-11)

(ROOT
  (S
    (NP (DT Some))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (NP (DT the) (NNS whales))
          (VP (VBP get)
            (SBAR
              (S
                (VP
                  (VP (VBD lost))
                  (CC and)
                  (VP (VBP swim)
                    (S
                      (VP (TO to)
                        (VP (VB shore))))))))))))
    (. .)))

nsubj(think-2, Some-1)
root(ROOT-0, think-2)
mark(get-6, that-3)
det(whales-5, the-4)
nsubj(get-6, whales-5)
ccomp(think-2, get-6)
ccomp(get-6, lost-7)
cc(lost-7, and-8)
ccomp(get-6, swim-9)
conj:and(lost-7, swim-9)
mark(shore-11, to-10)
xcomp(swim-9, shore-11)

(ROOT
  (S
    (NP (NNS Others))
    (VP (VBP believe)
      (SBAR
        (S
          (NP (DT the) (NNS whales))
          (ADVP (RB first))
          (VP
            (VP (VBP become)
              (ADJP (JJ sick)))
            (CC and)
            (VP
              (ADVP (RB then))
              (VBP float)
              (S
                (VP (TO to)
                  (VP (VB shore)))))))))
    (. .)))

nsubj(believe-2, Others-1)
root(ROOT-0, believe-2)
det(whales-4, the-3)
nsubj(become-6, whales-4)
nsubj(float-10, whales-4)
nsubj(shore-12, whales-4)
advmod(become-6, first-5)
ccomp(believe-2, become-6)
xcomp(become-6, sick-7)
cc(become-6, and-8)
advmod(float-10, then-9)
ccomp(believe-2, float-10)
conj:and(become-6, float-10)
mark(shore-12, to-11)
xcomp(float-10, shore-12)

(ROOT
  (S
    (ADVP (RB Still))
    (NP (NNS others))
    (VP (VBP think)
      (SBAR
        (S
          (NP (DT the) (NNS whales))
          (VP
            (VP
              (ADVP (RB sometimes))
              (VBP have)
              (NP (NNS problems))
              (PP (IN with)
                (NP (PRP$ their) (NN sonar) (NN navigation))))
            (CC and)
            (VP
              (ADVP (RB therefore))
              (MD can) (RB not)
              (VP (VB see)
                (NP (DT the) (NN beach))))))))
    (. .)))

advmod(think-3, Still-1)
nsubj(think-3, others-2)
root(ROOT-0, think-3)
det(whales-5, the-4)
nsubj(have-7, whales-5)
nsubj(see-17, whales-5)
advmod(have-7, sometimes-6)
ccomp(think-3, have-7)
dobj(have-7, problems-8)
case(navigation-12, with-9)
nmod:poss(navigation-12, their-10)
compound(navigation-12, sonar-11)
nmod:with(have-7, navigation-12)
cc(have-7, and-13)
advmod(see-17, therefore-14)
aux(see-17, can-15)
neg(see-17, not-16)
ccomp(think-3, see-17)
conj:and(have-7, see-17)
det(beach-19, the-18)
dobj(see-17, beach-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ has)
      (ADVP (RB even))
      (VP (VBN been)
        (VP (VBN suggested)
          (SBAR (IN that)
            (S
              (NP (DT the) (NNS whales))
              (VP (VBP are)
                (VP (VBG killing)
                  (NP (PRP themselves))
                  (SBAR (IN in) (NN order)
                    (S
                      (VP (TO to)
                        (VP (VB leave)
                          (NP (JJR more) (NN food))
                          (PP (IN for)
                            (NP
                              (NP (NNS members))
                              (PP (IN of)
                                (NP (PRP$ their) (NN family))))))))))))))))
    (. .)))

nsubjpass(suggested-5, It-1)
aux(suggested-5, has-2)
advmod(suggested-5, even-3)
auxpass(suggested-5, been-4)
root(ROOT-0, suggested-5)
mark(killing-10, that-6)
det(whales-8, the-7)
nsubj(killing-10, whales-8)
aux(killing-10, are-9)
ccomp(suggested-5, killing-10)
dobj(killing-10, themselves-11)
mark(leave-15, in-12)
mwe(in-12, order-13)
mark(leave-15, to-14)
advcl(killing-10, leave-15)
amod(food-17, more-16)
dobj(leave-15, food-17)
case(members-19, for-18)
nmod:for(leave-15, members-19)
case(family-22, of-20)
nmod:poss(family-22, their-21)
nmod:of(members-19, family-22)

(ROOT
  (SBARQ (RB So)
    (WHNP (WDT which)
      (NP (NN reason)))
    (SQ (VBZ is)
      (NP (PRP it)))
    (. ?)))

advmod(is-4, So-1)
det(reason-3, which-2)
dobj(is-4, reason-3)
root(ROOT-0, is-4)
nsubj(is-4, it-5)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (NNS whales))
      (VP (VB end)
        (PRT (RP up))
        (PP (IN on)
          (NP (NNS beaches)))))
    (. ?)))

advmod(end-4, Why-1)
aux(end-4, do-2)
nsubj(end-4, whales-3)
root(ROOT-0, end-4)
compound:prt(end-4, up-5)
case(beaches-7, on-6)
nmod:on(end-4, beaches-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ seems)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (DT a) (NN combination))
              (PP (IN of)
                (NP
                  (NP (DT some))
                  (PP (IN of)
                    (NP (DT the) (JJ above) (NNS reasons))))))))))
    (. .)))

nsubj(seems-2, It-1)
nsubj(combination-6, It-1)
root(ROOT-0, seems-2)
mark(combination-6, to-3)
cop(combination-6, be-4)
det(combination-6, a-5)
xcomp(seems-2, combination-6)
case(some-8, of-7)
nmod:of(combination-6, some-8)
case(reasons-12, of-9)
det(reasons-12, the-10)
amod(reasons-12, above-11)
nmod:of(some-8, reasons-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN whale))
        (VP (VBZ gets)
          (FRAG
            (ADJP (JJ sick)))
          (PRN (-LRB- -LRB-)
            (PP (IN like)
              (NP
                (NP (DT the) (NN whale))
                (VP (VBN found)
                  (PP (IN on)
                    (NP
                      (NP (DT a) (NN beach))
                      (PP (IN in)
                        (NP (NNP Spain)))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD had)
                            (VP (VBN swallowed)
                              (PP (IN over)
                                (NP
                                  (NP (CD 50) (NN kg))
                                  (PP (IN of)
                                    (NP (JJ plastic) (NNS bags))))))))))))))
            (-RRB- -RRB-)))))
    (, ,)
    (NP (PRP it))
    (VP
      (VP (MD may) (RB not)
        (VP (VB be)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB swim)))))))
      (CC and)
      (VP (MD may)
        (VP (VB float)
          (S
            (VP (TO to)
              (VP (VB shore)))))))
    (. .)))

mark(gets-4, If-1)
det(whale-3, a-2)
nsubj(gets-4, whale-3)
advcl(able-31, gets-4)
dep(gets-4, sick-5)
case(whale-9, like-7)
det(whale-9, the-8)
dep(gets-4, whale-9)
acl(whale-9, found-10)
case(beach-13, on-11)
det(beach-13, a-12)
nmod:on(found-10, beach-13)
nsubj(swallowed-18, beach-13)
case(Spain-15, in-14)
nmod:in(beach-13, Spain-15)
ref(beach-13, that-16)
aux(swallowed-18, had-17)
acl:relcl(beach-13, swallowed-18)
case(kg-21, over-19)
nummod(kg-21, 50-20)
nmod:over(swallowed-18, kg-21)
case(bags-24, of-22)
amod(bags-24, plastic-23)
nmod:of(kg-21, bags-24)
nsubj(able-31, it-27)
nsubj(swim-33, it-27)
nsubj(float-36, it-27)
nsubj(shore-38, it-27)
aux(able-31, may-28)
neg(able-31, not-29)
cop(able-31, be-30)
root(ROOT-0, able-31)
mark(swim-33, to-32)
xcomp(able-31, swim-33)
cc(able-31, and-34)
aux(float-36, may-35)
conj:and(able-31, float-36)
mark(shore-38, to-37)
xcomp(float-36, shore-38)

(ROOT
  (SBARQ
    (FRAG (CC But)
      (PP (RB as) (IN in)
        (NP
          (NP (DT the) (NN case))
          (PP (IN of)
            (NP (DT the) (NNP New) (NNP Zealand) (NNS whales))))))
    (, ,)
    (SBARQ
      (WHADVP (WRB how))
      (S (MD could)
        (NP (RB so) (JJ many))
        (VP (VB get)
          (VP (VBN beached)
            (PP (IN at)
              (NP (DT the) (JJ same) (NN time)))))))
    (. ?)))

dep(beached-17, But-1)
advmod(case-5, as-2)
case(case-5, in-3)
det(case-5, the-4)
nmod:in(But-1, case-5)
case(whales-10, of-6)
det(whales-10, the-7)
compound(whales-10, New-8)
compound(whales-10, Zealand-9)
nmod:of(case-5, whales-10)
advmod(beached-17, how-12)
dep(beached-17, could-13)
advmod(many-15, so-14)
nsubjpass(beached-17, many-15)
auxpass(beached-17, get-16)
root(ROOT-0, beached-17)
case(time-21, at-18)
det(time-21, the-19)
amod(time-21, same-20)
nmod:at(beached-17, time-21)

(ROOT
  (S
    (NP (DT The) (NN reason))
    (VP (VBZ is) (, ,)
      (SBAR
        (S
          (NP (NNS whales))
          (VP (VBP are)
            (NP (JJ social) (NNS animals))))))
    (. .)))

det(reason-2, The-1)
nsubj(is-3, reason-2)
root(ROOT-0, is-3)
nsubj(animals-8, whales-5)
cop(animals-8, are-6)
amod(animals-8, social-7)
ccomp(is-3, animals-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (CD one) (NN member))
          (PP (IN of)
            (NP (DT a) (NN whale) (NN group))))
        (VP (VBZ swims)
          (PP (IN onto)
            (NP (DT a) (NN beach))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ possible))
      (SBAR (IN that)
        (S
          (NP (NNS others))
          (VP (MD may)
            (VP (VB follow))))))
    (. .)))

mark(swims-8, If-1)
nummod(member-3, one-2)
nsubj(swims-8, member-3)
case(group-7, of-4)
det(group-7, a-5)
compound(group-7, whale-6)
nmod:of(member-3, group-7)
advcl(possible-15, swims-8)
case(beach-11, onto-9)
det(beach-11, a-10)
nmod:onto(swims-8, beach-11)
nsubj(possible-15, it-13)
cop(possible-15, is-14)
root(ROOT-0, possible-15)
mark(follow-19, that-16)
nsubj(follow-19, others-17)
aux(follow-19, may-18)
ccomp(possible-15, follow-19)

(ROOT
  (S
    (NP (DT Some) (NNS people))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (NP
            (NP (NNS noises))
            (VP (VBN made)
              (PP (IN by)
                (NP (JJ human) (NNS activities))))
            (PRN (-LRB- -LRB-)
              (PP (IN from)
                (NP (NNS ships)
                  (CC or)
                  (NNS submarines)))
              (-RRB- -RRB-)))
          (VP (VBP affect)
            (NP
              (NP (DT the) (JJ whales) (NN use))
              (PP (IN of)
                (NP (NN sonar))))))))
    (. .)))

det(people-2, Some-1)
nsubj(think-3, people-2)
root(ROOT-0, think-3)
mark(affect-16, that-4)
nsubj(affect-16, noises-5)
acl(noises-5, made-6)
case(activities-9, by-7)
amod(activities-9, human-8)
nmod:by(made-6, activities-9)
case(ships-12, from-11)
nmod:from(noises-5, ships-12)
cc(ships-12, or-13)
nmod:from(noises-5, submarines-14)
conj:or(ships-12, submarines-14)
ccomp(think-3, affect-16)
det(use-19, the-17)
amod(use-19, whales-18)
dobj(affect-16, use-19)
case(sonar-21, of-20)
nmod:of(use-19, sonar-21)

(ROOT
  (S
    (NP (NNS Whales))
    (VP
      (VP (VBP use)
        (NP (JJ sound) (NNS waves))
        (S
          (VP (TO to)
            (VP (VB know)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP they))
                  (VP (VBP are)
                    (VP (VBG going)))))))))
      (CC and)
      (VP (MD may)
        (VP (VB get)
          (ADJP (VBN confused)
            (SBAR (IN if)
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (ADVP (RB too) (RB much))
                  (NP
                    (NP (NN background) (NN noise))
                    (PP (IN in)
                      (NP (DT the) (NN ocean)))))))))))
    (. .)))

nsubj(use-2, Whales-1)
nsubj(get-13, Whales-1)
root(ROOT-0, use-2)
amod(waves-4, sound-3)
dobj(use-2, waves-4)
mark(know-6, to-5)
advcl(use-2, know-6)
advmod(going-10, where-7)
nsubj(going-10, they-8)
aux(going-10, are-9)
ccomp(know-6, going-10)
cc(use-2, and-11)
aux(get-13, may-12)
conj:and(use-2, get-13)
xcomp(get-13, confused-14)
mark(is-17, if-15)
expl(is-17, there-16)
ccomp(confused-14, is-17)
advmod(much-19, too-18)
advmod(is-17, much-19)
compound(noise-21, background-20)
nsubj(is-17, noise-21)
case(ocean-24, in-22)
det(ocean-24, the-23)
nmod:in(noise-21, ocean-24)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (DT the) (NNP U.S.) (NNP Navy))
    (VP (VBD admitted)
      (SBAR (IN that)
        (S
          (NP (PRP$ its) (JJ powerful) (NN sonar))
          (VP (MD could)
            (VP (VB be)
              (NP
                (NP (DT the) (NN reason))
                (PP (IN for)
                  (NP
                    (NP (DT the) (NN beaching))
                    (PP (IN of)
                      (NP
                        (NP (NNS whales))
                        (PP (IN in)
                          (NP (DT the) (NNPS Bahamas))))))))
              (PP (IN in)
                (NP
                  (NP (NNP March))
                  (, ,)
                  (NP (CD 2000)))))))))
    (. .)))

case(fact-2, In-1)
nmod:in(admitted-7, fact-2)
det(Navy-6, the-4)
compound(Navy-6, U.S.-5)
nsubj(admitted-7, Navy-6)
root(ROOT-0, admitted-7)
mark(reason-15, that-8)
nmod:poss(sonar-11, its-9)
amod(sonar-11, powerful-10)
nsubj(reason-15, sonar-11)
aux(reason-15, could-12)
cop(reason-15, be-13)
det(reason-15, the-14)
ccomp(admitted-7, reason-15)
case(beaching-18, for-16)
det(beaching-18, the-17)
nmod:for(reason-15, beaching-18)
case(whales-20, of-19)
nmod:of(beaching-18, whales-20)
case(Bahamas-23, in-21)
det(Bahamas-23, the-22)
nmod:in(whales-20, Bahamas-23)
case(March-25, in-24)
nmod:in(reason-15, March-25)
amod(March-25, 2000-27)

(ROOT
  (S
    (NP
      (NP (NNS People))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP try)
            (S
              (VP (TO to)
                (VP (VB help)
                  (NP (JJ beached) (NNS whales))))))))
      (, ,))
    (VP (VBP know)
      (SBAR (IN that)
        (S
          (NP (VBG saving) (JJ beached) (NNS whales))
          (VP (VBZ is)
            (ADJP (RB very) (JJ difficult))))))
    (. .)))

nsubj(try-4, People-1)
nsubj(help-6, People-1)
nsubj(know-10, People-1)
ref(People-1, who-3)
acl:relcl(People-1, try-4)
mark(help-6, to-5)
xcomp(try-4, help-6)
amod(whales-8, beached-7)
dobj(help-6, whales-8)
root(ROOT-0, know-10)
mark(difficult-17, that-11)
amod(whales-14, saving-12)
amod(whales-14, beached-13)
nsubj(difficult-17, whales-14)
cop(difficult-17, is-15)
advmod(difficult-17, very-16)
ccomp(know-10, difficult-17)

(ROOT
  (S
    (NP (DT A) (NN whale))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ huge) (NN animal))
        (SBAR
          (WHNP (WP$ whose) (NN body))
          (S
            (VP (MD can) (RB not)
              (VP (VB support)
                (NP (PRP$ its) (JJ own) (NN weight))
                (PRT (RP out))
                (PP (IN of)
                  (NP (NN water)))))))))
    (. .)))

det(whale-2, A-1)
nsubj(animal-6, whale-2)
cop(animal-6, is-3)
det(animal-6, a-4)
amod(animal-6, huge-5)
root(ROOT-0, animal-6)
nmod:poss(body-8, animal-6)
ref(animal-6, whose-7)
nsubj(support-11, body-8)
aux(support-11, can-9)
neg(support-11, not-10)
acl:relcl(animal-6, support-11)
nmod:poss(weight-14, its-12)
amod(weight-14, own-13)
dobj(support-11, weight-14)
compound:prt(support-11, out-15)
case(water-17, of-16)
nmod:of(support-11, water-17)

(ROOT
  (S
    (ADVP (RB Also))
    (, ,)
    (NP (DT the) (NN sun)
      (CC and)
      (NN sand))
    (VP (MD can)
      (ADVP (RB quickly))
      (VP (VB cause)
        (NP (DT a) (JJ beached) (NN whale))
        (S
          (VP (TO to)
            (VP (VB get)
              (ADJP (RB too) (JJ hot)))))))
    (. .)))

advmod(cause-9, Also-1)
det(sun-4, the-3)
nsubj(cause-9, sun-4)
cc(sun-4, and-5)
conj:and(sun-4, sand-6)
nsubj(cause-9, sand-6)
aux(cause-9, can-7)
advmod(cause-9, quickly-8)
root(ROOT-0, cause-9)
det(whale-12, a-10)
amod(whale-12, beached-11)
dobj(cause-9, whale-12)
mark(get-14, to-13)
advcl(cause-9, get-14)
advmod(hot-16, too-15)
xcomp(get-14, hot-16)

(ROOT
  (S
    (NP (DT All))
    (VP (VBP agree)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (JJS best) (NN place))
            (PP (IN for)
              (NP (DT a) (NN whale))))
          (VP (VBZ is)
            (PP (IN in)
              (NP (DT the) (NN ocean)))))))
    (, ,)
    (CC but)
    (ADVP (RB sometimes))
    (S
      (NP (DT the) (NN whale))
      (ADVP (RB just))
      (VP (VBZ does) (RB not)
        (VP (VB seem)
          (S
            (VP (TO to)
              (VP (VB think)
                (ADVP (RB so))))))))
    (. .)))

nsubj(agree-2, All-1)
root(ROOT-0, agree-2)
mark(ocean-13, that-3)
det(place-6, the-4)
amod(place-6, best-5)
nsubj(ocean-13, place-6)
case(whale-9, for-7)
det(whale-9, a-8)
nmod:for(place-6, whale-9)
cop(ocean-13, is-10)
case(ocean-13, in-11)
det(ocean-13, the-12)
ccomp(agree-2, ocean-13)
cc(agree-2, but-15)
advmod(seem-22, sometimes-16)
det(whale-18, the-17)
nsubj(seem-22, whale-18)
nsubj(think-24, whale-18)
advmod(seem-22, just-19)
aux(seem-22, does-20)
neg(seem-22, not-21)
conj:but(agree-2, seem-22)
mark(think-24, to-23)
xcomp(seem-22, think-24)
advmod(think-24, so-25)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD will)
      (VP (VB take)
        (NP
          (NP (JJ many) (JJR more) (NNS years))
          (PP (IN of)
            (NP (NN study))))
        (SBAR (IN before)
          (S
            (NP (NNS humans))
            (VP (MD can)
              (VP (VB help)
                (S
                  (NP (DT the) (NNS whales))
                  (VP (VB stay)
                    (ADJP (JJ safe)
                      (PP (IN in)
                        (NP (DT the) (NN water))))))))))))
    (. .)))

nsubj(take-3, It-1)
aux(take-3, will-2)
root(ROOT-0, take-3)
amod(years-6, many-4)
amod(years-6, more-5)
dobj(take-3, years-6)
case(study-8, of-7)
nmod:of(years-6, study-8)
mark(help-12, before-9)
nsubj(help-12, humans-10)
aux(help-12, can-11)
advcl(take-3, help-12)
det(whales-14, the-13)
nsubj(stay-15, whales-14)
ccomp(help-12, stay-15)
xcomp(stay-15, safe-16)
case(water-19, in-17)
det(water-19, the-18)
nmod:in(safe-16, water-19)

