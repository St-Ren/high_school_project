(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ traditional) (NN story)))
    (, ,)
    (NP (NNP Santa) (NNP Claus))
    (VP (VBD had)
      (NP (RB only) (CD eight) (NN reindeer)))
    (. .)))

case(story-4, In-1)
det(story-4, the-2)
amod(story-4, traditional-3)
nmod:in(had-8, story-4)
compound(Claus-7, Santa-6)
nsubj(had-8, Claus-7)
root(ROOT-0, had-8)
advmod(reindeer-11, only-9)
nummod(reindeer-11, eight-10)
dobj(had-8, reindeer-11)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBD lived)
        (PP (IN with)
          (NP (NNP Santa)))
        (PP (IN at)
          (NP (DT the) (NNP North) (NNP Pole))))
      (CC and)
      (VP (VBD pulled)
        (S
          (NP (NNP Santa) (POS 's))
          (VP (VB sleigh)
            (NP (DT every) (NNP Christmas) (NNP Eve))))))
    (. .)))

nsubj(lived-2, They-1)
nsubj(pulled-10, They-1)
root(ROOT-0, lived-2)
case(Santa-4, with-3)
nmod:with(lived-2, Santa-4)
case(Pole-8, at-5)
det(Pole-8, the-6)
compound(Pole-8, North-7)
nmod:at(lived-2, Pole-8)
cc(lived-2, and-9)
conj:and(lived-2, pulled-10)
nsubj(sleigh-13, Santa-11)
case(Santa-11, 's-12)
ccomp(pulled-10, sleigh-13)
det(Eve-16, every-14)
compound(Eve-16, Christmas-15)
dobj(sleigh-13, Eve-16)

(ROOT
  (S
    (PP (IN On)
      (NP (PRP$ his) (NN sleigh)))
    (, ,)
    (NP (NNP Santa))
    (VP (MD would)
      (VP (VB deliver)
        (NP
          (NP (NNP Christmas) (NNS toys))
          (PP (TO to)
            (NP (PDT all) (DT the) (JJ good) (NNS boys)
              (CC and)
              (NNS girls)))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBN believed)
                (PP (IN in)
                  (NP (PRP him)))))))))
    (. .)))

case(sleigh-3, On-1)
nmod:poss(sleigh-3, his-2)
nmod:on(deliver-7, sleigh-3)
nsubj(deliver-7, Santa-5)
aux(deliver-7, would-6)
root(ROOT-0, deliver-7)
compound(toys-9, Christmas-8)
dobj(deliver-7, toys-9)
nsubj(believed-18, toys-9)
case(boys-14, to-10)
dep(boys-14, all-11)
det(boys-14, the-12)
amod(boys-14, good-13)
nmod:to(toys-9, boys-14)
cc(boys-14, and-15)
nmod:to(toys-9, girls-16)
conj:and(boys-14, girls-16)
ref(toys-9, who-17)
acl:relcl(toys-9, believed-18)
case(him-20, in-19)
nmod:in(believed-18, him-20)

(ROOT
  (S
    (ADVP (RB Then))
    (, ,)
    (PP (IN in)
      (NP (DT the) (NNS 1s)))
    (, ,)
    (NP (DT an) (JJ American) (NN department) (NN store))
    (VP (VBD was)
      (VP (VBG looking)
        (PP (IN for)
          (NP (DT a) (NN way)))
        (S
          (VP (TO to)
            (VP (VB sell)
              (NP (JJR more) (NNS goods))
              (PP (IN at)
                (NP (NNP Christmas) (NN time))))))))
    (. .)))

advmod(looking-12, Then-1)
case(1s-5, in-3)
det(1s-5, the-4)
nmod:in(looking-12, 1s-5)
det(store-10, an-7)
amod(store-10, American-8)
compound(store-10, department-9)
nsubj(looking-12, store-10)
nsubj(sell-17, store-10)
aux(looking-12, was-11)
root(ROOT-0, looking-12)
case(way-15, for-13)
det(way-15, a-14)
nmod:for(looking-12, way-15)
mark(sell-17, to-16)
xcomp(looking-12, sell-17)
amod(goods-19, more-18)
dobj(sell-17, goods-19)
case(time-22, at-20)
compound(time-22, Christmas-21)
nmod:at(sell-17, time-22)

(ROOT
  (S
    (NP
      (NP (CD One))
      (PP (IN of)
        (NP (PRP$ its) (NNS employees))))
    (VP (VBD created)
      (NP (DT a) (NN character)
        (S
          (VP (TO to)
            (VP (VB add)
              (PP (TO to)
                (NP (DT the) (NN story))))))))
    (. .)))

nsubj(created-5, One-1)
case(employees-4, of-2)
nmod:poss(employees-4, its-3)
nmod:of(One-1, employees-4)
root(ROOT-0, created-5)
det(character-7, a-6)
dobj(created-5, character-7)
mark(add-9, to-8)
acl(character-7, add-9)
case(story-12, to-10)
det(story-12, the-11)
nmod:to(add-9, story-12)

(ROOT
  (S
    (NP (DT The) (JJ new) (NN character))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN reindeer))
        (PP (IN with)
          (NP (DT a) (JJ bright) (JJ red) (NN nose)))))
    (. .)))

det(character-3, The-1)
amod(character-3, new-2)
nsubj(reindeer-6, character-3)
cop(reindeer-6, was-4)
det(reindeer-6, a-5)
root(ROOT-0, reindeer-6)
case(nose-11, with-7)
det(nose-11, a-8)
amod(nose-11, bright-9)
amod(nose-11, red-10)
nmod:with(reindeer-6, nose-11)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (VP (VBN given)
        (NP (DT the) (NN name))
        (NP (NNP Rudolph))))
    (. .)))

nsubjpass(given-3, He-1)
auxpass(given-3, was-2)
root(ROOT-0, given-3)
det(name-5, the-4)
iobj(given-3, name-5)
dobj(given-3, Rudolph-6)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN story)))
    (, ,)
    (NP (NNP Rudolph))
    (VP (VBD found)
      (SBAR
        (S
          (NP (PRP himself))
          (VP (RB not)
            (ADVP (RB fully))
            (VBN accepted)
            (PP (IN by)
              (NP (DT the) (JJ other) (NN reindeer)))))))
    (. .)))

case(story-3, In-1)
det(story-3, the-2)
nmod:in(found-6, story-3)
nsubj(found-6, Rudolph-5)
root(ROOT-0, found-6)
nsubj(accepted-10, himself-7)
neg(accepted-10, not-8)
advmod(accepted-10, fully-9)
ccomp(found-6, accepted-10)
case(reindeer-14, by-11)
det(reindeer-14, the-12)
amod(reindeer-14, other-13)
nmod:by(accepted-10, reindeer-14)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (PRP they))
    (VP (VBD looked)
      (PRT (RP down))
      (PP (IN on)
        (NP
          (NP (PRP him))
          (PP (RB because) (IN of)
            (NP (PRP$ his) (JJ big) (JJ red) (NN nose))))))
    (. .)))

case(fact-2, In-1)
nmod:in(looked-5, fact-2)
nsubj(looked-5, they-4)
root(ROOT-0, looked-5)
compound:prt(looked-5, down-6)
case(him-8, on-7)
nmod:on(looked-5, him-8)
case(nose-14, because-9)
mwe(because-9, of-10)
nmod:poss(nose-14, his-11)
amod(nose-14, big-12)
amod(nose-14, red-13)
nmod:because_of(him-8, nose-14)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBD told)
        (NP (NNS jokes))
        (PP (IN about)
          (NP (PRP$ his) (JJ strange) (NN appearance))))
      (CC and)
      (VP (MD would) (RB n't)
        (ADVP (RB even))
        (VP (VB let)
          (S
            (NP (PRP him))
            (VP (VB join)
              (PP (IN in)
                (NP (PRP$ their) (NNS games))))))))
    (. .)))

nsubj(told-2, They-1)
nsubj(let-12, They-1)
root(ROOT-0, told-2)
dobj(told-2, jokes-3)
case(appearance-7, about-4)
nmod:poss(appearance-7, his-5)
amod(appearance-7, strange-6)
nmod:about(told-2, appearance-7)
cc(told-2, and-8)
aux(let-12, would-9)
neg(let-12, n't-10)
advmod(let-12, even-11)
conj:and(told-2, let-12)
nsubj(join-14, him-13)
ccomp(let-12, join-14)
case(games-17, in-15)
nmod:poss(games-17, their-16)
nmod:in(join-14, games-17)

(ROOT
  (S
    (NP
      (NP (CD One) (NNP Christmas) (NNP Eve))
      (PP (IN at)
        (NP
          (NP (DT the) (NNP North) (NNP Pole))
          (, ,)
          (NP (DT the) (NN weather)))))
    (VP (VBD was)
      (ADJP (RB very) (JJ dark)
        (CC and)
        (JJ stormy)))
    (. .)))

nummod(Eve-3, One-1)
compound(Eve-3, Christmas-2)
nsubj(dark-13, Eve-3)
nsubj(stormy-15, Eve-3)
case(Pole-7, at-4)
det(Pole-7, the-5)
compound(Pole-7, North-6)
nmod:at(Eve-3, Pole-7)
det(weather-10, the-9)
appos(Pole-7, weather-10)
cop(dark-13, was-11)
advmod(dark-13, very-12)
root(ROOT-0, dark-13)
cc(dark-13, and-14)
conj:and(dark-13, stormy-15)

(ROOT
  (S
    (NP (NNP Santa))
    (VP (VBD had)
      (NP (DT no) (NN one)
        (S
          (VP (TO to)
            (VP (VB guide)
              (NP (PRP$ his) (NN sleigh))
              (PP (IN on)
                (NP
                  (NP (PRP$ his) (NN trip))
                  (PP (IN around)
                    (NP (DT the) (NN world))))))))))
    (. .)))

nsubj(had-2, Santa-1)
root(ROOT-0, had-2)
neg(one-4, no-3)
dobj(had-2, one-4)
mark(guide-6, to-5)
acl(one-4, guide-6)
nmod:poss(sleigh-8, his-7)
dobj(guide-6, sleigh-8)
case(trip-11, on-9)
nmod:poss(trip-11, his-10)
nmod:on(guide-6, trip-11)
case(world-14, around-12)
det(world-14, the-13)
nmod:around(trip-11, world-14)

(ROOT
  (S
    (ADVP (DT All)
      (PP (IN at)
        (ADVP (RB once))))
    (, ,)
    (NP (NNP Santa))
    (VP
      (VP (VBD thought)
        (PP (IN of)
          (NP
            (NP (NNP Rudolph))
            (CC and)
            (NP (PRP$ his) (JJ bright) (, ,) (JJ shiny) (NN nose)))))
      (, ,)
      (CC and)
      (VP (VBD asked)
        (S
          (NP (NNP Rudolph))
          (VP (TO to)
            (VP (VB lead)
              (NP (DT the) (NN way)))))))
    (. .)))

advmod(thought-6, All-1)
case(once-3, at-2)
advcl:at(All-1, once-3)
nsubj(thought-6, Santa-5)
nsubj(asked-17, Santa-5)
root(ROOT-0, thought-6)
case(Rudolph-8, of-7)
nmod:of(thought-6, Rudolph-8)
cc(Rudolph-8, and-9)
nmod:poss(nose-14, his-10)
amod(nose-14, bright-11)
amod(nose-14, shiny-13)
nmod:of(thought-6, nose-14)
conj:and(Rudolph-8, nose-14)
cc(thought-6, and-16)
conj:and(thought-6, asked-17)
dobj(asked-17, Rudolph-18)
nsubj(lead-20, Rudolph-18)
mark(lead-20, to-19)
xcomp(asked-17, lead-20)
det(way-22, the-21)
dobj(lead-20, way-22)

(ROOT
  (S
    (S
      (NP (NNP Rudolph))
      (VP (VBD did)
        (NP (DT a) (JJ good) (NN job))))
    (CC and)
    (, ,)
    (S
      (PP (IN as)
        (NP (DT a) (NN result)))
      (, ,)
      (NP (NNP Santa))
      (VP (VBD was)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB deliver)
                (NP (PRP$ his) (NNS gifts))
                (PP (IN on)
                  (NP (NN time)))))))))
    (. .)))

nsubj(did-2, Rudolph-1)
root(ROOT-0, did-2)
det(job-5, a-3)
amod(job-5, good-4)
dobj(did-2, job-5)
cc(did-2, and-6)
case(result-10, as-8)
det(result-10, a-9)
nmod:as(able-14, result-10)
nsubj(able-14, Santa-12)
nsubj(deliver-16, Santa-12)
cop(able-14, was-13)
conj:and(did-2, able-14)
mark(deliver-16, to-15)
xcomp(able-14, deliver-16)
nmod:poss(gifts-18, his-17)
dobj(deliver-16, gifts-18)
case(time-20, on-19)
nmod:on(deliver-16, time-20)

(ROOT
  (S
    (NP (NNP Children))
    (VP
      (VP (VBD woke)
        (PRT (RP up))
        (PP (IN on)
          (NP (NNP Christmas)))
        (NP (NN morning)))
      (CC and)
      (VP (VBD found)
        (NP
          (NP (PRP$ their) (NNS stockings))
          (VP (VBN filled)
            (PP (IN with)
              (NP (NN candy)
                (CC and)
                (NNS toys)))))))
    (. .)))

nsubj(woke-2, Children-1)
nsubj(found-8, Children-1)
root(ROOT-0, woke-2)
compound:prt(woke-2, up-3)
case(Christmas-5, on-4)
nmod:on(woke-2, Christmas-5)
nmod:tmod(woke-2, morning-6)
cc(woke-2, and-7)
conj:and(woke-2, found-8)
nmod:poss(stockings-10, their-9)
dobj(found-8, stockings-10)
acl(stockings-10, filled-11)
case(candy-13, with-12)
nmod:with(filled-11, candy-13)
cc(candy-13, and-14)
nmod:with(filled-11, toys-15)
conj:and(candy-13, toys-15)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN story))
        (PP (IN of)
          (NP
            (NP (NNP Rudolph))
            (VP (VBN made)
              (PRT (RP up))
              (PP (IN by)
                (NP (DT the) (NN department) (NN store) (NN employee))))))))
    (. .)))

nsubj(story-4, That-1)
cop(story-4, is-2)
det(story-4, the-3)
root(ROOT-0, story-4)
case(Rudolph-6, of-5)
nmod:of(story-4, Rudolph-6)
acl(Rudolph-6, made-7)
compound:prt(made-7, up-8)
case(employee-13, by-9)
det(employee-13, the-10)
compound(employee-13, department-11)
compound(employee-13, store-12)
nmod:by(made-7, employee-13)

(ROOT
  (S (CC But)
    (NP (NNP Rudolph))
    (VP (VBD did) (RB not)
      (VP (VB become)
        (ADJP (RB really) (JJ well-known))
        (SBAR (IN until)
          (S
            (NP (DT the) (NN story))
            (VP (VBD was)
              (VP (VBN turned)
                (PP (IN into)
                  (NP (DT a) (NN song)))
                (, ,) (`` ``)
                (NP
                  (NP (NNP Rudolph))
                  (NP (DT the) (JJ Red-Nosed) (NN Reindeer)))))))))
    (. .) ('' '')))

cc(become-5, But-1)
nsubj(become-5, Rudolph-2)
aux(become-5, did-3)
neg(become-5, not-4)
root(ROOT-0, become-5)
advmod(well-known-7, really-6)
xcomp(become-5, well-known-7)
mark(turned-12, until-8)
det(story-10, the-9)
nsubjpass(turned-12, story-10)
auxpass(turned-12, was-11)
advcl(become-5, turned-12)
case(song-15, into-13)
det(song-15, a-14)
nmod:into(turned-12, song-15)
dobj(turned-12, Rudolph-18)
det(Reindeer-21, the-19)
amod(Reindeer-21, Red-Nosed-20)
dep(Rudolph-18, Reindeer-21)

(ROOT
  (S
    (NP (NN Today))
    (, ,)
    (NP (DT the) (NN song))
    (VP (VBZ lives)
      (PP (IN on) (IN in)
        (NP
          (NP (DT the) (NNS hearts))
          (PP (IN of)
            (NP (NNS people)))))
      (PP (DT all) (IN around)
        (NP (DT the) (NN world))))
    (. .)))

nmod:tmod(lives-5, Today-1)
det(song-4, the-3)
nsubj(lives-5, song-4)
root(ROOT-0, lives-5)
case(hearts-9, on-6)
case(hearts-9, in-7)
det(hearts-9, the-8)
nmod:in(lives-5, hearts-9)
case(people-11, of-10)
nmod:of(hearts-9, people-11)
dep(world-15, all-12)
case(world-15, around-13)
det(world-15, the-14)
nmod:around(lives-5, world-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ carries)
      (NP
        (NP (DT the) (NN message))
        (PP (IN of)
          (NP (NN love)
            (CC and)
            (NN tolerance)))))
    (. .)))

nsubj(carries-2, It-1)
root(ROOT-0, carries-2)
det(message-4, the-3)
dobj(carries-2, message-4)
case(love-6, of-5)
nmod:of(message-4, love-6)
cc(love-6, and-7)
nmod:of(message-4, tolerance-8)
conj:and(love-6, tolerance-8)

(ROOT
  (S
    (PP (IN For)
      (ADJP (JJ many)))
    (, ,)
    (NP (DT that))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ true) (NN meaning))
        (PP (IN of)
          (NP (NNP Christmas)))))
    (. .)))

case(many-2, For-1)
advcl:for(meaning-8, many-2)
nsubj(meaning-8, that-4)
cop(meaning-8, is-5)
det(meaning-8, the-6)
amod(meaning-8, true-7)
root(ROOT-0, meaning-8)
case(Christmas-10, of-9)
nmod:of(meaning-8, Christmas-10)

(ROOT
  (S
    (S (CC And)
      (NP (DT the) (NN following))
      (VP (VBP are)
        (NP
          (NP (DT the) (NNS words))
          (PP (IN of)
            (NP (DT the) (NN song))))))
    (: :)
    (S
      (PP (IN Rudolph)
        (NP (DT the) (JJ Red-Nosed) (NNP Reindeer) (NNP Rudolph)))
      (NP (DT the) (JJ red-nosed) (NN reindeer))
      (VP (VBD Had)
        (NP (DT a) (RB very) (JJ shiny) (NN nose))))
    (. .)))

cc(words-6, And-1)
det(following-3, the-2)
nsubj(words-6, following-3)
cop(words-6, are-4)
det(words-6, the-5)
root(ROOT-0, words-6)
case(song-9, of-7)
det(song-9, the-8)
nmod:of(words-6, song-9)
case(Rudolph-15, Rudolph-11)
det(Rudolph-15, the-12)
amod(Rudolph-15, Red-Nosed-13)
compound(Rudolph-15, Reindeer-14)
nmod:rudolph(Had-19, Rudolph-15)
det(reindeer-18, the-16)
amod(reindeer-18, red-nosed-17)
nsubj(Had-19, reindeer-18)
parataxis(words-6, Had-19)
det(nose-23, a-20)
advmod(nose-23, very-21)
amod(nose-23, shiny-22)
dobj(Had-19, nose-23)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (ADVP (RB ever))
        (VP (VBD saw)
          (NP (PRP it)))))
    (NP (PRP You))
    (VP (MD would)
      (ADVP (RB even))
      (VP (VB say)
        (S
          (NP (PRP it))
          (ADJP (JJ glows)))))
    (. .)))

cc(say-10, And-1)
mark(saw-5, if-2)
nsubj(saw-5, you-3)
advmod(saw-5, ever-4)
advcl(say-10, saw-5)
dobj(saw-5, it-6)
nsubj(say-10, You-7)
aux(say-10, would-8)
advmod(say-10, even-9)
root(ROOT-0, say-10)
nsubj(glows-12, it-11)
xcomp(say-10, glows-12)

(ROOT
  (S
    (NP
      (NP (DT All))
      (PP (IN of)
        (NP (DT the) (JJ other) (NN reindeer))))
    (VP (VBN Used)
      (S
        (VP (TO to)
          (VP
            (VP (VB laugh))
            (CC and)
            (VP (VB call)
              (NP (PRP him))
              (NP (NNS names)))))))
    (. .)))

nsubj(Used-6, All-1)
nsubj(laugh-8, All-1)
nsubj(call-10, All-1)
case(reindeer-5, of-2)
det(reindeer-5, the-3)
amod(reindeer-5, other-4)
nmod:of(All-1, reindeer-5)
root(ROOT-0, Used-6)
mark(laugh-8, to-7)
xcomp(Used-6, laugh-8)
cc(laugh-8, and-9)
xcomp(Used-6, call-10)
conj:and(laugh-8, call-10)
iobj(call-10, him-11)
dobj(call-10, names-12)

(ROOT
  (S
    (NP (PRP They))
    (ADVP (RB never))
    (VP (VBP let)
      (NP
        (NP (JJ poor) (NNP Rudolph) (NNP Join))
        (PP (IN in)
          (NP (DT any) (NN reindeer) (NNS games)))))
    (. .)))

nsubj(let-3, They-1)
neg(let-3, never-2)
root(ROOT-0, let-3)
amod(Join-6, poor-4)
compound(Join-6, Rudolph-5)
dobj(let-3, Join-6)
case(games-10, in-7)
det(games-10, any-8)
compound(games-10, reindeer-9)
nmod:in(Join-6, games-10)

(ROOT
  (FRAG
    (NP (CD Then) (CD one))
    (SBAR
      (S
        (NP (NNP foggy) (NNP Christmas) (NNP Eve) (NNP Santa))
        (VP (VBD came)
          (S
            (VP (TO to)
              (VP (VB say)))))))
    (: :) (`` ``)
    (S
      (NP
        (NP (NNP Rudolph))
        (PP (IN with)
          (NP
            (NP (PRP$ your) (NN nose))
            (ADJP (RB so) (JJ bright)))))
      (VP (MD Wo) (RB n't)
        (NP (PRP you))
        (VP (VB guide)
          (NP (PRP$ my) (JJ sleigh) (NN tonight)))))
    (. ?) ('' '')))

nummod(one-2, Then-1)
root(ROOT-0, one-2)
compound(Santa-6, foggy-3)
compound(Santa-6, Christmas-4)
compound(Santa-6, Eve-5)
nsubj(came-7, Santa-6)
nsubj(say-9, Santa-6)
dep(one-2, came-7)
mark(say-9, to-8)
xcomp(came-7, say-9)
nsubj(guide-21, Rudolph-12)
case(nose-15, with-13)
nmod:poss(nose-15, your-14)
nmod:with(Rudolph-12, nose-15)
advmod(bright-17, so-16)
amod(nose-15, bright-17)
aux(guide-21, Wo-18)
neg(guide-21, n't-19)
dobj(guide-21, you-20)
dep(one-2, guide-21)
nmod:poss(tonight-24, my-22)
amod(tonight-24, sleigh-23)
dobj(guide-21, tonight-24)

(ROOT
  (S (RB Then)
    (SBAR
      (WHADVP (WRB how))
      (S
        (NP (DT the) (NN reindeer))
        (VP (VBD loved)
          (NP (PRP him))
          (SBAR (IN As)
            (S
              (NP (PRP they))
              (VP
                (VP (VBD shouted)
                  (PRT (RP out))
                  (PP (IN with)
                    (NP (NN glee))))
                (: :) (`` ``)
                (VP (VBZ Rudolph)
                  (NP (DT the) (JJ red-nosed) (NN reindeer)))))))))
    (, ,)
    (NP (PRP You))
    (VP (MD 'll)
      (VP (VB go)
        (PRT (RP down))
        (PP (IN in)
          (NP (NN history)))))
    (. .) ('' '')))

advmod(go-22, Then-1)
advmod(loved-5, how-2)
det(reindeer-4, the-3)
nsubj(loved-5, reindeer-4)
advcl(go-22, loved-5)
dobj(loved-5, him-6)
mark(shouted-9, As-7)
nsubj(shouted-9, they-8)
advcl(loved-5, shouted-9)
compound:prt(shouted-9, out-10)
case(glee-12, with-11)
nmod:with(shouted-9, glee-12)
dep(shouted-9, Rudolph-15)
det(reindeer-18, the-16)
amod(reindeer-18, red-nosed-17)
dobj(Rudolph-15, reindeer-18)
nsubj(go-22, You-20)
aux(go-22, 'll-21)
root(ROOT-0, go-22)
compound:prt(go-22, down-23)
case(history-25, in-24)
nmod:in(go-22, history-25)

