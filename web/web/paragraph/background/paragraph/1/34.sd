(ROOT
  (NP (NNP Dont) (NNP Be) (NNP Fooled) (NNP Again) (. .)))

compound(Again-4, Dont-1)
compound(Again-4, Be-2)
compound(Again-4, Fooled-3)
root(ROOT-0, Again-4)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (NP
          (NP (DT no) (JJ easy) (NN way))
          (PP (IN of)
            (S
              (VP (VBG telling)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (NN someone))
                    (VP (VBZ is)
                      (VP (VBG lying)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBP are)
        (NP (JJ various) (NNS signs)
          (S
            (VP (TO to)
              (VP (VB look)
                (PP (IN for))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(way-5, no-3)
amod(way-5, easy-4)
nsubj(is-2, way-5)
mark(telling-7, of-6)
acl(way-5, telling-7)
advmod(lying-11, when-8)
nsubj(lying-11, someone-9)
aux(lying-11, is-10)
ccomp(telling-7, lying-11)
cc(is-2, but-13)
expl(are-15, there-14)
conj:but(is-2, are-15)
amod(signs-17, various-16)
nsubj(are-15, signs-17)
mark(look-19, to-18)
acl(signs-17, look-19)
nmod(look-19, for-20)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP (NNS liars))
    (ADVP (RB often))
    (VP (VB touch)
      (NP (PRP$ their) (NNS faces)))
    (. .)))

case(example-2, For-1)
nmod:for(touch-6, example-2)
nsubj(touch-6, liars-4)
advmod(touch-6, often-5)
root(ROOT-0, touch-6)
nmod:poss(faces-8, their-7)
dobj(touch-6, faces-8)

(ROOT
  (S
    (NP (DT A) (NN liar))
    (VP (MD may)
      (VP
        (VP (VB stroke)
          (NP (PRP$ his) (NN chin)))
        (CC or)
        (VP (VB touch)
          (NP (PRP$ his) (NN nose)))))
    (. .)))

det(liar-2, A-1)
nsubj(stroke-4, liar-2)
nsubj(touch-8, liar-2)
aux(stroke-4, may-3)
root(ROOT-0, stroke-4)
nmod:poss(chin-6, his-5)
dobj(stroke-4, chin-6)
cc(stroke-4, or-7)
conj:or(stroke-4, touch-8)
nmod:poss(nose-10, his-9)
dobj(touch-8, nose-10)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (DT the) (NN fairy) (NN tale) (NNP Pinocchio))
    (VP (VBZ is)
      (ADJP
        (ADJP (JJR closer))
        (PP (TO to)
          (NP (NN reality))))
      (SBAR (IN than)
        (S
          (NP (PRP one))
          (VP (MD might)
            (VP (VB think))))))
    (. .)))

case(fact-2, In-1)
nmod:in(closer-9, fact-2)
det(Pinocchio-7, the-4)
compound(Pinocchio-7, fairy-5)
compound(Pinocchio-7, tale-6)
nsubj(closer-9, Pinocchio-7)
cop(closer-9, is-8)
root(ROOT-0, closer-9)
case(reality-11, to-10)
nmod:to(closer-9, reality-11)
mark(think-15, than-12)
nsubj(think-15, one-13)
aux(think-15, might-14)
advcl(closer-9, think-15)

(ROOT
  (S
    (PP (VBG According)
      (PP (TO to)
        (NP (DT the) (NNP Chicago) (NNP Smell)
          (CC and)
          (NNP Taste) (NNP Foundation))))
    (, ,)
    (NP (NNS peoples) (NNS noses))
    (VP (VBP get)
      (ADJP
        (ADJP (JJR bigger))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP they))
            (VP (VBP lie)
              (SBAR (IN because)
                (S
                  (NP (NN blood))
                  (VP (VBZ goes)
                    (PP (TO to)
                      (NP (DT the) (NN nose)))))))))))
    (. .)))

case(Smell-5, According-1)
mwe(According-1, to-2)
det(Smell-5, the-3)
compound(Smell-5, Chicago-4)
nmod:according_to(get-12, Smell-5)
cc(Smell-5, and-6)
compound(Foundation-8, Taste-7)
conj:and(Smell-5, Foundation-8)
nmod:according_to(get-12, Foundation-8)
compound(noses-11, peoples-10)
nsubj(get-12, noses-11)
root(ROOT-0, get-12)
xcomp(get-12, bigger-13)
advmod(lie-16, when-14)
nsubj(lie-16, they-15)
ccomp(bigger-13, lie-16)
mark(goes-19, because-17)
nsubj(goes-19, blood-18)
advcl(lie-16, goes-19)
case(nose-22, to-20)
det(nose-22, the-21)
nmod:to(goes-19, nose-22)

(ROOT
  (S
    (PP (IN As)
      (NP (DT a) (NN result)))
    (, ,)
    (NP (NNS people))
    (ADVP (RB often))
    (VP (VBP scratch)
      (NP (PRP$ their) (NNS noses))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (VBP are)
            (VP (VBG lying))))))
    (. .)))

case(result-3, As-1)
det(result-3, a-2)
nmod:as(scratch-7, result-3)
nsubj(scratch-7, people-5)
advmod(scratch-7, often-6)
root(ROOT-0, scratch-7)
nmod:poss(noses-9, their-8)
dobj(scratch-7, noses-9)
advmod(lying-13, when-10)
nsubj(lying-13, they-11)
aux(lying-13, are-12)
advcl(scratch-7, lying-13)

(ROOT
  (S
    (NP (NNS Researchers))
    (VP (VBD found)
      (NP (DT this))
      (PP (IN out)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP they))
            (VP (VBD watched)
              (NP
                (NP (DT a) (NN tape))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN person))
                    (VP (VBG talking))))))))))
    (. .)))

nsubj(found-2, Researchers-1)
root(ROOT-0, found-2)
dobj(found-2, this-3)
mark(watched-7, out-4)
advmod(watched-7, when-5)
nsubj(watched-7, they-6)
advcl(found-2, watched-7)
det(tape-9, a-8)
dobj(watched-7, tape-9)
case(person-12, of-10)
det(person-12, a-11)
nmod:of(tape-9, person-12)
acl(person-12, talking-13)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NN person))
        (VP (VBD was)
          (VP (VBG telling)
            (NP (DT the) (NN truth))))))
    (, ,)
    (NP (PRP he))
    (VP (VBP didnt)
      (VP (VB touch)
        (NP (PRP$ his) (NN nose))))
    (. .)))

advmod(telling-5, When-1)
det(person-3, the-2)
nsubj(telling-5, person-3)
aux(telling-5, was-4)
advcl(didnt-10, telling-5)
det(truth-7, the-6)
dobj(telling-5, truth-7)
nsubj(didnt-10, he-9)
root(ROOT-0, didnt-10)
xcomp(didnt-10, touch-11)
nmod:poss(nose-13, his-12)
dobj(touch-11, nose-13)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD was)
          (VP (VBG lying)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD touched)
      (S
        (NP (PRP it))
        (ADVP (RB once)))
      (NP (DT every) (CD four) (NNS minutes)))
    (. .)))

advmod(lying-4, When-1)
nsubj(lying-4, he-2)
aux(lying-4, was-3)
advcl(touched-7, lying-4)
nsubj(touched-7, he-6)
root(ROOT-0, touched-7)
xcomp(touched-7, it-8)
advmod(it-8, once-9)
det(minutes-12, every-10)
nummod(minutes-12, four-11)
dobj(touched-7, minutes-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD should)
      (ADVP (RB also))
      (VP (VB watch)
        (NP (DT a) (JJ persons) (NN eye) (NNS movements))))
    (. .)))

nsubj(watch-4, You-1)
aux(watch-4, should-2)
advmod(watch-4, also-3)
root(ROOT-0, watch-4)
det(movements-8, a-5)
amod(movements-8, persons-6)
compound(movements-8, eye-7)
dobj(watch-4, movements-8)

(ROOT
  (S
    (NP (JJS Most) (NNS people))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP
            (VP (VB keep)
              (NP (NN eye) (NN contact))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP we))
                  (VP (VBP tell)
                    (NP (DT the) (NN truth))))))
            (CC and)
            (VP (VB look)
              (PRT (RP away))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP we))
                  (VP (VBP lie)))))))))
    (. .)))

amod(people-2, Most-1)
nsubj(think-3, people-2)
root(ROOT-0, think-3)
mark(keep-6, that-4)
nsubj(keep-6, we-5)
nsubj(look-15, we-5)
ccomp(think-3, keep-6)
compound(contact-8, eye-7)
dobj(keep-6, contact-8)
advmod(tell-11, when-9)
nsubj(tell-11, we-10)
advcl(keep-6, tell-11)
det(truth-13, the-12)
dobj(tell-11, truth-13)
cc(keep-6, and-14)
ccomp(think-3, look-15)
conj:and(keep-6, look-15)
compound:prt(look-15, away-16)
advmod(lie-19, when-17)
nsubj(lie-19, we-18)
advcl(look-15, lie-19)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (DT this))
    (VP (VBZ is) (RB not)
      (ADJP (JJ true)))
    (. .)))

advmod(true-6, However-1)
nsubj(true-6, this-3)
cop(true-6, is-4)
neg(true-6, not-5)
root(ROOT-0, true-6)

(ROOT
  (S
    (NP (JJ Many) (NNS people))
    (VP (VBP look)
      (ADVP (RB right)
        (PP (IN at)
          (NP (PRP you))))
      (SBAR (IN because)
        (S
          (NP (PRP they))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB appear)
                  (ADJP (JJ sincere)))))))))
    (. .)))

amod(people-2, Many-1)
nsubj(look-3, people-2)
root(ROOT-0, look-3)
advmod(look-3, right-4)
case(you-6, at-5)
nmod:at(right-4, you-6)
mark(want-9, because-7)
nsubj(want-9, they-8)
nsubj(appear-11, they-8)
advcl(look-3, want-9)
mark(appear-11, to-10)
xcomp(want-9, appear-11)
xcomp(appear-11, sincere-12)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ unconscious) (NN reason))
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (NNS people))
            (VP (MD may) (RB not)
              (VP (VB look)
                (PP (IN at)
                  (NP (PRP you)))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP they))
                    (VP (VBP are)
                      (VP (VBG telling)
                        (NP (DT the) (NN truth))))))))))))
    (. .)))

case(fact-2, In-1)
nmod:in(is-5, fact-2)
expl(is-5, there-4)
root(ROOT-0, is-5)
det(reason-8, an-6)
amod(reason-8, unconscious-7)
nsubj(is-5, reason-8)
advmod(look-13, why-9)
nsubj(look-13, people-10)
aux(look-13, may-11)
neg(look-13, not-12)
acl:relcl(reason-8, look-13)
case(you-15, at-14)
nmod:at(look-13, you-15)
advmod(telling-19, when-16)
nsubj(telling-19, they-17)
aux(telling-19, are-18)
advcl(look-13, telling-19)
det(truth-21, the-20)
dobj(telling-19, truth-21)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNS people))
        (VP (VBP have)
          (S
            (VP (TO to)
              (VP (VB recall)
                (NP (NN information))
                (PP (IN from)
                  (NP (NN memory)))))))))
    (, ,)
    (NP (PRP$ their) (NNS eyes))
    (VP (VBP move)
      (PRT (RP up)))
    (. .)))

advmod(have-3, When-1)
nsubj(have-3, people-2)
nsubj(recall-5, people-2)
advcl(move-12, have-3)
mark(recall-5, to-4)
xcomp(have-3, recall-5)
dobj(recall-5, information-6)
case(memory-8, from-7)
nmod:from(recall-5, memory-8)
nmod:poss(eyes-11, their-10)
nsubj(move-12, eyes-11)
root(ROOT-0, move-12)
compound:prt(move-12, up-13)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP do)
      (NP (DT this) (NN unconsciously))
      (ADVP (RB again)
        (CC and)
        (RB again)))
    (. .)))

nsubj(do-2, They-1)
root(ROOT-0, do-2)
det(unconsciously-4, this-3)
dobj(do-2, unconsciously-4)
advmod(do-2, again-5)
cc(again-5, and-6)
advmod(do-2, again-7)
conj:and(again-5, again-7)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN addition))
        (PP (TO to)
          (NP
            (NP (NN body) (NN language))
            (CC and)
            (NP (NN eye) (NN contact))))))
    (, ,)
    (NP (PRP you))
    (VP (MD can)
      (ADVP (RB also))
      (VP (VB pay)
        (NP (NN attention))
        (S
          (VP (TO to)
            (VP (VB change)
              (PP (IN of)
                (NP (NN voice))))))))
    (. .)))

case(language-5, In-1)
mwe(In-1, addition-2)
mwe(In-1, to-3)
compound(language-5, body-4)
nmod:in_addition_to(pay-13, language-5)
cc(language-5, and-6)
compound(contact-8, eye-7)
conj:and(language-5, contact-8)
nmod:in_addition_to(pay-13, contact-8)
nsubj(pay-13, you-10)
aux(pay-13, can-11)
advmod(pay-13, also-12)
root(ROOT-0, pay-13)
dobj(pay-13, attention-14)
mark(change-16, to-15)
advcl(pay-13, change-16)
case(voice-18, of-17)
nmod:of(change-16, voice-18)

(ROOT
  (S
    (NP
      (NP (DT A) (NN variation))
      (PP (IN in)
        (NP
          (NP
            (NP (DT the) (NN pitch))
            (PP (IN of)
              (NP (DT a) (NN voice))))
          (CC or)
          (NP
            (NP (DT the) (NN rate))
            (PP (IN of)
              (NP (NN speech)))))))
    (VP (MD can)
      (VP (VB be)
        (NP
          (NP (DT a) (NN sign))
          (PP (IN of)
            (NP (VBG lying))))))
    (. .)))

det(variation-2, A-1)
nsubj(sign-17, variation-2)
case(pitch-5, in-3)
det(pitch-5, the-4)
nmod:in(variation-2, pitch-5)
case(voice-8, of-6)
det(voice-8, a-7)
nmod:of(pitch-5, voice-8)
cc(pitch-5, or-9)
det(rate-11, the-10)
nmod:in(variation-2, rate-11)
conj:or(pitch-5, rate-11)
case(speech-13, of-12)
nmod:of(rate-11, speech-13)
aux(sign-17, can-14)
cop(sign-17, be-15)
det(sign-17, a-16)
root(ROOT-0, sign-17)
case(lying-19, of-18)
nmod:of(sign-17, lying-19)

(ROOT
  (SINV (RB So)
    (VP (MD can))
    (NP
      (NP (NNS lots))
      (PP (IN of)
        (NP (NNS umms)
          (CC and)
          (NNS ahhs))))
    (. .)))

advmod(can-2, So-1)
root(ROOT-0, can-2)
nsubj(can-2, lots-3)
case(umms-5, of-4)
nmod:of(lots-3, umms-5)
cc(umms-5, and-6)
nmod:of(lots-3, ahhs-7)
conj:and(umms-5, ahhs-7)

(ROOT
  (S
    (PP (IN For)
      (NP (NN instance)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT the) (NNS speakers) (NN pitch))
        (VP (VBZ turns)
          (ADJP (JJ high)))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (RB very) (JJ possible))
      (SBAR (IN that)
        (S
          (NP (DT the) (NN speaker))
          (VP (VBZ is)
            (VP (VBG lying))))))
    (. .)))

case(instance-2, For-1)
nmod:for(possible-15, instance-2)
mark(turns-8, if-4)
det(pitch-7, the-5)
compound(pitch-7, speakers-6)
nsubj(turns-8, pitch-7)
advcl(possible-15, turns-8)
xcomp(turns-8, high-9)
advmod(it-12, then-11)
nsubj(possible-15, it-12)
cop(possible-15, is-13)
advmod(possible-15, very-14)
root(ROOT-0, possible-15)
mark(lying-20, that-16)
det(speaker-18, the-17)
nsubj(lying-20, speaker-18)
aux(lying-20, is-19)
ccomp(possible-15, lying-20)

(ROOT
  (S
    (NP (NNP Complex))
    (VP (VBZ lies)
      (NP (NN result))
      (PP (IN in)
        (NP
          (NP (DT a) (JJR slower) (NN speech) (NN rate))
          (, ,)
          (SBAR (IN while)
            (S
              (NP (JJ simple) (NNS ones))
              (VP (VBP produce)
                (NP (DT the) (JJ opposite) (NN result))))))))
    (. .)))

nsubj(lies-2, Complex-1)
root(ROOT-0, lies-2)
dobj(lies-2, result-3)
case(rate-8, in-4)
det(rate-8, a-5)
amod(rate-8, slower-6)
compound(rate-8, speech-7)
nmod:in(lies-2, rate-8)
mark(produce-13, while-10)
amod(ones-12, simple-11)
nsubj(produce-13, ones-12)
dep(rate-8, produce-13)
det(result-16, the-14)
amod(result-16, opposite-15)
dobj(produce-13, result-16)

(ROOT
  (S
    (NP (DT The) (NN point))
    (ADVP (RB here))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT no) (JJ particular) (NN behavior))
          (VP (VBZ means)
            (SBAR
              (S
                (NP (DT a) (NN person))
                (VP (VBZ is)
                  (VP (VBG lying)))))))))
    (. .)))

det(point-2, The-1)
nsubj(is-4, point-2)
advmod(is-4, here-3)
root(ROOT-0, is-4)
mark(means-9, that-5)
neg(behavior-8, no-6)
amod(behavior-8, particular-7)
nsubj(means-9, behavior-8)
ccomp(is-4, means-9)
det(person-11, a-10)
nsubj(lying-13, person-11)
aux(lying-13, is-12)
ccomp(means-9, lying-13)

(ROOT
  (S
    (NP (DT The) (NN secret))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP
            (VP (VB watch)
              (NP (NNS people))
              (ADVP (RB closely)))
            (CC and)
            (VP (VB follow)
              (NP (PRP$ their) (JJ mental) (NNS processes)))))))
    (. .)))

det(secret-2, The-1)
nsubj(is-3, secret-2)
nsubj(watch-5, secret-2)
nsubj(follow-9, secret-2)
root(ROOT-0, is-3)
mark(watch-5, to-4)
xcomp(is-3, watch-5)
dobj(watch-5, people-6)
advmod(watch-5, closely-7)
cc(watch-5, and-8)
xcomp(is-3, follow-9)
conj:and(watch-5, follow-9)
nmod:poss(processes-12, their-10)
amod(processes-12, mental-11)
dobj(follow-9, processes-12)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP you))
        (VP (VBP watch)
          (NP (PRP$ their) (NN body) (NN language)))))
    (, ,)
    (NP
      (NP (NN eye) (NNS movements))
      (, ,)
      (CC and)
      (NP
        (NP (DT any) (NNS changes))
        (PP (IN in)
          (NP (NN voice))))
      (, ,))
    (VP (VBP look)
      (PP (IN for)
        (NP (DT the) (NNS patterns))))
    (. .)))

mark(watch-3, As-1)
nsubj(watch-3, you-2)
advcl(look-17, watch-3)
nmod:poss(language-6, their-4)
compound(language-6, body-5)
dobj(watch-3, language-6)
compound(movements-9, eye-8)
nsubj(look-17, movements-9)
cc(movements-9, and-11)
det(changes-13, any-12)
conj:and(movements-9, changes-13)
nsubj(look-17, changes-13)
case(voice-15, in-14)
nmod:in(changes-13, voice-15)
root(ROOT-0, look-17)
case(patterns-20, for-18)
det(patterns-20, the-19)
nmod:for(look-17, patterns-20)

(ROOT
  (S
    (SBAR
      (X (DT The) (JJR more))
      (S
        (NP (PRP you))
        (VP (VB practice)
          (S
            (VP (VBG detecting)
              (NP (NNS lies)))))))
    (, ,)
    (NP (DT the) (JJR better) (NN youll))
    (VP (VBP get)
      (PP (IN at)
        (NP (PRP it))))
    (. .)))

det(more-2, The-1)
dep(practice-4, more-2)
nsubj(practice-4, you-3)
advcl(get-11, practice-4)
xcomp(practice-4, detecting-5)
dobj(detecting-5, lies-6)
det(youll-10, the-8)
amod(youll-10, better-9)
nsubj(get-11, youll-10)
root(ROOT-0, get-11)
case(it-13, at-12)
nmod:at(get-11, it-13)

