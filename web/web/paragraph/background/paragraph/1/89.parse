(ROOT
  (NP
    (NP (NNP Unit) (CD 3))
    (VP (VBG Inventing)
      (NP (DT a) (NNP Better) (NNP World)))
    (. .)))

root(ROOT-0, Unit-1)
nummod(Unit-1, 3-2)
acl(Unit-1, Inventing-3)
det(World-6, a-4)
compound(World-6, Better-5)
dobj(Inventing-3, World-6)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (DT an) (JJ old) (NN saying))
        (VP (VBZ goes))))
    (, ,)
    (NP (NNP Necessity))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN mother))
        (PP (IN of)
          (NP (NN invention)))))
    (. .)))

mark(goes-5, As-1)
det(saying-4, an-2)
amod(saying-4, old-3)
nsubj(goes-5, saying-4)
advcl(mother-10, goes-5)
nsubj(mother-10, Necessity-7)
cop(mother-10, is-8)
det(mother-10, the-9)
root(ROOT-0, mother-10)
case(invention-12, of-11)
nmod:of(mother-10, invention-12)

(ROOT
  (S
    (NP (JJ Many) (NNS times))
    (, ,)
    (NP (NNS people))
    (VP (VBP come)
      (PRT (RP up))
      (PP (IN with)
        (NP (NNS ideas)
          (S
            (VP (TO to)
              (VP (VB meet)
                (NP (PRP$ their) (JJ own) (NNS needs))))))))
    (. .)))

amod(times-2, Many-1)
nsubj(come-5, times-2)
nsubj(come-5, people-4)
root(ROOT-0, come-5)
compound:prt(come-5, up-6)
case(ideas-8, with-7)
nmod:with(come-5, ideas-8)
mark(meet-10, to-9)
acl(ideas-8, meet-10)
nmod:poss(needs-13, their-11)
amod(needs-13, own-12)
dobj(meet-10, needs-13)

(ROOT
  (S
    (ADVP (RB Later))
    (, ,)
    (NP
      (NP (DT the) (NNS solutions))
      (PP (TO to)
        (NP (PRP$ their) (NNS problems))))
    (VP (MD may)
      (VP (VB become)
        (NP
          (NP (JJ great) (NNS inventions))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP change)
                (NP
                  (NP (PRP$ our) (NN way))
                  (PP (IN of)
                    (NP (NN life))))))))))
    (. .)))

advmod(become-9, Later-1)
det(solutions-4, the-3)
nsubj(become-9, solutions-4)
case(problems-7, to-5)
nmod:poss(problems-7, their-6)
nmod:to(solutions-4, problems-7)
aux(become-9, may-8)
root(ROOT-0, become-9)
amod(inventions-11, great-10)
xcomp(become-9, inventions-11)
nsubj(change-13, inventions-11)
ref(inventions-11, that-12)
acl:relcl(inventions-11, change-13)
nmod:poss(way-15, our-14)
dobj(change-13, way-15)
case(life-17, of-16)
nmod:of(way-15, life-17)

(ROOT
  (S
    (NP (DT The) (CD two) (NNS examples))
    (ADVP (RB below))
    (VP (MD will)
      (ADVP (RB perfectly))
      (VP (VB explain)
        (NP (DT this) (NN point))))
    (. .)))

det(examples-3, The-1)
nummod(examples-3, two-2)
nsubj(explain-7, examples-3)
advmod(explain-7, below-4)
aux(explain-7, will-5)
advmod(explain-7, perfectly-6)
root(ROOT-0, explain-7)
det(point-9, this-8)
dobj(explain-7, point-9)

(ROOT
  (S
    (NP
      (NP (NNP Teng) (NNP Hung-chi))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ is)
            (NP (DT a) (JJ famous) (JJ Taiwanese) (NN inventor)))))
      (, ,))
    (VP (VBD created)
      (NP (PRP$ his) (JJ first) (NN invention))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD was)
            (NP (DT a) (JJ vocational) (NN school) (NN student))))))
    (. .)))

compound(Hung-chi-2, Teng-1)
nsubj(inventor-9, Hung-chi-2)
nsubj(created-11, Hung-chi-2)
ref(Hung-chi-2, who-4)
cop(inventor-9, is-5)
det(inventor-9, a-6)
amod(inventor-9, famous-7)
amod(inventor-9, Taiwanese-8)
acl:relcl(Hung-chi-2, inventor-9)
root(ROOT-0, created-11)
nmod:poss(invention-14, his-12)
amod(invention-14, first-13)
dobj(created-11, invention-14)
advmod(student-21, when-15)
nsubj(student-21, he-16)
cop(student-21, was-17)
det(student-21, a-18)
amod(student-21, vocational-19)
compound(student-21, school-20)
advcl(created-11, student-21)

(ROOT
  (S
    (PP (IN At)
      (NP (DT that) (NN time)))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (VP (VBG working)
        (PP (IN as)
          (NP (DT a) (NN factory) (NN mechanic)))))
    (. .)))

case(time-3, At-1)
det(time-3, that-2)
nmod:at(working-7, time-3)
nsubj(working-7, he-5)
aux(working-7, was-6)
root(ROOT-0, working-7)
case(mechanic-11, as-8)
det(mechanic-11, a-9)
compound(mechanic-11, factory-10)
nmod:as(working-7, mechanic-11)

(ROOT
  (S
    (NP (CD One) (NN day))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (VP (VBG using)
        (NP
          (NP (DT the) (NN restroom))
          (PP (IN in)
            (NP (DT the) (NN factory))))))
    (. .)))

nummod(day-2, One-1)
nmod:tmod(using-6, day-2)
nsubj(using-6, he-4)
aux(using-6, was-5)
root(ROOT-0, using-6)
det(restroom-8, the-7)
dobj(using-6, restroom-8)
case(factory-11, in-9)
det(factory-11, the-10)
nmod:in(restroom-8, factory-11)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NNS hands))
      (VP (VBD were)
        (ADJP (JJ dirty)
          (PP (IN from)
            (NP (NN work))))))
    (, ,) (IN so)
    (S
      (NP (PRP he))
      (VP (VBD did) (RB not)
        (VP (VB want)
          (S
            (VP (TO to)
              (VP (VB touch)
                (NP (DT the) (NN faucet))))))))
    (. .)))

nmod:poss(hands-2, His-1)
nsubj(dirty-4, hands-2)
cop(dirty-4, were-3)
root(ROOT-0, dirty-4)
case(work-6, from-5)
nmod:from(dirty-4, work-6)
dep(dirty-4, so-8)
nsubj(want-12, he-9)
nsubj(touch-14, he-9)
aux(want-12, did-10)
neg(want-12, not-11)
parataxis(dirty-4, want-12)
mark(touch-14, to-13)
xcomp(want-12, touch-14)
det(faucet-16, the-15)
dobj(touch-14, faucet-16)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB then))
    (VP (VBD hoped)
      (S
        (VP (TO to)
          (VP (VB design)
            (NP
              (NP (DT a) (JJ special) (NN faucet))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (MD could)
                    (VP (VB run)
                      (ADVP (RB automatically))
                      (PP (IN without)
                        (S
                          (VP (VBG being)
                            (VP (VBN touched))))))))))))))
    (. .)))

nsubj(hoped-3, He-1)
nsubj(design-5, He-1)
advmod(hoped-3, then-2)
root(ROOT-0, hoped-3)
mark(design-5, to-4)
xcomp(hoped-3, design-5)
det(faucet-8, a-6)
amod(faucet-8, special-7)
dobj(design-5, faucet-8)
nsubj(run-11, faucet-8)
ref(faucet-8, which-9)
aux(run-11, could-10)
acl:relcl(faucet-8, run-11)
advmod(run-11, automatically-12)
mark(touched-15, without-13)
auxpass(touched-15, being-14)
advcl(run-11, touched-15)

(ROOT
  (S
    (NP (NNP Teng))
    (VP (VBD worked)
      (ADJP (JJ hard)
        (S
          (VP (TO to)
            (VP (VB put)
              (NP (DT this) (NN idea))
              (PP (IN into)
                (NP (NN practice))))))))
    (. .)))

nsubj(worked-2, Teng-1)
root(ROOT-0, worked-2)
xcomp(worked-2, hard-3)
mark(put-5, to-4)
xcomp(hard-3, put-5)
det(idea-7, this-6)
dobj(put-5, idea-7)
case(practice-9, into-8)
nmod:into(put-5, practice-9)

(ROOT
  (S
    (ADVP (IN Before) (RB long))
    (, ,)
    (NP (PRP he))
    (VP (VBD invented)
      (NP
        (NP (DT a) (NN faucet))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD was)
              (VP (VBN controlled)
                (PP (IN by)
                  (NP (DT a) (JJ built-in) (JJ sensing) (NN device)))))))))
    (. .)))

case(long-2, Before-1)
advmod(invented-5, long-2)
nsubj(invented-5, he-4)
root(ROOT-0, invented-5)
det(faucet-7, a-6)
dobj(invented-5, faucet-7)
nsubjpass(controlled-10, faucet-7)
ref(faucet-7, that-8)
auxpass(controlled-10, was-9)
acl:relcl(faucet-7, controlled-10)
case(device-15, by-11)
det(device-15, a-12)
amod(device-15, built-in-13)
amod(device-15, sensing-14)
nmod:by(controlled-10, device-15)

(ROOT
  (S
    (PP (IN At)
      (NP (DT the) (NN time)))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (ADJP (RB only) (JJ seventeen)))
    (. .)))

case(time-3, At-1)
det(time-3, the-2)
nmod:at(seventeen-8, time-3)
nsubj(seventeen-8, he-5)
cop(seventeen-8, was-6)
advmod(seventeen-8, only-7)
root(ROOT-0, seventeen-8)

(ROOT
  (S
    (NP (DT This) (JJ young) (NN inventor))
    (ADVP (RB later))
    (VP (VBD sold)
      (NP (DT the) (NNS rights))
      (PP (TO to)
        (NP (PRP$ his) (NN invention)))
      (PP (IN for)
        (NP
          (NP (NNP NT$))
          (NP
            (QP (CD 1.5) (CD million))))))
    (. .)))

det(inventor-3, This-1)
amod(inventor-3, young-2)
nsubj(sold-5, inventor-3)
advmod(sold-5, later-4)
root(ROOT-0, sold-5)
det(rights-7, the-6)
dobj(sold-5, rights-7)
case(invention-10, to-8)
nmod:poss(invention-10, his-9)
nmod:to(sold-5, invention-10)
case(NT$-12, for-11)
nmod:for(sold-5, NT$-12)
compound(million-14, 1.5-13)
dep(NT$-12, million-14)

(ROOT
  (S
    (PP (IN Since)
      (NP (RB then)))
    (, ,)
    (NP (NNP Teng))
    (VP (VBZ has)
      (VP (VBN created)
        (NP (JJ many) (JJ other) (JJ useful) (NNS inventions))))
    (. .)))

case(then-2, Since-1)
nmod:since(created-6, then-2)
nsubj(created-6, Teng-4)
aux(created-6, has-5)
root(ROOT-0, created-6)
amod(inventions-10, many-7)
amod(inventions-10, other-8)
amod(inventions-10, useful-9)
dobj(created-6, inventions-10)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ has)
      (ADVP (RB also))
      (VP (VBN represented)
        (NP (NNP Taiwan))
        (PP (IN at)
          (NP
            (NP (DT the) (NN iENA) (NN exhibition))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (NP
                    (NP (DT an) (JJ international) (NN exhibition))
                    (PP (IN in)
                      (NP (NNP Germany)))))))))))
    (. .)))

nsubj(represented-4, He-1)
aux(represented-4, has-2)
advmod(represented-4, also-3)
root(ROOT-0, represented-4)
dobj(represented-4, Taiwan-5)
case(exhibition-9, at-6)
det(exhibition-9, the-7)
compound(exhibition-9, iENA-8)
nmod:at(represented-4, exhibition-9)
nsubj(exhibition-15, exhibition-9)
ref(exhibition-9, which-11)
cop(exhibition-15, is-12)
det(exhibition-15, an-13)
amod(exhibition-15, international-14)
acl:relcl(exhibition-9, exhibition-15)
case(Germany-17, in-16)
nmod:in(exhibition-15, Germany-17)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ has)
      (VP (VBN won)
        (NP (JJ first) (NN prize))
        (ADVP (RB there))
        (NP (JJ many) (NNS times))))
    (. .)))

nsubj(won-3, He-1)
aux(won-3, has-2)
root(ROOT-0, won-3)
amod(prize-5, first-4)
dobj(won-3, prize-5)
advmod(won-3, there-6)
amod(times-8, many-7)
dobj(won-3, times-8)

(ROOT
  (S
    (PP (IN For)
      (NP (PRP$ his) (JJ many) (JJ brilliant) (NNS inventions)))
    (, ,)
    (NP (NNP Teng))
    (VP (VBZ has)
      (VP (VBN become)
        (S
          (VP (VBN known)
            (PP (IN as)
              (NP (NNP Taiwans) (NNP Edison)))))))
    (. .)))

case(inventions-5, For-1)
nmod:poss(inventions-5, his-2)
amod(inventions-5, many-3)
amod(inventions-5, brilliant-4)
nmod:for(become-9, inventions-5)
nsubj(become-9, Teng-7)
aux(become-9, has-8)
root(ROOT-0, become-9)
dep(become-9, known-10)
case(Edison-13, as-11)
compound(Edison-13, Taiwans-12)
nmod:as(known-10, Edison-13)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ other) (JJ wonderful) (JJ modern) (NN invention))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD came)
            (PP (IN from)
              (NP (DT a) (JJ simple) (NN need)))))))
    (VP (VBZ is)
      (NP (DT the) (JJ Post-it) (NN note)))
    (. .)))

det(invention-5, The-1)
amod(invention-5, other-2)
amod(invention-5, wonderful-3)
amod(invention-5, modern-4)
nsubj(came-7, invention-5)
nsubj(note-15, invention-5)
ref(invention-5, that-6)
acl:relcl(invention-5, came-7)
case(need-11, from-8)
det(need-11, a-9)
amod(need-11, simple-10)
nmod:from(came-7, need-11)
cop(note-15, is-12)
det(note-15, the-13)
amod(note-15, Post-it-14)
root(ROOT-0, note-15)

(ROOT
  (S
    (NP (NNP Post-it))
    (VP (VBD was) (RB not)
      (ADJP (JJ successful)
        (PP (IN at)
          (ADVP (RB first)))))
    (. .)))

nsubj(successful-4, Post-it-1)
cop(successful-4, was-2)
neg(successful-4, not-3)
root(ROOT-0, successful-4)
case(first-6, at-5)
advcl:at(successful-4, first-6)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN result))
        (PP (IN of)
          (NP (DT a) (VBN failed) (NN experiment)))))
    (. .)))

case(fact-2, In-1)
nmod:in(result-7, fact-2)
nsubj(result-7, it-4)
cop(result-7, was-5)
det(result-7, the-6)
root(ROOT-0, result-7)
case(experiment-11, of-8)
det(experiment-11, a-9)
amod(experiment-11, failed-10)
nmod:of(result-7, experiment-11)

(ROOT
  (S
    (NP
      (NP (NNP Spencer) (NNP Silver))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD was)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNS inventors))
                  (PP (IN of)
                    (NP (DT the) (JJ Post-it) (NN note)))))))))
      (, ,))
    (VP (VBD had)
      (VP (VBN tried)
        (S
          (VP (TO to)
            (VP (VB invent)
              (NP (DT a) (JJ strong) (NN glue)))))))
    (. .)))

compound(Silver-2, Spencer-1)
nsubj(one-6, Silver-2)
nsubj(tried-16, Silver-2)
nsubj(invent-18, Silver-2)
ref(Silver-2, who-4)
cop(one-6, was-5)
acl:relcl(Silver-2, one-6)
case(inventors-9, of-7)
det(inventors-9, the-8)
nmod:of(one-6, inventors-9)
case(note-13, of-10)
det(note-13, the-11)
amod(note-13, Post-it-12)
nmod:of(inventors-9, note-13)
aux(tried-16, had-15)
root(ROOT-0, tried-16)
mark(invent-18, to-17)
xcomp(tried-16, invent-18)
det(glue-21, a-19)
amod(glue-21, strong-20)
dobj(invent-18, glue-21)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP (PRP he))
        (VP (VBD experimented)
          (PP (IN with)
            (NP (JJ different) (NNS chemicals))))))
    (, ,)
    (NP (DT the) (NNS results))
    (ADVP (RB never))
    (VP (VBD met)
      (NP (PRP$ his) (JJ expectationsXthe) (NN glue))
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBD made)
            (SBAR
              (S
                (VP (VBD turned)
                  (PRT (RP out))
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (RB very) (JJ weak))))))))))))
    (. .)))

mark(experimented-3, Although-1)
nsubj(experimented-3, he-2)
advcl(met-11, experimented-3)
case(chemicals-6, with-4)
amod(chemicals-6, different-5)
nmod:with(experimented-3, chemicals-6)
det(results-9, the-8)
nsubj(met-11, results-9)
neg(met-11, never-10)
root(ROOT-0, met-11)
nmod:poss(glue-14, his-12)
amod(glue-14, expectationsXthe-13)
dobj(met-11, glue-14)
mark(made-17, that-15)
nsubj(made-17, he-16)
ccomp(met-11, made-17)
ccomp(made-17, turned-18)
compound:prt(turned-18, out-19)
mark(weak-23, to-20)
cop(weak-23, be-21)
advmod(weak-23, very-22)
xcomp(turned-18, weak-23)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBP wasnt)
      (ADJP (JJ disappointed))
      (, ,)
      (ADVP (RB though)))
    (. .)))

nsubj(wasnt-2, He-1)
root(ROOT-0, wasnt-2)
xcomp(wasnt-2, disappointed-3)
advmod(wasnt-2, though-5)

(ROOT
  (S
    (S
      (ADVP (RB Instead))
      (, ,)
      (NP (PRP he))
      (VP (VBD tried)
        (S
          (VP (TO to)
            (VP (VB convince)
              (NP
                (NP (PRP$ his) (NNS co-workers))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN usefulness))
                    (PP (IN of)
                      (NP (DT the) (JJ weak) (NN glue)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBD did) (RB not)
        (VP (VB listen))))
    (. .)))

advmod(tried-4, Instead-1)
nsubj(tried-4, he-3)
nsubj(convince-6, he-3)
root(ROOT-0, tried-4)
mark(convince-6, to-5)
xcomp(tried-4, convince-6)
nmod:poss(co-workers-8, his-7)
dobj(convince-6, co-workers-8)
case(usefulness-11, of-9)
det(usefulness-11, the-10)
nmod:of(co-workers-8, usefulness-11)
case(glue-15, of-12)
det(glue-15, the-13)
amod(glue-15, weak-14)
nmod:of(usefulness-11, glue-15)
cc(tried-4, but-17)
nsubj(listen-21, they-18)
aux(listen-21, did-19)
neg(listen-21, not-20)
conj:but(tried-4, listen-21)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (NNP Silvers) (JJ weak) (NN glue))
    (VP (VBD drew)
      (NP (JJ someones) (NN attention)))
    (. .)))

advmod(drew-6, However-1)
compound(glue-5, Silvers-3)
amod(glue-5, weak-4)
nsubj(drew-6, glue-5)
root(ROOT-0, drew-6)
amod(attention-8, someones-7)
dobj(drew-6, attention-8)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNP Silvers) (NN co-worker) (NNP Art) (NNP Fry))
        (VP (VBD sang)
          (NP (NNS hymns))
          (PP (IN during)
            (NP (NN church) (NNS services))))))
    (, ,)
    (NP (PRP$ his) (NNS bookmarks))
    (VP (VBD fell)
      (PRT (RP out))
      (PP (IN of)
        (NP (PRP$ his) (NN hymn) (NN book))
        (NP
          (ADVP (RB again)
            (CC and)
            (RB again))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (ADVP (RB really))
              (VP (VBD frustrated)
                (NP (PRP him))))))))
    (. .)))

advmod(sang-6, When-1)
compound(Fry-5, Silvers-2)
compound(Fry-5, co-worker-3)
compound(Fry-5, Art-4)
nsubj(sang-6, Fry-5)
advcl(fell-14, sang-6)
dobj(sang-6, hymns-7)
case(services-10, during-8)
compound(services-10, church-9)
nmod:during(sang-6, services-10)
nmod:poss(bookmarks-13, his-12)
nsubj(fell-14, bookmarks-13)
root(ROOT-0, fell-14)
compound:prt(fell-14, out-15)
case(book-19, of-16)
nmod:poss(book-19, his-17)
compound(book-19, hymn-18)
nmod:of(fell-14, book-19)
dep(book-19, again-20)
cc(again-20, and-21)
dep(book-19, again-22)
conj:and(again-20, again-22)
nsubj(frustrated-26, which-24)
advmod(frustrated-26, really-25)
dep(again-20, frustrated-26)
dobj(frustrated-26, him-27)

(ROOT
  (S
    (NP (CD One) (NN day))
    (, ,)
    (NP (PRP it))
    (VP (VBD occurred)
      (PP (TO to)
        (NP (PRP him)))
      (SBAR (IN that)
        (S
          (S
            (VP (VBG using)
              (NP (NNP Silvers) (JJ weak) (NN glue))
              (PP (IN on)
                (NP
                  (NP (DT a) (NN piece))
                  (PP (IN of)
                    (NP (NN paper)))))))
          (VP (MD might)
            (VP (VB be)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB help)
                      (S
                        (NP (PRP him))
                        (VP (VB mark)
                          (NP (DT the) (JJ right) (NN page))
                          (PP (IN without)
                            (S
                              (VP (VBG damaging)
                                (NP (DT the) (NN book))))))))))))))))
    (. .)))

nummod(day-2, One-1)
nmod:tmod(occurred-5, day-2)
nsubj(occurred-5, it-4)
root(ROOT-0, occurred-5)
case(him-7, to-6)
nmod:to(occurred-5, him-7)
mark(able-20, that-8)
csubj(able-20, using-9)
compound(glue-12, Silvers-10)
amod(glue-12, weak-11)
dobj(using-9, glue-12)
case(piece-15, on-13)
det(piece-15, a-14)
nmod:on(using-9, piece-15)
case(paper-17, of-16)
nmod:of(piece-15, paper-17)
aux(able-20, might-18)
cop(able-20, be-19)
ccomp(occurred-5, able-20)
mark(help-22, to-21)
xcomp(able-20, help-22)
nsubj(mark-24, him-23)
ccomp(help-22, mark-24)
det(page-27, the-25)
amod(page-27, right-26)
dobj(mark-24, page-27)
mark(damaging-29, without-28)
advcl(mark-24, damaging-29)
det(book-31, the-30)
dobj(damaging-29, book-31)

(ROOT
  (S
    (ADVP (RB Then))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD returned)
        (PP (TO to)
          (NP (DT the) (NN office))))
      (CC and)
      (VP (VBD shared)
        (NP (PRP$ his) (NN thought))
        (PP (IN with)
          (NP
            (NP (NNS others))
            (PP (IN in)
              (NP (DT the) (NN company)))))))
    (. .)))

advmod(returned-4, Then-1)
nsubj(returned-4, he-3)
nsubj(shared-9, he-3)
root(ROOT-0, returned-4)
case(office-7, to-5)
det(office-7, the-6)
nmod:to(returned-4, office-7)
cc(returned-4, and-8)
conj:and(returned-4, shared-9)
nmod:poss(thought-11, his-10)
dobj(shared-9, thought-11)
case(others-13, with-12)
nmod:with(shared-9, others-13)
case(company-16, in-14)
det(company-16, the-15)
nmod:in(others-13, company-16)

(ROOT
  (S
    (S
      (NP (DT The) (JJ Post-it) (NN note))
      (VP (VBD was)
        (VP (VBN born)
          (PP (IN in)
            (NP (CD 1980))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ has)
        (ADVP (IN since) (RB successfully))
        (VP (VBN spread)
          (PP (IN around)
            (NP (DT the) (NN world))))))
    (. .)))

det(note-3, The-1)
amod(note-3, Post-it-2)
nsubjpass(born-5, note-3)
auxpass(born-5, was-4)
root(ROOT-0, born-5)
case(1980-7, in-6)
nmod:in(born-5, 1980-7)
cc(born-5, and-9)
nsubj(spread-14, it-10)
aux(spread-14, has-11)
case(successfully-13, since-12)
advmod(spread-14, successfully-13)
conj:and(born-5, spread-14)
case(world-17, around-15)
det(world-17, the-16)
nmod:around(spread-14, world-17)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP you))
        (VP (MD can)
          (VP (VB see)))))
    (, ,)
    (NP (JJ excellent) (NNS inventors))
    (VP (VBP get)
      (NP (NNS ideas))
      (PP (IN from)
        (NP (PRP$ their) (JJ own) (NNS experiences))))
    (. .)))

mark(see-4, As-1)
nsubj(see-4, you-2)
aux(see-4, can-3)
advcl(get-8, see-4)
amod(inventors-7, excellent-6)
nsubj(get-8, inventors-7)
root(ROOT-0, get-8)
dobj(get-8, ideas-9)
case(experiences-13, from-10)
nmod:poss(experiences-13, their-11)
amod(experiences-13, own-12)
nmod:from(get-8, experiences-13)

(ROOT
  (S
    (NP (JJ Next) (NN time))
    (NP (PRP you))
    (VP (VBP have)
      (NP (DT a) (NN problem))
      (, ,)
      (S
        (VP (VB try)
          (S
            (VP (TO to)
              (VP (VB think)
                (PP (IN of)
                  (NP (DT a) (NN way)
                    (S
                      (VP (TO to)
                        (VP (VB deal)
                          (PP (IN with)
                            (NP (PRP it))))))))))))))
    (. .)))

amod(time-2, Next-1)
nsubj(have-4, time-2)
nsubj(have-4, you-3)
root(ROOT-0, have-4)
det(problem-6, a-5)
dobj(have-4, problem-6)
dep(have-4, try-8)
mark(think-10, to-9)
xcomp(try-8, think-10)
case(way-13, of-11)
det(way-13, a-12)
nmod:of(think-10, way-13)
mark(deal-15, to-14)
acl(way-13, deal-15)
case(it-17, with-16)
nmod:with(deal-15, it-17)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP you))
    (VP (MD will)
      (ADVP (RB also))
      (VP (VB become)
        (NP (DT a) (JJ great) (NN inventor))
        (ADVP (RB someday))))
    (. .)))

advmod(become-5, Perhaps-1)
nsubj(become-5, you-2)
aux(become-5, will-3)
advmod(become-5, also-4)
root(ROOT-0, become-5)
det(inventor-8, a-6)
amod(inventor-8, great-7)
xcomp(become-5, inventor-8)
advmod(become-5, someday-9)

(ROOT
  (NP (NNP XPaul) (NNP Geraghty)))

compound(Geraghty-2, XPaul-1)
root(ROOT-0, Geraghty-2)

