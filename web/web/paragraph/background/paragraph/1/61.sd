(ROOT
  (SQ (VBP Have)
    (NP (PRP you))
    (VP
      (ADVP (RB ever))
      (VBN thought)
      (PP (IN about)
        (SBAR
          (WHNP (WP what))
          (S
            (NP
              (NP (JJ famous) (NNS people))
              (PP (IN from)
                (NP (DT the) (NN past))))
            (VP (VBD were)
              (PP (IN like)
                (PP (IN in)
                  (NP (JJ real) (NN life)))))))))
    (. ?)))

aux(thought-4, Have-1)
nsubj(thought-4, you-2)
advmod(thought-4, ever-3)
root(ROOT-0, thought-4)
mark(life-16, about-5)
dobj(life-16, what-6)
amod(people-8, famous-7)
nsubj(life-16, people-8)
case(past-11, from-9)
det(past-11, the-10)
nmod:from(people-8, past-11)
cop(life-16, were-12)
case(life-16, like-13)
case(life-16, in-14)
amod(life-16, real-15)
advcl:in(thought-4, life-16)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBD did)
      (NP
        (NP (NNS people))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD met)
              (NP (PRP them))))))
      (VP (VB think)
        (PP (IN about)
          (NP (PRP them)))))
    (. ?)))

dobj(think-7, What-1)
aux(think-7, did-2)
nsubj(met-5, people-3)
nsubj(think-7, people-3)
ref(people-3, who-4)
acl:relcl(people-3, met-5)
dobj(met-5, them-6)
root(ROOT-0, think-7)
case(them-9, about-8)
nmod:about(think-7, them-9)

(ROOT
  (S
    (NP (DT The) (NN following))
    (VP (VBP are)
      (NP
        (NP (DT the) (NNS stories))
        (PP (IN about)
          (NP (CD three) (JJ famous) (NNS people)))))
    (. .)))

det(following-2, The-1)
nsubj(stories-5, following-2)
cop(stories-5, are-3)
det(stories-5, the-4)
root(ROOT-0, stories-5)
case(people-9, about-6)
nummod(people-9, three-7)
amod(people-9, famous-8)
nmod:about(stories-5, people-9)

(ROOT
  (S
    (NP (PRP$ My) (NN Father))
    (VP (VBZ Is) (RB n't)
      (NP (DT That) (NNP Rich)))
    (. .)))

nmod:poss(Father-2, My-1)
nsubj(Rich-6, Father-2)
cop(Rich-6, Is-3)
neg(Rich-6, n't-4)
det(Rich-6, That-5)
root(ROOT-0, Rich-6)

(ROOT
  (S
    (NP (DT This))
    (VP
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN story))
          (PP (IN about)
            (NP
              (NP (DT the) (NN millionaire))
              (, ,)
              (NP (NNP John) (NNP D.) (NNP Rockefeller))
              (, ,)))))
      (CC and)
      (VP (VBD was)
        (VP (VBN told)
          (PP (IN by)
            (NP
              (NP (DT a) (NN friend))
              (PP (IN of)
                (NP (PRP$ his))))))))
    (. .)))

nsubj(story-4, This-1)
nsubjpass(told-15, This-1)
cop(story-4, is-2)
det(story-4, a-3)
root(ROOT-0, story-4)
case(millionaire-7, about-5)
det(millionaire-7, the-6)
nmod:about(story-4, millionaire-7)
compound(Rockefeller-11, John-9)
compound(Rockefeller-11, D.-10)
appos(millionaire-7, Rockefeller-11)
cc(story-4, and-13)
auxpass(told-15, was-14)
conj:and(story-4, told-15)
case(friend-18, by-16)
det(friend-18, a-17)
nmod:by(told-15, friend-18)
case(his-20, of-19)
nmod:of(friend-18, his-20)

(ROOT
  (S
    (NP (DT This) (NN friend))
    (VP (VBD said)
      (SBAR (IN that)
        (S
          (SBAR (IN though)
            (S
              (NP (NNP Rockefeller))
              (VP (VBD gave)
                (PRT (RP away))
                (NP (NNS millions)))))
          (, ,)
          (NP (PRP he))
          (VP (VBD was)
            (VP (VBN known)
              (PP (IN for)
                (S
                  (VP (VBG being)
                    (ADJP (RB very) (JJ stingy))
                    (PP (IN about)
                      (NP
                        (NP (JJ small) (NNS sums))
                        (PP (IN of)
                          (NP (NN money)))))))))))))
    (. .)))

det(friend-2, This-1)
nsubj(said-3, friend-2)
root(ROOT-0, said-3)
mark(known-13, that-4)
mark(gave-7, though-5)
nsubj(gave-7, Rockefeller-6)
advcl(known-13, gave-7)
compound:prt(gave-7, away-8)
dobj(gave-7, millions-9)
nsubjpass(known-13, he-11)
auxpass(known-13, was-12)
ccomp(said-3, known-13)
mark(stingy-17, for-14)
cop(stingy-17, being-15)
advmod(stingy-17, very-16)
advcl(known-13, stingy-17)
case(sums-20, about-18)
amod(sums-20, small-19)
nmod:about(stingy-17, sums-20)
case(money-22, of-21)
nmod:of(sums-20, money-22)

(ROOT
  (S
    (NP (CD One) (NN day))
    (NP (PRP he))
    (VP (VBD went)
      (PP (TO to)
        (NP (DT a) (NN hotel)))
      (PP (IN in)
        (NP (NNP New) (NNP York) (NNP City))))
    (. .)))

nummod(day-2, One-1)
nmod:tmod(went-4, day-2)
nsubj(went-4, he-3)
root(ROOT-0, went-4)
case(hotel-7, to-5)
det(hotel-7, a-6)
nmod:to(went-4, hotel-7)
case(City-11, in-8)
compound(City-11, New-9)
compound(City-11, York-10)
nmod:in(went-4, City-11)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD arrived))))
    (, ,)
    (NP (PRP he))
    (VP (VBD asked)
      (SBAR
        (S
          (PP (IN for)
            (NP (DT the) (JJS cheapest) (NN room)))
          (NP (PRP they))
          (VP (VBD had)))))
    (. .)))

advmod(arrived-3, When-1)
nsubj(arrived-3, he-2)
advcl(asked-6, arrived-3)
nsubj(asked-6, he-5)
root(ROOT-0, asked-6)
case(room-10, for-7)
det(room-10, the-8)
amod(room-10, cheapest-9)
nmod:for(had-12, room-10)
nsubj(had-12, they-11)
ccomp(asked-6, had-12)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NN manager))
        (VP (VBD gave)
          (NP (PRP him))
          (NP (DT a) (NN room)))))
    (, ,)
    (NP (NNP Rockefeller))
    (VP (VBD said) (, ,) (`` ``)
      (SQ (VBZ Is)
        (NP
          (NP (RB that) (DT the) (JJS cheapest) (NN room))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP have)))))))
    (. ?)))

advmod(gave-4, When-1)
det(manager-3, the-2)
nsubj(gave-4, manager-3)
advcl(said-10, gave-4)
iobj(gave-4, him-5)
det(room-7, a-6)
dobj(gave-4, room-7)
nsubj(said-10, Rockefeller-9)
root(ROOT-0, said-10)
dep(said-10, Is-13)
advmod(room-17, that-14)
det(room-17, the-15)
amod(room-17, cheapest-16)
nsubj(Is-13, room-17)
nsubj(have-19, you-18)
acl:relcl(room-17, have-19)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP 'm)
        (VP (VBG staying)
          (ADVP (RB here))
          (PP (IN by)
            (NP (PRP myself)))))
      (CC and)
      (VP
        (ADVP (RB only))
        (VBP need)
        (NP (DT a) (JJ small) (NN room))))
    (. .) ('' '')))

nsubj(staying-3, I-1)
nsubj(need-9, I-1)
aux(staying-3, 'm-2)
root(ROOT-0, staying-3)
advmod(staying-3, here-4)
case(myself-6, by-5)
nmod:by(staying-3, myself-6)
cc(staying-3, and-7)
advmod(need-9, only-8)
conj:and(staying-3, need-9)
det(room-12, a-10)
amod(room-12, small-11)
dobj(need-9, room-12)

(ROOT
  (S
    (NP (DT The) (NN manager))
    (VP (VBD said) (, ,) (`` ``)
      (S
        (S
          (NP (DT That) (NN room))
          (VP (VBZ is)
            (NP
              (NP (DT the) (JJS smallest))
              (CC and)
              (NP
                (NP
                  (NP (DT the) (JJS cheapest) (NN one))
                  (SBAR
                    (S
                      (NP (PRP we))
                      (VP (VBP have)))))
                (PRN (, ,) ('' '')
                  (S
                    (NP (NNP and))
                    (VP (VBD added)))
                  (, ,) (`` ``))))))
        (CC but)
        (SBARQ
          (WHADVP (WRB why))
          (SQ (VBP are)
            (NP (PRP you))
            (VP (VBG taking)
              (NP (PDT such) (DT a) (JJ cheap) (NN room))))
          (. ?))))))

det(manager-2, The-1)
nsubj(said-3, manager-2)
root(ROOT-0, said-3)
det(room-7, That-6)
nsubj(smallest-10, room-7)
cop(smallest-10, is-8)
det(smallest-10, the-9)
xcomp(said-3, smallest-10)
cc(smallest-10, and-11)
det(one-14, the-12)
amod(one-14, cheapest-13)
xcomp(said-3, one-14)
conj:and(smallest-10, one-14)
nsubj(have-16, we-15)
acl:relcl(one-14, have-16)
nsubj(added-20, and-19)
dep(one-14, added-20)
cc(smallest-10, but-23)
advmod(taking-27, why-24)
aux(taking-27, are-25)
nsubj(taking-27, you-26)
xcomp(said-3, taking-27)
conj:and(smallest-10, taking-27)
det:predet(room-31, such-28)
det(room-31, a-29)
amod(room-31, cheap-30)
dobj(taking-27, room-31)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP$ your) (NN son))
          (VP (VBZ stays)
            (ADVP (RB here)))))
      (, ,)
      (NP (PRP he))
      (ADVP (RB always))
      (VP (VBZ takes)
        (NP (PRP$ our)
          (ADJP (RBS most) (JJ expensive))
          (NN room))))
    (: ;)
    (S
      (NP (NNP yours))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJS cheapest) (NN one))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP 've)
                (VP (VBN got))))))))
    (. .) ('' '')))

advmod(stays-4, When-1)
nmod:poss(son-3, your-2)
nsubj(stays-4, son-3)
advcl(takes-9, stays-4)
advmod(stays-4, here-5)
nsubj(takes-9, he-7)
advmod(takes-9, always-8)
root(ROOT-0, takes-9)
nmod:poss(room-13, our-10)
advmod(expensive-12, most-11)
amod(room-13, expensive-12)
dobj(takes-9, room-13)
nsubj(one-19, yours-15)
cop(one-19, is-16)
det(one-19, the-17)
amod(one-19, cheapest-18)
parataxis(takes-9, one-19)
nsubj(got-22, we-20)
aux(got-22, 've-21)
acl:relcl(one-19, got-22)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Yes)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Rockefeller))
    (, ,) (`` ``)
    (S
      (S (CC but)
        (NP (PRP$ his) (NN father))
        (VP (VBZ is)
          (NP (DT a) (JJ wealthy) (NN man))))
      (: ;)
      (S
        (NP (PRP mine))
        (VP (VBZ is) (RB n't))))
    (. .) ('' '')))

dep(said-5, Yes-2)
root(ROOT-0, said-5)
nsubj(said-5, Rockefeller-6)
cc(man-15, but-9)
nmod:poss(father-11, his-10)
nsubj(man-15, father-11)
cop(man-15, is-12)
det(man-15, a-13)
amod(man-15, wealthy-14)
ccomp(said-5, man-15)
nsubj(is-18, mine-17)
parataxis(man-15, is-18)
neg(is-18, n't-19)

(ROOT
  (NP
    (NP (NN Something))
    (PP (IN for)
      (NP (NN Everybody)))
    (. .)))

root(ROOT-0, Something-1)
case(Everybody-3, for-2)
nmod:for(Something-1, Everybody-3)

(ROOT
  (S
    (NP (CD One) (NN day))
    (NP (NNP Abraham) (NNP Lincoln))
    (VP
      (VP (VBD was)
        (ADJP (JJ ill)))
      (CC and)
      (VP (VBD did) (RB not)
        (VP (VB want)
          (S
            (VP (TO to)
              (VP (VB listen)
                (PP (TO to)
                  (NP
                    (NP (NNS people))
                    (VP (VBG asking)
                      (NP (PRP him))
                      (PP (IN for)
                        (NP (NNS jobs))))))))))))
    (. .)))

nummod(day-2, One-1)
nmod:tmod(ill-6, day-2)
compound(Lincoln-4, Abraham-3)
nsubj(ill-6, Lincoln-4)
nsubj(want-10, Lincoln-4)
nsubj(listen-12, Lincoln-4)
cop(ill-6, was-5)
root(ROOT-0, ill-6)
cc(ill-6, and-7)
aux(want-10, did-8)
neg(want-10, not-9)
conj:and(ill-6, want-10)
mark(listen-12, to-11)
xcomp(want-10, listen-12)
case(people-14, to-13)
nmod:to(listen-12, people-14)
acl(people-14, asking-15)
dobj(asking-15, him-16)
case(jobs-18, for-17)
nmod:for(asking-15, jobs-18)

(ROOT
  (S
    (SBAR (RB Just) (IN as)
      (S
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT these) (NNS men))))
        (VP (VBD came)
          (PP (IN for)
            (NP (DT a) (JJ long) (NN interview))))))
    (, ,)
    (NP
      (NP (DT the) (NNP President) (POS 's))
      (NN doctor))
    (VP (VBD happened)
      (S
        (VP (TO to)
          (VP (VB enter)
            (NP (DT the) (NN room))))))
    (. .)))

advmod(came-7, Just-1)
mark(came-7, as-2)
nsubj(came-7, one-3)
case(men-6, of-4)
det(men-6, these-5)
nmod:of(one-3, men-6)
advcl(happened-17, came-7)
case(interview-11, for-8)
det(interview-11, a-9)
amod(interview-11, long-10)
nmod:for(came-7, interview-11)
det(President-14, the-13)
nmod:poss(doctor-16, President-14)
case(President-14, 's-15)
nsubj(happened-17, doctor-16)
nsubj(enter-19, doctor-16)
root(ROOT-0, happened-17)
mark(enter-19, to-18)
xcomp(happened-17, enter-19)
det(room-21, the-20)
dobj(enter-19, room-21)

(ROOT
  (S
    (NP (NNP Lincoln))
    (VP (VBD asked)
      (NP
        (NP (PRP him))
        (, ,) (`` ``)
        (SBARQ
          (NP (NNP Doctor))
          (, ,)
          (WHNP (WP what))
          (SQ (VBP are)
            (NP
              (NP (DT these) (JJ red) (NNS spots))
              (PP (IN on)
                (NP (PRP$ my) (NNS hands)))))
          (. ?))
        ('' '')))))

nsubj(asked-2, Lincoln-1)
root(ROOT-0, asked-2)
dobj(asked-2, him-3)
nsubj(what-8, Doctor-6)
dep(him-3, what-8)
cop(what-8, are-9)
det(spots-12, these-10)
amod(spots-12, red-11)
nsubj(what-8, spots-12)
case(hands-15, on-13)
nmod:poss(hands-15, my-14)
nmod:on(spots-12, hands-15)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's)
      (NP (JJ mild) (NN smallpox)))
    (. .)))

nsubj(smallpox-5, That-2)
cop(smallpox-5, 's-3)
amod(smallpox-5, mild-4)
root(ROOT-0, smallpox-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (RB very) (JJ contagious)))
    (. .) ('' '')))

nsubj(contagious-4, It-1)
cop(contagious-4, is-2)
advmod(contagious-4, very-3)
root(ROOT-0, contagious-4)

(ROOT
  (S
    (NP
      (NP (NNP Lincoln) (POS 's))
      (NN visitor))
    (VP
      (VP (VBD got)
        (PRT (RP up))
        (PP (IN at)
          (NP (DT this) (NN point))))
      (CC and)
      (VP (VBD said) (, ,) (`` ``)
        (S
          (INTJ (UH Well))
          (, ,)
          (NP (PRP I))
          (VP (VBP need)
            (S
              (VP (TO to)
                (VP (VB leave)
                  (ADVP (RB now)))))))))
    (. .)))

nmod:poss(visitor-3, Lincoln-1)
case(Lincoln-1, 's-2)
nsubj(got-4, visitor-3)
nsubj(said-10, visitor-3)
root(ROOT-0, got-4)
compound:prt(got-4, up-5)
case(point-8, at-6)
det(point-8, this-7)
nmod:at(got-4, point-8)
cc(got-4, and-9)
conj:and(got-4, said-10)
discourse(need-16, Well-13)
nsubj(need-16, I-15)
nsubj(leave-18, I-15)
ccomp(said-10, need-16)
mark(leave-18, to-17)
xcomp(need-16, leave-18)
advmod(leave-18, now-19)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (VBD came)
      (S
        (VP (TO to)
          (VP (VB see)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP you))
                (VP (VBD were))))))))
    (. .)))

nsubj(came-3, I-1)
nsubj(see-5, I-1)
advmod(came-3, just-2)
root(ROOT-0, came-3)
mark(see-5, to-4)
xcomp(came-3, see-5)
advmod(were-8, how-6)
nsubj(were-8, you-7)
ccomp(see-5, were-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB come)
        (ADVP (RB again))))
    (. .) ('' '')))

nsubj(come-3, I-1)
aux(come-3, 'll-2)
root(ROOT-0, come-3)
advmod(come-3, again-4)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD headed)
      (PP (IN for)
        (NP (DT the) (NN door)))
      (PP (IN in)
        (NP (DT a) (NN hurry))))
    (. .)))

advmod(headed-3, Then-1)
nsubj(headed-3, he-2)
root(ROOT-0, headed-3)
case(door-6, for-4)
det(door-6, the-5)
nmod:for(headed-3, door-6)
case(hurry-9, in-7)
det(hurry-9, a-8)
nmod:in(headed-3, hurry-9)

(ROOT
  (SINV (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (CD one) (JJ good) (NN thing))
          (PP (IN about)
            (NP (DT this))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Lincoln))
      (PP (IN as)
        (NP
          (NP (DT the) (NN man))
          (VP (VBN left)))))
    (, ,) (`` ``)
    (S
      (NP (PRP I))
      (ADVP (RB now))
      (VP (VBP have)
        (NP (NN something)
          (S
            (VP (TO to)
              (VP (VB give)
                (NP (NN everybody))))))))
    (. .) ('' '')))

expl('s-3, There-2)
ccomp(said-11, 's-3)
nummod(thing-6, one-4)
amod(thing-6, good-5)
nsubj('s-3, thing-6)
case(this-8, about-7)
nmod:about(thing-6, this-8)
root(ROOT-0, said-11)
nsubj(said-11, Lincoln-12)
case(man-15, as-13)
det(man-15, the-14)
nmod:as(Lincoln-12, man-15)
acl(man-15, left-16)
nsubj(have-21, I-19)
advmod(have-21, now-20)
dep(said-11, have-21)
dobj(have-21, something-22)
mark(give-24, to-23)
acl(something-22, give-24)
dobj(give-24, everybody-25)

(ROOT
  (S
    (NP (NNP Mark) (NNP Twain))
    (VP (VBZ 's)
      (ADJP (JJ Absent-mindedness)))
    (. .)))

compound(Twain-2, Mark-1)
nsubj(Absent-mindedness-4, Twain-2)
cop(Absent-mindedness-4, 's-3)
root(ROOT-0, Absent-mindedness-4)

(ROOT
  (S
    (NP (DT The) (JJ famous) (JJ American) (NN writer) (NNP Mark) (NNP Twain))
    (VP (VBD was)
      (ADJP (JJ well-known)
        (PP (IN for)
          (NP (PRP$ his) (NNS absent-mindedness)))))
    (. .)))

det(Twain-6, The-1)
amod(Twain-6, famous-2)
amod(Twain-6, American-3)
compound(Twain-6, writer-4)
compound(Twain-6, Mark-5)
nsubj(well-known-8, Twain-6)
cop(well-known-8, was-7)
root(ROOT-0, well-known-8)
case(absent-mindedness-11, for-9)
nmod:poss(absent-mindedness-11, his-10)
nmod:for(well-known-8, absent-mindedness-11)

(ROOT
  (S
    (NP (CD One) (NN day))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP he))
        (VP (VBD was)
          (VP (VBG riding)
            (PP (IN on)
              (NP (DT a) (NN train)))))))
    (, ,)
    (NP (DT the) (NN conductor))
    (VP (VBD asked)
      (NP (PRP him))
      (PP (IN for)
        (NP (PRP$ his) (NN ticket))))
    (. .)))

nummod(day-2, One-1)
nmod:tmod(asked-14, day-2)
advmod(riding-7, when-4)
nsubj(riding-7, he-5)
aux(riding-7, was-6)
advcl(asked-14, riding-7)
case(train-10, on-8)
det(train-10, a-9)
nmod:on(riding-7, train-10)
det(conductor-13, the-12)
nsubj(asked-14, conductor-13)
root(ROOT-0, asked-14)
dobj(asked-14, him-15)
case(ticket-18, for-16)
nmod:poss(ticket-18, his-17)
nmod:for(asked-14, ticket-18)

(ROOT
  (S
    (NP (NNP Mark) (NNP Twain))
    (VP (VBD looked)
      (PP (IN for)
        (NP (DT the) (NN ticket)))
      (PP
        (PP (IN in)
          (NP (PDT all) (PRP$ his) (NNS pockets)))
        (CC but)
        (PP (IN without)
          (NP (NN success)))))
    (. .)))

compound(Twain-2, Mark-1)
nsubj(looked-3, Twain-2)
nsubj(looked-3', Twain-2)
root(ROOT-0, looked-3)
conj:but(looked-3, looked-3')
case(ticket-6, for-4)
det(ticket-6, the-5)
nmod:for(looked-3, ticket-6)
case(pockets-10, in-7)
det:predet(pockets-10, all-8)
nmod:poss(pockets-10, his-9)
nmod:in(looked-3, pockets-10)
cc(looked-3, but-11)
case(success-13, without-12)
nmod:without(looked-3', success-13)

(ROOT
  (S
    (ADVP (RB However))
    (PRN (, ,)
      (S
        (NP (DT the) (NN conductor))
        (VP
          (VP (VBD knew)
            (NP (DT the) (NN writer))
            (PP (IN by)
              (NP (NN sight))))
          (, ,)
          (CC and)
          (VP (VBD said))))
      (, ,))
    (`` ``)
    (NP (PRP It))
    (VP (VBZ does) (RB n't)
      (ADVP (RB really))
      (VP (VB matter)))
    (. .)))

advmod(matter-19, However-1)
det(conductor-4, the-3)
nsubj(knew-5, conductor-4)
nsubj(said-12, conductor-4)
parataxis(matter-19, knew-5)
det(writer-7, the-6)
dobj(knew-5, writer-7)
case(sight-9, by-8)
nmod:by(knew-5, sight-9)
cc(knew-5, and-11)
conj:and(knew-5, said-12)
parataxis(matter-19, said-12)
nsubj(matter-19, It-15)
aux(matter-19, does-16)
neg(matter-19, n't-17)
advmod(matter-19, really-18)
root(ROOT-0, matter-19)

(ROOT
  (S
    (VP (VB Show)
      (S
        (NP (PRP me))
        (NP
          (NP (PRP$ your) (NN ticket))
          (PP (IN on)
            (NP (PRP$ your) (NN way) (NN back))))))
    (. .)))

root(ROOT-0, Show-1)
nsubj(ticket-4, me-2)
nmod:poss(ticket-4, your-3)
xcomp(Show-1, ticket-4)
case(back-8, on-5)
nmod:poss(back-8, your-6)
compound(back-8, way-7)
nmod:on(ticket-4, back-8)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB find)
            (NP (PRP it))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (DT no) (NN harm))
        (VP (VBN done))))
    (. .) ('' '')))

cc('s-10, And-1)
mark(find-6, if-2)
nsubj(find-6, you-3)
aux(find-6, do-4)
neg(find-6, n't-5)
advcl('s-10, find-6)
dobj(find-6, it-7)
expl('s-10, there-9)
root(ROOT-0, 's-10)
neg(harm-12, no-11)
nsubj('s-10, harm-12)
acl(harm-12, done-13)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Oh))
      (, ,)
      (CC but)
      (NP (PRP I))
      (VP (MD must)
        (VP (VB find)
          (NP (DT the) (JJ darned) (NN thing)))))
    (: ;)
    (S
      (ADVP (RB otherwise))
      (, ,)
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (MD will))))
      (NP (PRP I))
      (VP (VBP know)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (VP (VBG going)))))))
    (. ?) ('' '')))

discourse(find-7, Oh-2)
cc(find-7, but-4)
conj:but(find-7, I-5)
aux(find-7, must-6)
root(ROOT-0, find-7)
det(thing-10, the-8)
amod(thing-10, darned-9)
dobj(find-7, thing-10)
advmod(know-17, otherwise-12)
advmod(will-15, how-14)
advcl(know-17, will-15)
nsubj(know-17, I-16)
parataxis(find-7, know-17)
advmod(going-21, where-18)
nsubj(going-21, I-19)
aux(going-21, 'm-20)
ccomp(know-17, going-21)

(ROOT
  (S
    (PP (IN From)
      (NP
        (NP (DT the) (NNS stories))
        (ADVP (IN above))))
    (, ,)
    (NP (PRP you))
    (VP (MD can)
      (VP (VB see)
        (SBAR (IN that) (, ,)
          (S
            (PP (IN despite)
              (NP (PRP$ their) (JJ different) (NNS professions)))
            (, ,)
            (NP (DT the) (CD three) (JJ famous) (NNS people))
            (ADVP (DT all))
            (VP (VBD had)
              (NP
                (NP
                  (NP (CD one) (NN thing))
                  (PP (IN in)
                    (NP (JJ common))))
                (: :)
                (NP
                  (NP (DT a) (JJ great) (NN sense))
                  (PP (IN of)
                    (NP (NN humor))))))))))
    (. .)))

case(stories-3, From-1)
det(stories-3, the-2)
nmod:from(see-8, stories-3)
advmod(stories-3, above-4)
nsubj(see-8, you-6)
aux(see-8, can-7)
root(ROOT-0, see-8)
mark(had-21, that-9)
case(professions-14, despite-11)
nmod:poss(professions-14, their-12)
amod(professions-14, different-13)
nmod:despite(had-21, professions-14)
det(people-19, the-16)
nummod(people-19, three-17)
amod(people-19, famous-18)
nsubj(had-21, people-19)
advmod(had-21, all-20)
ccomp(see-8, had-21)
nummod(thing-23, one-22)
dobj(had-21, thing-23)
case(common-25, in-24)
nmod:in(thing-23, common-25)
det(sense-29, a-27)
amod(sense-29, great-28)
dep(thing-23, sense-29)
case(humor-31, of-30)
nmod:of(sense-29, humor-31)

(ROOT
  (S
    (ADVP (RB Obviously))
    (NP (PRP they))
    (VP (VBD were)
      (ADJP (JJ able)
        (S
          (VP
            (VP (TO to)
              (VP
                (VP (VB amuse)
                  (NP (NNS others)))
                (CC and)
                (VP (VB be)
                  (ADJP (VBN amused)))))
            (, ,)
            (CC and)
            (VP (TO to)
              (VP (VB bring)
                (NP (NN joy))
                (PP (TO to)
                  (NP (DT all)))))))))
    (. .)))

advmod(able-4, Obviously-1)
nsubj(able-4, they-2)
cop(able-4, were-3)
root(ROOT-0, able-4)
mark(amuse-6, to-5)
dep(able-4, amuse-6)
dobj(amuse-6, others-7)
cc(amuse-6, and-8)
auxpass(amused-10, be-9)
dep(able-4, amused-10)
conj:and(amuse-6, amused-10)
cc(amuse-6, and-12)
mark(bring-14, to-13)
dep(able-4, bring-14)
conj:and(amuse-6, bring-14)
dobj(bring-14, joy-15)
case(all-17, to-16)
nmod:to(bring-14, all-17)

