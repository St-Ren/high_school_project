(ROOT
  (S
    (PP (IN Like)
      (NP (JJ many) (JJ other) (NNS universities)))
    (, ,)
    (NP (NNP Monsters) (NNP University))
    (VP (VBZ has)
      (NP
        (NP (NN everything))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP need)
              (PP (IN in)
                (NP (DT an) (JJ American) (NN university))))))))
    (. .)))

case(universities-4, Like-1)
amod(universities-4, many-2)
amod(universities-4, other-3)
nmod:like(has-8, universities-4)
compound(University-7, Monsters-6)
nsubj(has-8, University-7)
root(ROOT-0, has-8)
dobj(has-8, everything-9)
nsubj(need-11, you-10)
acl:relcl(everything-9, need-11)
case(university-15, in-12)
det(university-15, an-13)
amod(university-15, American-14)
nmod:in(need-11, university-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ holds)
      (NP (PRP$ its) (NNS teachers)
        (CC and)
        (NNS students))
      (PP (TO to)
        (NP
          (NP (JJ high) (NNS standards))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP require)
                (S
                  (NP
                    (NP (DT all))
                    (PP (IN of)
                      (NP (PRP them))))
                  (VP (TO to)
                    (VP (VB work)
                      (ADJP (JJ hard)))))))))))
    (. .)))

nsubj(holds-2, It-1)
root(ROOT-0, holds-2)
nmod:poss(teachers-4, its-3)
dobj(holds-2, teachers-4)
cc(teachers-4, and-5)
dobj(holds-2, students-6)
conj:and(teachers-4, students-6)
case(standards-9, to-7)
amod(standards-9, high-8)
nmod:to(holds-2, standards-9)
nsubj(require-11, standards-9)
ref(standards-9, that-10)
acl:relcl(standards-9, require-11)
dobj(require-11, all-12)
nsubj(work-16, all-12)
case(them-14, of-13)
nmod:of(all-12, them-14)
mark(work-16, to-15)
xcomp(require-11, work-16)
xcomp(work-16, hard-17)

(ROOT
  (S (CC But)
    (NP (DT this))
    (VP (VBZ is) (RB not)
      (NP (DT an) (JJ ordinary) (NN university)))
    (. .)))

cc(university-7, But-1)
nsubj(university-7, this-2)
cop(university-7, is-3)
neg(university-7, not-4)
det(university-7, an-5)
amod(university-7, ordinary-6)
root(ROOT-0, university-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN university))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ trains)
              (NP (PRP$ its) (NNS students))
              (S
                (VP (TO to)
                  (VP (VB become)
                    (NP
                      (NP (JJ professional) (`` ``) (NNS scarers))
                      (, ,) ('' '')
                      (SBAR (WP$ whose)
                        (S
                          (NP (NNS goals))
                          (VP (VBP are)
                            (VP (VBN set)
                              (PP (IN upon)
                                (S
                                  (VP (VBG getting)
                                    (NP (NN energy))
                                    (PP (IN from)
                                      (NP (JJ human) (NNS screams)))))))))))))))))))
    (. .)))

nsubj(university-4, It-1)
cop(university-4, is-2)
det(university-4, a-3)
root(ROOT-0, university-4)
nsubj(trains-6, university-4)
ref(university-4, that-5)
acl:relcl(university-4, trains-6)
nmod:poss(students-8, its-7)
dobj(trains-6, students-8)
mark(become-10, to-9)
advcl(trains-6, become-10)
amod(scarers-13, professional-11)
xcomp(become-10, scarers-13)
dep(set-19, whose-16)
nsubjpass(set-19, goals-17)
auxpass(set-19, are-18)
dep(scarers-13, set-19)
mark(getting-21, upon-20)
advcl(set-19, getting-21)
dobj(getting-21, energy-22)
case(screams-25, from-23)
amod(screams-25, human-24)
nmod:from(getting-21, screams-25)

(ROOT
  (S
    (NP (NNP Monsters) (NNP University))
    (VP (VBZ is)
      (NP
        (NP (DT a) (CD 2013) (JJ 3-D) (JJ animated) (NN comedy))
        (VP (VBN produced)
          (PP (IN by)
            (NP
              (NP (NNP Pixar) (NNP Animation) (NNP Studios))
              (, ,)
              (NP
                (NP (DT an) (JJ American) (NN computer) (NN animation) (NN film) (NN studio))
                (VP (VBN based)
                  (PP (IN in)
                    (NP (NNP Emeryville) (, ,) (NNP California))))))))))
    (. .)))

compound(University-2, Monsters-1)
nsubj(comedy-8, University-2)
cop(comedy-8, is-3)
det(comedy-8, a-4)
nummod(comedy-8, 2013-5)
amod(comedy-8, 3-D-6)
amod(comedy-8, animated-7)
root(ROOT-0, comedy-8)
acl(comedy-8, produced-9)
case(Studios-13, by-10)
compound(Studios-13, Pixar-11)
compound(Studios-13, Animation-12)
nmod:by(produced-9, Studios-13)
det(studio-20, an-15)
amod(studio-20, American-16)
compound(studio-20, computer-17)
compound(studio-20, animation-18)
compound(studio-20, film-19)
appos(Studios-13, studio-20)
acl(studio-20, based-21)
case(California-25, in-22)
compound(California-25, Emeryville-23)
nmod:in(based-21, California-25)

(ROOT
  (S
    (NP
      (NP (DT The) (NN success))
      (PP (IN of)
        (NP (DT the) (CD 2001) (NN hit))))
    (, ,)
    (NP
      (NP (NNP Monsters))
      (, ,)
      (NP (NNP Inc.) (CD 6))
      (, ,))
    (VP (VBN motivated)
      (S
        (NP (DT the) (NNP Studio))
        (VP (TO to)
          (VP (VB film)
            (NP (DT this) (CD 2013) (NN prequel))))))
    (. .)))

det(success-2, The-1)
nsubj(motivated-13, success-2)
case(hit-6, of-3)
det(hit-6, the-4)
nummod(hit-6, 2001-5)
nmod:of(success-2, hit-6)
nsubj(motivated-13, Monsters-8)
appos(Monsters-8, Inc.-10)
nummod(Inc.-10, 6-11)
root(ROOT-0, motivated-13)
det(Studio-15, the-14)
dobj(motivated-13, Studio-15)
nsubj(film-17, Studio-15)
mark(film-17, to-16)
xcomp(motivated-13, film-17)
det(prequel-20, this-18)
nummod(prequel-20, 2013-19)
dobj(film-17, prequel-20)

(ROOT
  (S
    (NP (NNP Monsters) (NNP University))
    (VP (VBZ tells)
      (NP
        (NP (DT the) (NN story))
        (PP (IN of)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP
                (NP (PRP$ its) (NNS heroes))
                (, ,)
                (NP (NNP Mike)
                  (CC and)
                  (NNP Sulley))
                (, ,))
              (VP
                (VP (VB meet)
                  (PP (IN in)
                    (NP (NN university))))
                (CC and)
                (VP
                  (ADVP (RB later))
                  (VB become)
                  (NP
                    (NP (NNS workers))
                    (PP (IN of)
                      (NP
                        (NP (NNP Monsters))
                        (, ,)
                        (NP (NNP Inc.))
                        (, ,)
                        (NP
                          (NP (DT a) (JJ successful) (NN power) (NN company))
                          (PP (IN in)
                            (NP (DT the) (NN monster) (NN world))))
                        (, ,)
                        (SBAR
                          (WHNP (WP$ whose)
                            (NX (NNS workers)))
                          (S
                            (VP (VBP generate)
                              (NP
                                (NP (PRP$ their) (NN city) (POS 's))
                                (NN power))
                              (PP (IN by)
                                (S
                                  (VP (VBG scaring)
                                    (NP (JJ human) (NNS children))))))))))))))))))
    (. .)))

compound(University-2, Monsters-1)
nsubj(tells-3, University-2)
root(ROOT-0, tells-3)
det(story-5, the-4)
dobj(tells-3, story-5)
mark(meet-15, of-6)
advmod(meet-15, how-7)
nmod:poss(heroes-9, its-8)
nsubj(meet-15, heroes-9)
nsubj(become-20, heroes-9)
appos(heroes-9, Mike-11)
cc(Mike-11, and-12)
appos(heroes-9, Sulley-13)
conj:and(Mike-11, Sulley-13)
acl(story-5, meet-15)
case(university-17, in-16)
nmod:in(meet-15, university-17)
cc(meet-15, and-18)
advmod(become-20, later-19)
acl(story-5, become-20)
conj:and(meet-15, become-20)
xcomp(become-20, workers-21)
case(Monsters-23, of-22)
nmod:of(workers-21, Monsters-23)
nmod:poss(workers-37, Monsters-23)
appos(Monsters-23, Inc.-25)
det(company-30, a-27)
amod(company-30, successful-28)
compound(company-30, power-29)
appos(Monsters-23, company-30)
case(world-34, in-31)
det(world-34, the-32)
compound(world-34, monster-33)
nmod:in(company-30, world-34)
ref(Monsters-23, whose-36)
nsubj(generate-38, workers-37)
acl:relcl(Monsters-23, generate-38)
nmod:poss(city-40, their-39)
nmod:poss(power-42, city-40)
case(city-40, 's-41)
dobj(generate-38, power-42)
mark(scaring-44, by-43)
advcl(generate-38, scaring-44)
amod(children-46, human-45)
dobj(scaring-44, children-46)

(ROOT
  (S
    (S
      (VP (VBN Inspired)
        (PP (IN by)
          (NP (PRP$ his) (NN childhood) (NN tour)))
        (PP (TO to)
          (NP (DT the) (NNPS Monsters)))))
    (, ,)
    (NP (NNP Inc.) (, ,) (NNP Mike))
    (VP (VBZ plans)
      (S
        (VP (TO to)
          (VP (VB become)
            (NP (DT a) (JJ professional) (NN scarer))))))
    (. .)))

advcl(plans-13, Inspired-1)
case(tour-5, by-2)
nmod:poss(tour-5, his-3)
compound(tour-5, childhood-4)
nmod:by(Inspired-1, tour-5)
case(Monsters-8, to-6)
det(Monsters-8, the-7)
nmod:to(Inspired-1, Monsters-8)
compound(Mike-12, Inc.-10)
nsubj(plans-13, Mike-12)
nsubj(become-15, Mike-12)
root(ROOT-0, plans-13)
mark(become-15, to-14)
xcomp(plans-13, become-15)
det(scarer-18, a-16)
amod(scarer-18, professional-17)
xcomp(become-15, scarer-18)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBZ is)
        (VP (VBN admitted)
          (PP (TO to)
            (NP (DT the) (NN university)))))
      (CC and)
      (VP (VBZ begins)
        (NP (PRP$ his) (JJ new) (NN adventure))))
    (. .)))

nsubjpass(admitted-3, He-1)
nsubj(begins-8, He-1)
auxpass(admitted-3, is-2)
root(ROOT-0, admitted-3)
case(university-6, to-4)
det(university-6, the-5)
nmod:to(admitted-3, university-6)
cc(admitted-3, and-7)
conj:and(admitted-3, begins-8)
nmod:poss(adventure-11, his-9)
amod(adventure-11, new-10)
dobj(begins-8, adventure-11)

(ROOT
  (S
    (NP (NNP Mike))
    (VP (VBZ studies)
      (ADJP (JJ hard))
      (SBAR (IN while)
        (S
          (NP
            (NP (PRP$ his) (NN roommate))
            (, ,)
            (NP (DT a) (JJ talented) (NN monster) (NN Sulley))
            (, ,))
          (VP (VBZ tends)
            (S
              (VP (TO to)
                (VP (VB rely)
                  (PP (IN on)
                    (NP (PRP$ his) (JJ natural) (NN ability))))))))))
    (. .)))

nsubj(studies-2, Mike-1)
root(ROOT-0, studies-2)
xcomp(studies-2, hard-3)
mark(tends-13, while-4)
nmod:poss(roommate-6, his-5)
nsubj(tends-13, roommate-6)
nsubj(rely-15, roommate-6)
det(Sulley-11, a-8)
amod(Sulley-11, talented-9)
compound(Sulley-11, monster-10)
appos(roommate-6, Sulley-11)
advcl(studies-2, tends-13)
mark(rely-15, to-14)
xcomp(tends-13, rely-15)
case(ability-19, on-16)
nmod:poss(ability-19, his-17)
amod(ability-19, natural-18)
nmod:on(rely-15, ability-19)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN middle))
        (PP (IN of)
          (NP (DT the) (NN school) (NN year)))))
    (, ,)
    (NP
      (NP (DT both))
      (PP (IN of)
        (NP (PRP them))))
    (VP (VBP do)
      (ADVP (RB poorly))
      (PP (IN in)
        (NP (NNS studies)
          (CC and)
          (NN school) (NNS activities))))
    (. .)))

case(middle-3, In-1)
det(middle-3, the-2)
nmod:in(do-12, middle-3)
case(year-7, of-4)
det(year-7, the-5)
compound(year-7, school-6)
nmod:of(middle-3, year-7)
nsubj(do-12, both-9)
case(them-11, of-10)
nmod:of(both-9, them-11)
root(ROOT-0, do-12)
advmod(do-12, poorly-13)
case(studies-15, in-14)
nmod:in(do-12, studies-15)
cc(studies-15, and-16)
compound(activities-18, school-17)
nmod:in(do-12, activities-18)
conj:and(studies-15, activities-18)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP fail)
        (NP
          (NP (DT the) (NN test))
          (PP (IN for)
            (NP (NNP SCARE) (CD 1018))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD will)
        (VP (VB drop)
          (PRT (RP out))
          (PP (IN of)
            (NP (NN school)))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (DT the) (NN school) (NN year))
              (VP (VBZ ends)))))))
    (. .)))

nsubj(fail-2, They-1)
root(ROOT-0, fail-2)
det(test-4, the-3)
dobj(fail-2, test-4)
case(SCARE-6, for-5)
nmod:for(test-4, SCARE-6)
nummod(SCARE-6, 1018-7)
cc(fail-2, and-9)
nsubj(drop-12, they-10)
aux(drop-12, will-11)
conj:and(fail-2, drop-12)
compound:prt(drop-12, out-13)
case(school-15, of-14)
nmod:of(drop-12, school-15)
advmod(ends-20, when-16)
det(year-19, the-17)
compound(year-19, school-18)
nsubj(ends-20, year-19)
advcl(drop-12, ends-20)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB prove)
          (NP (PRP himself)))))
    (, ,)
    (NP (NNP Mike))
    (VP
      (VP (VBZ enters)
        (NP
          (NP (DT the) (NN school) (POS 's))
          (NNP Scare) (NNPS Games)))
      (CC and)
      (VP (VBD teams)
        (PRT (RP up))
        (PP (IN with)
          (NP
            (NP (NNP Sulley))
            (, ,)
            (NP (DT a) (JJ lazy) (NN student))
            (CC and)
            (NP (DT a) (NN cheater))))))
    (. .)))

mark(prove-2, To-1)
advcl(enters-6, prove-2)
dobj(prove-2, himself-3)
nsubj(enters-6, Mike-5)
nsubj(teams-13, Mike-5)
root(ROOT-0, enters-6)
det(school-8, the-7)
nmod:poss(Games-11, school-8)
case(school-8, 's-9)
compound(Games-11, Scare-10)
dobj(enters-6, Games-11)
cc(enters-6, and-12)
conj:and(enters-6, teams-13)
compound:prt(teams-13, up-14)
case(Sulley-16, with-15)
nmod:with(teams-13, Sulley-16)
det(student-20, a-18)
amod(student-20, lazy-19)
nmod:with(teams-13, student-20)
conj:and(Sulley-16, student-20)
cc(Sulley-16, and-21)
det(cheater-23, a-22)
nmod:with(teams-13, cheater-23)
conj:and(Sulley-16, cheater-23)

(ROOT
  (S
    (SBAR (IN Though)
      (S
        (NP (DT the) (NN team))
        (VP (VBZ fails)
          (NP (DT the) (JJ first) (NN challenge)))))
    (, ,)
    (NP (PRP they))
    (ADVP (RB finally))
    (VP (VBP win)
      (NP (DT the) (JJ final) (NN test)))
    (. .)))

mark(fails-4, Though-1)
det(team-3, the-2)
nsubj(fails-4, team-3)
advcl(win-11, fails-4)
det(challenge-7, the-5)
amod(challenge-7, first-6)
dobj(fails-4, challenge-7)
nsubj(win-11, they-9)
advmod(win-11, finally-10)
root(ROOT-0, win-11)
det(test-14, the-12)
amod(test-14, final-13)
dobj(win-11, test-14)

(ROOT
  (S
    (ADVP (RB Later))
    (, ,)
    (NP (NNP Mike))
    (VP (VBZ discovers)
      (SBAR (IN that)
        (S
          (NP (NNP Sulley))
          (VP (VBZ cheats)
            (PP (IN in)
              (NP (DT the) (NN game)))))))
    (. .)))

advmod(discovers-4, Later-1)
nsubj(discovers-4, Mike-3)
root(ROOT-0, discovers-4)
mark(cheats-7, that-5)
nsubj(cheats-7, Sulley-6)
ccomp(discovers-4, cheats-7)
case(game-10, in-8)
det(game-10, the-9)
nmod:in(cheats-7, game-10)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB prove)
          (NP
            (NP (PRP$ his) (NN ability))
            (PP (IN of)
              (S
                (VP (VBG being)
                  (NP (DT a) (JJ powerful) (NN scarer)))))))))
    (, ,)
    (NP (NNP Mike))
    (VP
      (VP (VBZ breaks)
        (PP (IN into)
          (NP (DT a) (NN school) (NN lab))))
      (CC and)
      (VP (VBZ enters)
        (NP
          (NP (DT a) (NN door))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ leads)
                (NP (PRP him))
                (PP (TO to)
                  (NP (DT the) (JJ human) (NN world)))))))))
    (. .)))

mark(prove-2, To-1)
advcl(breaks-12, prove-2)
nmod:poss(ability-4, his-3)
dobj(prove-2, ability-4)
mark(scarer-9, of-5)
cop(scarer-9, being-6)
det(scarer-9, a-7)
amod(scarer-9, powerful-8)
acl(ability-4, scarer-9)
nsubj(breaks-12, Mike-11)
nsubj(enters-18, Mike-11)
root(ROOT-0, breaks-12)
case(lab-16, into-13)
det(lab-16, a-14)
compound(lab-16, school-15)
nmod:into(breaks-12, lab-16)
cc(breaks-12, and-17)
conj:and(breaks-12, enters-18)
det(door-20, a-19)
dobj(enters-18, door-20)
nsubj(leads-22, door-20)
ref(door-20, that-21)
acl:relcl(door-20, leads-22)
dobj(leads-22, him-23)
case(world-27, to-24)
det(world-27, the-25)
amod(world-27, human-26)
nmod:to(leads-22, world-27)

(ROOT
  (S
    (NP
      (NP (PRP$ His) (JJ human) (NN adventure))
      (PP (IN in)
        (NP (DT a) (NN summer) (NN camp))))
    (VP (VBZ turns)
      (PRT (RP out))
      (S
        (VP (TO to)
          (VP (VB be)
            (NP (DT a) (NN disaster))
            (SBAR (IN because)
              (S
                (NP (PRP he))
                (VP (VBZ fails)
                  (S
                    (VP (TO to)
                      (VP (VB scare)
                        (NP (DT the) (JJ human) (NNS children))))))))))))
    (. .)))

nmod:poss(adventure-3, His-1)
amod(adventure-3, human-2)
nsubj(turns-8, adventure-3)
nsubj(disaster-13, adventure-3)
case(camp-7, in-4)
det(camp-7, a-5)
compound(camp-7, summer-6)
nmod:in(adventure-3, camp-7)
root(ROOT-0, turns-8)
compound:prt(turns-8, out-9)
mark(disaster-13, to-10)
cop(disaster-13, be-11)
det(disaster-13, a-12)
xcomp(turns-8, disaster-13)
mark(fails-16, because-14)
nsubj(fails-16, he-15)
nsubj(scare-18, he-15)
advcl(disaster-13, fails-16)
mark(scare-18, to-17)
xcomp(fails-16, scare-18)
det(children-21, the-19)
amod(children-21, human-20)
dobj(scare-18, children-21)

(ROOT
  (S
    (ADVP (RB Later))
    (NP (PRP he))
    (VP (VBZ is)
      (VP (VBN joined)
        (PP (IN by)
          (NP (NNP Sulley)))
        (PP (IN in)
          (NP (DT the) (JJ human) (NN world)))))
    (. .)))

advmod(joined-4, Later-1)
nsubjpass(joined-4, he-2)
auxpass(joined-4, is-3)
root(ROOT-0, joined-4)
case(Sulley-6, by-5)
nmod:by(joined-4, Sulley-6)
case(world-10, in-7)
det(world-10, the-8)
amod(world-10, human-9)
nmod:in(joined-4, world-10)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (VP (VBN trapped)
        (PP (IN by)
          (NP
            (NP (NNP Dean) (NNP Hardscrabble))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ closes)
                  (NP (DT the) (NN door))
                  (PP (TO to)
                    (NP (DT the) (JJ human) (NN world))))))))))
    (. .)))

advmod(trapped-5, However-1)
nsubjpass(trapped-5, they-3)
auxpass(trapped-5, are-4)
root(ROOT-0, trapped-5)
case(Hardscrabble-8, by-6)
compound(Hardscrabble-8, Dean-7)
nmod:by(trapped-5, Hardscrabble-8)
nsubj(closes-11, Hardscrabble-8)
ref(Hardscrabble-8, who-10)
acl:relcl(Hardscrabble-8, closes-11)
det(door-13, the-12)
dobj(closes-11, door-13)
case(world-17, to-14)
det(world-17, the-15)
amod(world-17, human-16)
nmod:to(closes-11, world-17)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP they))
        (VP (VBP realize)
          (SBAR (IN that)
            (S
              (NP (DT the) (JJ only) (NN way)
                (S
                  (VP (TO to)
                    (VP (VB get)
                      (PRT (RP back))
                      (PP (IN into)
                        (NP (DT the) (NN monster) (NN world)))))))
              (VP (VBZ is)
                (S
                  (VP (TO to)
                    (VP (VB generate)
                      (NP (JJ enough) (NN scream) (NN energy)))))))))))
    (, ,)
    (NP (NNP Mike)
      (CC and)
      (NNP Sulley))
    (ADVP (RB finally))
    (VP (VBP work)
      (ADVP (RB together))
      (S
        (VP (TO to)
          (VP (VB scare)
            (NP (DT the) (NNS adults))))))
    (. .)))

advmod(realize-3, When-1)
nsubj(realize-3, they-2)
advcl(work-26, realize-3)
mark(is-15, that-4)
det(way-7, the-5)
amod(way-7, only-6)
nsubj(is-15, way-7)
nsubj(generate-17, way-7)
mark(get-9, to-8)
acl(way-7, get-9)
compound:prt(get-9, back-10)
case(world-14, into-11)
det(world-14, the-12)
compound(world-14, monster-13)
nmod:into(get-9, world-14)
ccomp(realize-3, is-15)
mark(generate-17, to-16)
xcomp(is-15, generate-17)
amod(energy-20, enough-18)
compound(energy-20, scream-19)
dobj(generate-17, energy-20)
nsubj(work-26, Mike-22)
nsubj(scare-29, Mike-22)
cc(Mike-22, and-23)
conj:and(Mike-22, Sulley-24)
nsubj(work-26, Sulley-24)
nsubj(scare-29, Sulley-24)
advmod(work-26, finally-25)
root(ROOT-0, work-26)
advmod(work-26, together-27)
mark(scare-29, to-28)
xcomp(work-26, scare-29)
det(adults-31, the-30)
dobj(scare-29, adults-31)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VB generate)
        (NP
          (NP (DT a) (JJ huge) (NN amount))
          (PP (IN of)
            (NP (NN scream) (NN energy)))))
      (CC and)
      (VP (VB get)
        (PRT (RP back))
        (PP (TO to)
          (NP (PRP$ their) (JJ own) (NN world)))))
    (. .)))

nsubj(generate-2, They-1)
nsubj(get-10, They-1)
root(ROOT-0, generate-2)
det(amount-5, a-3)
amod(amount-5, huge-4)
dobj(generate-2, amount-5)
case(energy-8, of-6)
compound(energy-8, scream-7)
nmod:of(amount-5, energy-8)
cc(generate-2, and-9)
conj:and(generate-2, get-10)
compound:prt(get-10, back-11)
case(world-15, to-12)
nmod:poss(world-15, their-13)
amod(world-15, own-14)
nmod:to(get-10, world-15)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN story))
        (PP (IN of)
          (NP (NN friendship)
            (CC and)
            (NN teamwork)))))
    (. .)))

nsubj(story-4, This-1)
cop(story-4, is-2)
det(story-4, a-3)
root(ROOT-0, story-4)
case(friendship-6, of-5)
nmod:of(story-4, friendship-6)
cc(friendship-6, and-7)
nmod:of(story-4, teamwork-8)
conj:and(friendship-6, teamwork-8)

(ROOT
  (S
    (NP (NNP Mike))
    (VP (VBZ says)
      (SBAR
        (S
          (PP (IN in)
            (NP (DT the) (NN movie)))
          (, ,) (`` ``)
          (NP (PRP You)
            (CC and)
            (PRP I))
          (VP (VBP are)
            (NP (DT a) (NN team))))))
    (. .)))

nsubj(says-2, Mike-1)
root(ROOT-0, says-2)
case(movie-5, in-3)
det(movie-5, the-4)
nmod:in(team-13, movie-5)
nsubj(team-13, You-8)
cc(You-8, and-9)
conj:and(You-8, I-10)
nsubj(team-13, I-10)
cop(team-13, are-11)
det(team-13, a-12)
ccomp(says-2, team-13)

(ROOT
  (S
    (NP (NN Nothing))
    (VP (VBZ is)
      (ADJP (RBR more) (JJ important)
        (PP (IN than)
          (NP (PRP$ our) (NN friendship)))))
    (. .) ('' '')))

nsubj(important-4, Nothing-1)
cop(important-4, is-2)
advmod(important-4, more-3)
root(ROOT-0, important-4)
case(friendship-7, than-5)
nmod:poss(friendship-7, our-6)
nmod:than(important-4, friendship-7)

(ROOT
  (S
    (SBAR (IN Though)
      (S
        (NP (PRP they))
        (VP (VBP complain)
          (PP (IN about)
            (NP (DT each) (JJ other))))))
    (, ,)
    (NP (PRP they))
    (DT both)
    (VP
      (ADVP (RB always))
      (VBP believe)
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP (VBP are)
            (NP (DT the) (JJS best) (NN team))))))
    (. .)))

mark(complain-3, Though-1)
nsubj(complain-3, they-2)
advcl(believe-11, complain-3)
case(other-6, about-4)
det(other-6, each-5)
nmod:about(complain-3, other-6)
nsubj(believe-11, they-8)
dep(believe-11, both-9)
advmod(believe-11, always-10)
root(ROOT-0, believe-11)
mark(team-17, that-12)
nsubj(team-17, they-13)
cop(team-17, are-14)
det(team-17, the-15)
amod(team-17, best-16)
ccomp(believe-11, team-17)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD would) (RB n't)
        (VP (VB have)
          (NP (NN nothin))
          ('' ')
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBD did) (RB n't)
                (VP (VB have)
                  (NP (PRP you)))))))))
    (, ,) ('' '')
    (VP (VBZ says))
    (NP (NNP Mike))
    (. .)))

nsubj(have-5, I-2)
aux(have-5, would-3)
neg(have-5, n't-4)
ccomp(says-16, have-5)
dobj(have-5, nothin-6)
mark(have-12, if-8)
nsubj(have-12, I-9)
aux(have-12, did-10)
neg(have-12, n't-11)
advcl(have-5, have-12)
dobj(have-12, you-13)
root(ROOT-0, says-16)
nsubj(says-16, Mike-17)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB also))
      (NP
        (NP (DT a) (NN story))
        (PP (IN about)
          (NP
            (NP (CD two) (JJ different) (NNS kinds))
            (PP (IN of)
              (NP
                (NP (NNS people))
                (, ,)
                (NP (DT a) (JJ hard-working) (NN one))
                (CC and)
                (NP (DT a) (JJ talented) (NN one))))))))
    (. .)))

nsubj(story-5, This-1)
cop(story-5, is-2)
advmod(story-5, also-3)
det(story-5, a-4)
root(ROOT-0, story-5)
case(kinds-9, about-6)
nummod(kinds-9, two-7)
amod(kinds-9, different-8)
nmod:about(story-5, kinds-9)
case(people-11, of-10)
nmod:of(kinds-9, people-11)
det(one-15, a-13)
amod(one-15, hard-working-14)
nmod:of(kinds-9, one-15)
conj:and(people-11, one-15)
cc(people-11, and-16)
det(one-19, a-17)
amod(one-19, talented-18)
nmod:of(kinds-9, one-19)
conj:and(people-11, one-19)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ
      (VP (MD will)
        (VP (VB win)
          (PP (IN in)
            (NP (DT the) (NN end))))))
    (. ?)))

nsubj(win-3, Who-1)
aux(win-3, will-2)
root(ROOT-0, win-3)
case(end-6, in-4)
det(end-6, the-5)
nmod:in(win-3, end-6)

(ROOT
  (S
    (S
      (PP (RB Not)
        (NP (DT a) (JJ smart) (NN student)))
      (, ,)
      (NP (NNP Mike))
      (VP (VBZ has)
        (S
          (VP (TO to)
            (VP (VB work)
              (ADJP (JJ hard)
                (CC and)
                (JJ fumble))
              (PP (IN along)
                (NP (DT the) (NN way))))))))
    (: ;)
    (S
      (ADVP (RB yet))
      (, ,)
      (PP (IN without)
        (NP
          (NP (NNP Mike) (POS 's))
          (NN help)))
      (, ,)
      (NP (DT the) (JJ talented) (NN Sulley))
      (VP (MD will)
        (ADVP (RB never))
        (VP (VB get)
          (PP (TO to)
            (NP (PRP$ his) (NN aim))))))
    (. .)))

neg(student-4, Not-1)
det(student-4, a-2)
amod(student-4, smart-3)
nmod(has-7, student-4)
nsubj(has-7, Mike-6)
nsubj(work-9, Mike-6)
root(ROOT-0, has-7)
mark(work-9, to-8)
xcomp(has-7, work-9)
xcomp(work-9, hard-10)
cc(hard-10, and-11)
xcomp(work-9, fumble-12)
conj:and(hard-10, fumble-12)
case(way-15, along-13)
det(way-15, the-14)
nmod:along(work-9, way-15)
advmod(get-29, yet-17)
case(help-22, without-19)
nmod:poss(help-22, Mike-20)
case(Mike-20, 's-21)
nmod:without(get-29, help-22)
det(Sulley-26, the-24)
amod(Sulley-26, talented-25)
nsubj(get-29, Sulley-26)
aux(get-29, will-27)
neg(get-29, never-28)
parataxis(has-7, get-29)
case(aim-32, to-30)
nmod:poss(aim-32, his-31)
nmod:to(get-29, aim-32)

(ROOT
  (S
    (PP (IN As)
      (NP (DT a) (NN team)))
    (, ,)
    (NP
      (NP (CD two))
      (PP (IN of)
        (NP (PRP them))))
    (VP (MD can)
      (VP (VB generate)
        (NP
          (NP (JJ great) (NN power)
            (CC and)
            (NN energy))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (MD would)
                (VP (VB open)
                  (NP (DT any) (NN door))
                  (PP (TO to)
                    (NP
                      (NP (DT any) (NN place))
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBP want)
                            (S
                              (VP (TO to)
                                (VP (VB be))))))))))))))))
    (. .)))

case(team-3, As-1)
det(team-3, a-2)
nmod:as(generate-9, team-3)
nsubj(generate-9, two-5)
case(them-7, of-6)
nmod:of(two-5, them-7)
aux(generate-9, can-8)
root(ROOT-0, generate-9)
amod(power-11, great-10)
dobj(generate-9, power-11)
nsubj(open-17, power-11)
cc(power-11, and-12)
dobj(generate-9, energy-13)
conj:and(power-11, energy-13)
nsubj(open-17, energy-13)
ref(power-11, which-15)
aux(open-17, would-16)
acl:relcl(power-11, open-17)
det(door-19, any-18)
dobj(open-17, door-19)
case(place-22, to-20)
det(place-22, any-21)
nmod:to(open-17, place-22)
nsubj(want-24, they-23)
nsubj(be-26, they-23)
acl:relcl(place-22, want-24)
mark(be-26, to-25)
xcomp(want-24, be-26)

(ROOT
  (S
    (S
      (S
        (VP (VBG Using)
          (NP (JJ state-of-the-art) (NN technology))))
      (, ,)
      (NP (NNP Pixar))
      (VP
        (ADVP (RB not) (RB only))
        (VBZ creates)
        (NP
          (NP (DT a) (NN fantasy) (JJ 3-D) (NN movie))
          (PP (IN for)
            (NP (NNS kids))))))
    (: ;)
    (S
      (NP (PRP it))
      (ADVP (RB also))
      (VP (VBZ uses)
        (NP (PRP$ its) (JJ funny) (NNS monsters))
        (S
          (VP (TO to)
            (VP (VB teach)
              (NP (PRP$ its) (JJ young) (NN audience))
              (NP (DT a) (JJ great) (NN lesson)))))))
    (. .)))

advcl(creates-8, Using-1)
amod(technology-3, state-of-the-art-2)
dobj(Using-1, technology-3)
nsubj(creates-8, Pixar-5)
dep(only-7, not-6)
advmod(creates-8, only-7)
root(ROOT-0, creates-8)
det(movie-12, a-9)
compound(movie-12, fantasy-10)
amod(movie-12, 3-D-11)
dobj(creates-8, movie-12)
case(kids-14, for-13)
nmod:for(movie-12, kids-14)
nsubj(uses-18, it-16)
advmod(uses-18, also-17)
parataxis(creates-8, uses-18)
nmod:poss(monsters-21, its-19)
amod(monsters-21, funny-20)
dobj(uses-18, monsters-21)
mark(teach-23, to-22)
advcl(uses-18, teach-23)
nmod:poss(audience-26, its-24)
amod(audience-26, young-25)
dep(teach-23, audience-26)
det(lesson-29, a-27)
amod(lesson-29, great-28)
dobj(teach-23, lesson-29)

