(ROOT
  (S
    (NP (DT A) (JJ high) (NN school) (NN science) (NN teacher))
    (VP (VBZ wants)
      (S
        (VP (TO to)
          (VP (VB demonstrate)
            (NP (DT a) (NN concept))
            (PP (TO to)
              (NP (PRP$ his) (NNS students)))))))
    (. .)))

det(teacher-5, A-1)
amod(teacher-5, high-2)
compound(teacher-5, school-3)
compound(teacher-5, science-4)
nsubj(wants-6, teacher-5)
nsubj(demonstrate-8, teacher-5)
root(ROOT-0, wants-6)
mark(demonstrate-8, to-7)
xcomp(wants-6, demonstrate-8)
det(concept-10, a-9)
dobj(demonstrate-8, concept-10)
case(students-13, to-11)
nmod:poss(students-13, his-12)
nmod:to(demonstrate-8, students-13)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBZ takes)
        (NP (DT a) (JJ large-mouthed) (NN jar)))
      (CC and)
      (VP (VBZ places)
        (NP (JJ several) (JJ large) (NNS rocks))
        (PP (IN in)
          (NP (PRP it)))))
    (. .)))

nsubj(takes-2, He-1)
nsubj(places-7, He-1)
root(ROOT-0, takes-2)
det(jar-5, a-3)
amod(jar-5, large-mouthed-4)
dobj(takes-2, jar-5)
cc(takes-2, and-6)
conj:and(takes-2, places-7)
amod(rocks-10, several-8)
amod(rocks-10, large-9)
dobj(places-7, rocks-10)
case(it-12, in-11)
nmod:in(places-7, it-12)

(ROOT
  (SQ
    (S
      (NP (PRP He))
      (ADVP (RB then))
      (VP (VBZ asks)
        (NP (DT the) (NN class))))
    (, ,)
    (SQ (VBZ Is)
      (NP (PRP it))
      (ADJP (JJ full)))
    (. ?)))

nsubj(asks-3, He-1)
advmod(asks-3, then-2)
dep(full-9, asks-3)
det(class-5, the-4)
dobj(asks-3, class-5)
cop(full-9, Is-7)
nsubj(full-9, it-8)
root(ROOT-0, full-9)

(ROOT
  (S
    (NP (DT The) (JJ whole) (NN class))
    (VP (VBZ replies) (, ,)
      (ADVP (RB Yes)))
    (. !)))

det(class-3, The-1)
amod(class-3, whole-2)
nsubj(replies-4, class-3)
root(ROOT-0, replies-4)
advmod(replies-4, Yes-6)

(ROOT
  (S
    (NP (DT The) (NN teacher))
    (ADVP (RB then))
    (VP
      (VP (VBZ takes)
        (NP
          (NP (DT a) (NN bucket))
          (PP (IN of)
            (NP (NN gravel)))))
      (CC and)
      (VP (VBZ pours)
        (NP (PRP it))
        (PP (IN into)
          (NP (DT the) (NN jar)))))
    (. .)))

det(teacher-2, The-1)
nsubj(takes-4, teacher-2)
nsubj(pours-10, teacher-2)
advmod(takes-4, then-3)
root(ROOT-0, takes-4)
det(bucket-6, a-5)
dobj(takes-4, bucket-6)
case(gravel-8, of-7)
nmod:of(bucket-6, gravel-8)
cc(takes-4, and-9)
conj:and(takes-4, pours-10)
dobj(pours-10, it-11)
case(jar-14, into-12)
det(jar-14, the-13)
nmod:into(pours-10, jar-14)

(ROOT
  (S
    (NP (DT The) (JJ small) (NNS rocks))
    (VP (VBP settle)
      (PP (IN into)
        (NP
          (NP (DT the) (NNS spaces))
          (PP (IN between)
            (NP (DT the) (JJ big) (NNS rocks))))))
    (. .)))

det(rocks-3, The-1)
amod(rocks-3, small-2)
nsubj(settle-4, rocks-3)
root(ROOT-0, settle-4)
case(spaces-7, into-5)
det(spaces-7, the-6)
nmod:into(settle-4, spaces-7)
case(rocks-11, between-8)
det(rocks-11, the-9)
amod(rocks-11, big-10)
nmod:between(spaces-7, rocks-11)

(ROOT
  (SQ
    (S
      (NP (PRP He))
      (ADVP (RB then))
      (VP (VBZ asks)
        (NP (DT the) (NN class))))
    (, ,)
    (SQ (VBZ Is)
      (NP (PRP it))
      (ADJP (JJ full)))
    (. ?)))

nsubj(asks-3, He-1)
advmod(asks-3, then-2)
dep(full-9, asks-3)
det(class-5, the-4)
dobj(asks-3, class-5)
cop(full-9, Is-7)
nsubj(full-9, it-8)
root(ROOT-0, full-9)

(ROOT
  (S
    (NP (DT This) (NN time))
    (NP (DT some) (NNS students))
    (VP
      (VP (VBP hold)
        (ADVP (RB back)))
      (, ,)
      (CC but)
      (VP
        (ADVP (RBS most))
        (VB reply) (, ,)
        (ADVP (RB Yes))))
    (. !)))

det(time-2, This-1)
nsubj(hold-5, time-2)
nsubj(reply-10, time-2)
det(students-4, some-3)
nsubj(hold-5, students-4)
root(ROOT-0, hold-5)
advmod(hold-5, back-6)
cc(hold-5, but-8)
advmod(reply-10, most-9)
conj:but(hold-5, reply-10)
advmod(reply-10, Yes-12)

(ROOT
  (S
    (NP (DT The) (NN teacher))
    (ADVP (RB then))
    (VP
      (VP (VBZ produces)
        (NP
          (NP (DT a) (JJ large) (NN can))
          (PP (IN of)
            (NP (NN sand)))))
      (CC and)
      (VP (VBZ pours)
        (NP (PRP it))
        (PP (IN into)
          (NP (DT the) (NN jar)))))
    (. .)))

det(teacher-2, The-1)
nsubj(produces-4, teacher-2)
nsubj(pours-11, teacher-2)
advmod(produces-4, then-3)
root(ROOT-0, produces-4)
det(can-7, a-5)
amod(can-7, large-6)
dobj(produces-4, can-7)
case(sand-9, of-8)
nmod:of(can-7, sand-9)
cc(produces-4, and-10)
conj:and(produces-4, pours-11)
dobj(pours-11, it-12)
case(jar-15, into-13)
det(jar-15, the-14)
nmod:into(pours-11, jar-15)

(ROOT
  (S
    (NP (DT The) (NN sand))
    (VP (VBZ fills)
      (PRT (RP up))
      (NP
        (NP (DT the) (NNS spaces))
        (PP (IN between)
          (NP
            (NP (DT the) (NNS bits))
            (PP (IN of)
              (NP (NN gravel)))))))
    (. .)))

det(sand-2, The-1)
nsubj(fills-3, sand-2)
root(ROOT-0, fills-3)
compound:prt(fills-3, up-4)
det(spaces-6, the-5)
dobj(fills-3, spaces-6)
case(bits-9, between-7)
det(bits-9, the-8)
nmod:between(spaces-6, bits-9)
case(gravel-11, of-10)
nmod:of(bits-9, gravel-11)

(ROOT
  (SQ
    (S
      (PP (IN For)
        (NP (DT the) (JJ third) (NN time)))
      (, ,)
      (NP (DT the) (NN teacher))
      (VP (VBZ asks)))
    (, ,)
    (SQ (VBZ Is)
      (NP (PRP it))
      (ADJP (JJ full)))
    (. ?)))

case(time-4, For-1)
det(time-4, the-2)
amod(time-4, third-3)
nmod:for(asks-8, time-4)
det(teacher-7, the-6)
nsubj(asks-8, teacher-7)
dep(full-12, asks-8)
cop(full-12, Is-10)
nsubj(full-12, it-11)
root(ROOT-0, full-12)

(ROOT
  (S
    (ADVP (RB Now))
    (NP
      (NP (JJS most))
      (PP (IN of)
        (NP (DT the) (NNS students))))
    (VP (VBP are)
      (NP
        (ADJP
          (ADJP (JJ wary)
            (PP (IN of)
              (NP (NN answering))))
          (PRN (, ,)
            (CC but)
            (ADVP (RB again))))
        (, ,) (JJ many) (NN reply))
      (, ,)
      (ADVP (RB Yes)))
    (. !)))

advmod(reply-15, Now-1)
nsubj(reply-15, most-2)
case(students-5, of-3)
det(students-5, the-4)
nmod:of(most-2, students-5)
cop(reply-15, are-6)
amod(reply-15, wary-7)
case(answering-9, of-8)
nmod:of(wary-7, answering-9)
cc(again-12, but-11)
dep(wary-7, again-12)
amod(reply-15, many-14)
root(ROOT-0, reply-15)
advmod(reply-15, Yes-17)

(ROOT
  (S (RB Then)
    (NP (DT the) (NN teacher))
    (VP
      (VP (VBZ brings)
        (PRT (RP out))
        (NP
          (NP (DT a) (NN pitcher))
          (PP (IN of)
            (NP (NN water)))))
      (CC and)
      (VP (VBZ pours)
        (NP (PRP it))
        (PP (IN into)
          (NP (DT the) (NN jar)))))
    (. .)))

advmod(brings-4, Then-1)
det(teacher-3, the-2)
nsubj(brings-4, teacher-3)
nsubj(pours-11, teacher-3)
root(ROOT-0, brings-4)
compound:prt(brings-4, out-5)
det(pitcher-7, a-6)
dobj(brings-4, pitcher-7)
case(water-9, of-8)
nmod:of(pitcher-7, water-9)
cc(brings-4, and-10)
conj:and(brings-4, pours-11)
dobj(pours-11, it-12)
case(jar-15, into-13)
det(jar-15, the-14)
nmod:into(pours-11, jar-15)

(ROOT
  (S
    (NP (DT The) (NN water))
    (VP (VBZ saturates)
      (NP (DT the) (NN sand)))
    (. .)))

det(water-2, The-1)
nsubj(saturates-3, water-2)
root(ROOT-0, saturates-3)
det(sand-5, the-4)
dobj(saturates-3, sand-5)

(ROOT
  (S
    (PP (IN At)
      (NP (DT this) (NN point)))
    (NP (DT the) (NN teacher))
    (VP (VBZ asks)
      (NP
        (NP (DT the) (NN class))
        (, ,)
        (SBAR
          (WHNP (WP What))
          (S
            (VP (VBZ is)
              (NP
                (NP (DT the) (NN point))
                (PP (IN of)
                  (NP (DT this) (NN demonstration)))))))))
    (. ?)))

case(point-3, At-1)
det(point-3, this-2)
nmod:at(asks-6, point-3)
det(teacher-5, the-4)
nsubj(asks-6, teacher-5)
root(ROOT-0, asks-6)
det(class-8, the-7)
dobj(asks-6, class-8)
nsubj(point-13, class-8)
ref(class-8, What-10)
cop(point-13, is-11)
det(point-13, the-12)
acl:relcl(class-8, point-13)
case(demonstration-16, of-14)
det(demonstration-16, this-15)
nmod:of(point-13, demonstration-16)

(ROOT
  (S
    (S
      (NP (CD One) (JJ bright) (JJ young) (NN student))
      (VP
        (VP (VBZ raises)
          (NP (PRP$ his) (NN hand)))
        (CC and)
        (ADVP (RB then))
        (VP (VBZ answers))))
    (, ,)
    (S
      (ADVP (DT No) (NN matter)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (JJ full) (NNS ones) (NN schedule))
            (VP (VBZ is)
              (PP (IN in)
                (NP (NN life)))))))
      (, ,)
      (NP (PRP one))
      (VP (MD can)
        (ADVP (RB always))
        (VP (VB squeeze)
          (PP (IN in)
            (NP (JJR more) (NNS things))))))
    (. !)))

nummod(student-4, One-1)
amod(student-4, bright-2)
amod(student-4, young-3)
nsubj(raises-5, student-4)
nsubj(answers-10, student-4)
root(ROOT-0, raises-5)
nmod:poss(hand-7, his-6)
dobj(raises-5, hand-7)
cc(raises-5, and-8)
advmod(answers-10, then-9)
conj:and(raises-5, answers-10)
neg(matter-13, No-12)
advmod(squeeze-25, matter-13)
advmod(life-20, how-14)
amod(schedule-17, full-15)
compound(schedule-17, ones-16)
nsubj(life-20, schedule-17)
cop(life-20, is-18)
case(life-20, in-19)
dep(matter-13, life-20)
nsubj(squeeze-25, one-22)
aux(squeeze-25, can-23)
advmod(squeeze-25, always-24)
parataxis(raises-5, squeeze-25)
case(things-28, in-26)
amod(things-28, more-27)
nmod:in(squeeze-25, things-28)

(ROOT
  (S
    (SINV
      (ADJP (RB Very) (JJ good))
      (, ,)
      (VP (VBZ replies))
      (NP (DT the) (NN teacher)))
    (, ,)
    (CC but)
    (S
      (NP (DT the)
        (ADJP (RBS most) (JJ important))
        (NN point))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (SBAR (IN unless)
              (S
                (NP (PRP you))
                (VP (VBD put)
                  (NP (DT the) (JJ big) (NNS rocks))
                  (PP (IN into)
                    (NP (DT the) (NN jar)))
                  (ADVP (RB first)))))
            (, ,)
            (NP (PRP you))
            (VP (VBP are)
              (ADVP (RB never))
              (VP (VBG going)
                (S
                  (VP (TO to)
                    (VP (VB get)
                      (NP (PRP them))
                      (PP (IN in)))))))))))
    (. .)))

advmod(good-2, Very-1)
dep(replies-4, good-2)
root(ROOT-0, replies-4)
det(teacher-6, the-5)
nsubj(replies-4, teacher-6)
cc(replies-4, but-8)
det(point-12, the-9)
advmod(important-11, most-10)
amod(point-12, important-11)
nsubj(is-13, point-12)
conj:but(replies-4, is-13)
mark(going-29, that-14)
mark(put-17, unless-15)
nsubj(put-17, you-16)
advcl(going-29, put-17)
det(rocks-20, the-18)
amod(rocks-20, big-19)
dobj(put-17, rocks-20)
case(jar-23, into-21)
det(jar-23, the-22)
nmod:into(put-17, jar-23)
advmod(put-17, first-24)
nsubj(going-29, you-26)
nsubj(get-31, you-26)
aux(going-29, are-27)
neg(going-29, never-28)
ccomp(is-13, going-29)
mark(get-31, to-30)
xcomp(going-29, get-31)
dobj(get-31, them-32)
nmod(get-31, in-33)

(ROOT
  (S
    (NP (DT The) (JJ big) (NNS rocks))
    (VP (VBP are)
      (NP
        (NP (DT the) (JJ important) (NNS things))
        (PP (IN in)
          (NP
            (NP (PRP$ your) (NN lifeXyour) (NN family))
            (, ,)
            (NP
              (NP (PRP$ your) (NNS friends))
              (, ,)
              (NP (PRP$ your) (JJ personal) (NN growth)))))))
    (. .)))

det(rocks-3, The-1)
amod(rocks-3, big-2)
nsubj(things-7, rocks-3)
cop(things-7, are-4)
det(things-7, the-5)
amod(things-7, important-6)
root(ROOT-0, things-7)
case(family-11, in-8)
nmod:poss(family-11, your-9)
compound(family-11, lifeXyour-10)
nmod:in(things-7, family-11)
nmod:poss(friends-14, your-13)
appos(family-11, friends-14)
nmod:poss(growth-18, your-16)
amod(growth-18, personal-17)
appos(friends-14, growth-18)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP fill)
          (NP (PRP$ your) (NN life))
          (PP (IN with)
            (NP (JJ small) (NNS things))))))
    (, ,)
    (PP (IN like)
      (NP
        (NP (DT the) (NN gravel))
        (, ,)
        (NP (DT the) (NN sand))
        (, ,)
        (CC and)
        (NP (DT the) (NN water))))
    (, ,)
    (NP (PRP you))
    (VP (MD will)
      (ADVP (RB never))
      (VP (VB have)
        (NP
          (NP (NN space))
          (PP (IN for)
            (NP (DT the) (JJ important) (NNS things))))))
    (. .)))

mark(fill-3, If-1)
nsubj(fill-3, you-2)
advcl(have-24, fill-3)
nmod:poss(life-5, your-4)
dobj(fill-3, life-5)
case(things-8, with-6)
amod(things-8, small-7)
nmod:with(fill-3, things-8)
case(gravel-12, like-10)
det(gravel-12, the-11)
nmod:like(have-24, gravel-12)
det(sand-15, the-14)
conj:and(gravel-12, sand-15)
nmod:like(have-24, sand-15)
cc(gravel-12, and-17)
det(water-19, the-18)
conj:and(gravel-12, water-19)
nmod:like(have-24, water-19)
nsubj(have-24, you-21)
aux(have-24, will-22)
neg(have-24, never-23)
root(ROOT-0, have-24)
dobj(have-24, space-25)
case(things-29, for-26)
det(things-29, the-27)
amod(things-29, important-28)
nmod:for(space-25, things-29)

(ROOT
  (SBARQ (RB So) (, ,)
    (WHNP (WP what))
    (SQ
      (VP (VBP are)
        (NP
          (NP (DT the) (JJ big) (NNS rocks))
          (PP (IN in)
            (NP (PRP$ your) (NN life))))))
    (. ?)))

advmod(rocks-7, So-1)
nsubj(rocks-7, what-3)
cop(rocks-7, are-4)
det(rocks-7, the-5)
amod(rocks-7, big-6)
root(ROOT-0, rocks-7)
case(life-10, in-8)
nmod:poss(life-10, your-9)
nmod:in(rocks-7, life-10)

(ROOT
  (NP
    (NP (VBG Spending) (NN time))
    (PP (IN with)
      (NP (PRP$ your) (NN family)))
    (. ?)))

amod(time-2, Spending-1)
root(ROOT-0, time-2)
case(family-5, with-3)
nmod:poss(family-5, your-4)
nmod:with(time-2, family-5)

(ROOT
  (S
    (S
      (VP (VBG Taking)
        (NP (NNS classes))
        (S
          (VP (TO to)
            (VP (VB get)
              (NP (DT the) (NN information)))))))
    (NP (PRP you))
    (VP (VBP need))
    (. ?)))

dep(need-8, Taking-1)
dobj(Taking-1, classes-2)
mark(get-4, to-3)
advcl(Taking-1, get-4)
det(information-6, the-5)
dobj(get-4, information-6)
nsubj(need-8, you-7)
root(ROOT-0, need-8)

(ROOT
  (S
    (VP (VBG Making)
      (NP (NN time))
      (PP (IN for)
        (NP (NN school) (NNS clubs))))
    (. ?)))

root(ROOT-0, Making-1)
dobj(Making-1, time-2)
case(clubs-5, for-3)
compound(clubs-5, school-4)
nmod:for(Making-1, clubs-5)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP feel)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP dont)
                (VP (VB have)
                  (NP
                    (NP (JJ enough) (NN time))
                    (PP (IN for)
                      (NP (NN everything)))))))))))
    (, ,)
    (VP (VB remember)
      (NP (DT the) (NN story))
      (PP (IN about)
        (NP
          (NP (DT the) (JJ big) (NNS rocks))
          (CC and)
          (NP (DT the) (NN jar)))))
    (. !)))

advmod(feel-3, When-1)
nsubj(feel-3, you-2)
advcl(remember-13, feel-3)
mark(dont-6, that-4)
nsubj(dont-6, you-5)
ccomp(feel-3, dont-6)
xcomp(dont-6, have-7)
amod(time-9, enough-8)
dobj(have-7, time-9)
case(everything-11, for-10)
nmod:for(time-9, everything-11)
root(ROOT-0, remember-13)
det(story-15, the-14)
dobj(remember-13, story-15)
case(rocks-19, about-16)
det(rocks-19, the-17)
amod(rocks-19, big-18)
nmod:about(remember-13, rocks-19)
cc(rocks-19, and-20)
det(jar-22, the-21)
nmod:about(remember-13, jar-22)
conj:and(rocks-19, jar-22)

