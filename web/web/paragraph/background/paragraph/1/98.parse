(ROOT
  (NP
    (NP (NNP Unit) (CD 11))
    (NP (DT The) (NNP Alternative) (NNP Nobel) (NNP Prize))
    (. .)))

root(ROOT-0, Unit-1)
nummod(Unit-1, 11-2)
det(Prize-6, The-3)
compound(Prize-6, Alternative-4)
compound(Prize-6, Nobel-5)
dep(Unit-1, Prize-6)

(ROOT
  (S
    (S
      (VP (VBG Having)
        (NP (DT a) (NN meal))))
    (VP (VBZ is)
      (NP
        (NP (DT an)
          (ADJP (JJ easy)
            (CC and)
            (JJ delightful))
          (NN process))
        (PP (IN for)
          (NP (JJS most) (NNS people)))))
    (. .)))

csubj(process-9, Having-1)
det(meal-3, a-2)
dobj(Having-1, meal-3)
cop(process-9, is-4)
det(process-9, an-5)
amod(process-9, easy-6)
cc(easy-6, and-7)
conj:and(easy-6, delightful-8)
amod(process-9, delightful-8)
root(ROOT-0, process-9)
case(people-12, for-10)
amod(people-12, most-11)
nmod:for(process-9, people-12)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (PP (IN for)
      (NP (DT a) (NN woodpecker)))
    (, ,)
    (NP (PRP$ its))
    (ADVP (RB not) (RB that))
    (VP (VBZ simple))
    (. .)))

advmod(simple-10, However-1)
case(woodpecker-5, for-3)
det(woodpecker-5, a-4)
nmod:for(simple-10, woodpecker-5)
nsubj(simple-10, its-7)
dep(that-9, not-8)
advmod(simple-10, that-9)
root(ROOT-0, simple-10)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ does)
      (NP (DT a) (NN woodpecker))
      (VP (VB do)
        (S
          (VP (TO to)
            (VP (VB get)
              (NP (PRP$ its) (NN dinner)))))))
    (. ?)))

dep(do-5, What-1)
aux(do-5, does-2)
det(woodpecker-4, a-3)
nsubj(do-5, woodpecker-4)
nsubj(get-7, woodpecker-4)
root(ROOT-0, do-5)
mark(get-7, to-6)
xcomp(do-5, get-7)
nmod:poss(dinner-9, its-8)
dobj(get-7, dinner-9)

(ROOT
  (S
    (ADVP (RB Well))
    (, ,)
    (SBAR
      (WHNP (WP what))
      (S
        (NP (PRP it))
        (VP (VBZ has)
          (S
            (VP (TO to)
              (VP (VB do)))))))
    (VP (VBZ is)
      (VP (VBN hit)
        (NP (PRP$ its) (NN head))
        (PP (IN against)
          (NP
            (NP (DT a) (NN tree) (NNS dozens))
            (PP (IN of)
              (NP (NNS times)))))))
    (. .)))

advmod(hit-9, Well-1)
dobj(has-5, what-3)
nsubj(do-7, what-3)
nsubj(has-5, it-4)
csubjpass(hit-9, has-5)
mark(do-7, to-6)
xcomp(has-5, do-7)
auxpass(hit-9, is-8)
root(ROOT-0, hit-9)
nmod:poss(head-11, its-10)
dobj(hit-9, head-11)
case(dozens-15, against-12)
det(dozens-15, a-13)
compound(dozens-15, tree-14)
nmod:against(hit-9, dozens-15)
case(times-17, of-16)
nmod:of(dozens-15, times-17)

(ROOT
  (S (CC Yet)
    (, ,)
    (ADVP (RB amazingly))
    (, ,)
    (NP (PRP it))
    (ADVP (RB never))
    (VP (VBZ suffers)
      (NP
        (NP (DT any) (JJ ill) (NNS effects))
        (PP (IN like)
          (NP (NN brain) (NN damage))))
      (, ,)
      (SBAR (RB even) (IN though)
        (S
          (NP (PRP it))
          (VP (VBZ has)
            (S
              (VP (TO to)
                (VP (VB peck)
                  (NP
                    (NP (JJ numerous) (NNS times))
                    (PP (IN per)
                      (NP (NN day)))))))))))
    (. .)))

cc(suffers-7, Yet-1)
advmod(suffers-7, amazingly-3)
nsubj(suffers-7, it-5)
neg(suffers-7, never-6)
root(ROOT-0, suffers-7)
det(effects-10, any-8)
amod(effects-10, ill-9)
dobj(suffers-7, effects-10)
case(damage-13, like-11)
compound(damage-13, brain-12)
nmod:like(effects-10, damage-13)
advmod(has-18, even-15)
mark(has-18, though-16)
nsubj(has-18, it-17)
nsubj(peck-20, it-17)
advcl(suffers-7, has-18)
mark(peck-20, to-19)
xcomp(has-18, peck-20)
amod(times-22, numerous-21)
dobj(peck-20, times-22)
case(day-24, per-23)
nmod:per(times-22, day-24)

(ROOT
  (S
    (PP (VBG According)
      (PP (TO to)
        (NP (NN research))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ woodpeckers) (JJ thick) (NN head) (NNS bones))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VB protect)
              (NP (PRP it))
              (PP (IN from)
                (NP
                  (NP (DT the) (NN impact))
                  (PP (IN of)
                    (NP (DT the) (NNS blows))))))))))
    (. .)))

case(research-3, According-1)
mwe(According-1, to-2)
nmod:according_to(bones-11, research-3)
nsubj(bones-11, it-5)
cop(bones-11, is-6)
det(bones-11, the-7)
amod(bones-11, woodpeckers-8)
amod(bones-11, thick-9)
compound(bones-11, head-10)
root(ROOT-0, bones-11)
nsubj(protect-13, bones-11)
ref(bones-11, that-12)
acl:relcl(bones-11, protect-13)
dobj(protect-13, it-14)
case(impact-17, from-15)
det(impact-17, the-16)
nmod:from(protect-13, impact-17)
case(blows-20, of-18)
det(blows-20, the-19)
nmod:of(impact-17, blows-20)

(ROOT
  (S
    (PP (IN For)
      (S
        (VP (VBG explaining)
          (NP (DT that)))))
    (, ,)
    (NP (NNP Ivan) (NNP Schwab))
    (VP (VBD won)
      (NP
        (NP (DT an) (NNP Ig) (NNP Nobel) (NNP Prize))
        (PP (IN for)
          (NP (NNP Ornithology)))))
    (. .)))

mark(explaining-2, For-1)
advcl(won-7, explaining-2)
dobj(explaining-2, that-3)
compound(Schwab-6, Ivan-5)
nsubj(won-7, Schwab-6)
root(ROOT-0, won-7)
det(Prize-11, an-8)
compound(Prize-11, Ig-9)
compound(Prize-11, Nobel-10)
dobj(won-7, Prize-11)
case(Ornithology-13, for-12)
nmod:for(Prize-11, Ornithology-13)

(ROOT
  (S
    (NP (DT The) (NNP Ig) (NNP Nobel) (NNPS Prizes))
    (VP (VBP are)
      (VP (VBN organized)
        (PP (IN by)
          (NP
            (NP (DT The) (NNPS Annals))
            (PP (IN of)
              (NP
                (NP (NNP Improbable) (NNP Research))
                (, ,)
                (NP
                  (NP (DT an) (JJ American) (NN magazine))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ celebrates)
                        (NP
                          (NP (DT the) (JJ funny) (NN side))
                          (PP (IN of)
                            (NP (NN science))))))))))))))
    (. .)))

det(Prizes-4, The-1)
compound(Prizes-4, Ig-2)
compound(Prizes-4, Nobel-3)
nsubjpass(organized-6, Prizes-4)
auxpass(organized-6, are-5)
root(ROOT-0, organized-6)
case(Annals-9, by-7)
det(Annals-9, The-8)
nmod:by(organized-6, Annals-9)
case(Research-12, of-10)
compound(Research-12, Improbable-11)
nmod:of(Annals-9, Research-12)
det(magazine-16, an-14)
amod(magazine-16, American-15)
appos(Research-12, magazine-16)
nsubj(celebrates-18, magazine-16)
ref(magazine-16, that-17)
acl:relcl(magazine-16, celebrates-18)
det(side-21, the-19)
amod(side-21, funny-20)
dobj(celebrates-18, side-21)
case(science-23, of-22)
nmod:of(side-21, science-23)

(ROOT
  (S
    (S
      (NP (DT Each) (NN year))
      (, ,)
      (NP (CD ten) (NNS winners))
      (VP (VBP are)
        (VP (VBN awarded)
          (NP (NNS prizes))
          (PP (IN in)
            (NP
              (NP (NN honor))
              (PP (IN of)
                (NP (PRP$ their) (NNS achievements)))
              (SBAR
                (WHNP (WDT that))
                (S
                  (ADVP (RB first))
                  (VP (VBP make)
                    (S
                      (NP (NNS people))
                      (VP (NN laugh)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (RB then))
      (VP (VBP make)
        (SBAR
          (S
            (NP (PRP them))
            (VP (VBP think))))))
    (. .)))

det(year-2, Each-1)
nmod:tmod(awarded-7, year-2)
nummod(winners-5, ten-4)
nsubjpass(awarded-7, winners-5)
auxpass(awarded-7, are-6)
root(ROOT-0, awarded-7)
dobj(awarded-7, prizes-8)
case(honor-10, in-9)
nmod:in(awarded-7, honor-10)
nsubj(make-16, honor-10)
case(achievements-13, of-11)
nmod:poss(achievements-13, their-12)
nmod:of(honor-10, achievements-13)
ref(honor-10, that-14)
advmod(make-16, first-15)
acl:relcl(honor-10, make-16)
nsubj(laugh-18, people-17)
ccomp(make-16, laugh-18)
cc(awarded-7, and-20)
nsubj(make-22, then-21)
conj:and(awarded-7, make-22)
nsubj(think-24, them-23)
ccomp(make-22, think-24)

(ROOT
  (S
    (S
      (NP
        (NP (JJS Most))
        (PP (IN of)
          (NP (DT the) (JJ award-winning) (NN research))))
      (, ,)
      (PP (IN like)
        (NP (NNP Schwabs)))
      (, ,)
      (VP (MD may)
        (VP (VB seem)
          (ADJP (JJ unusual)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (ADVP (RB usually))
      (VP (VBZ grabs)
        (NP (NNS peoples) (NN attention))
        (ADVP (RB indeed))))
    (. .)))

nsubj(seem-11, Most-1)
case(research-5, of-2)
det(research-5, the-3)
amod(research-5, award-winning-4)
nmod:of(Most-1, research-5)
case(Schwabs-8, like-7)
nmod:like(seem-11, Schwabs-8)
aux(seem-11, may-10)
root(ROOT-0, seem-11)
xcomp(seem-11, unusual-12)
cc(seem-11, but-14)
nsubj(grabs-17, it-15)
advmod(grabs-17, usually-16)
conj:but(seem-11, grabs-17)
compound(attention-19, peoples-18)
dobj(grabs-17, attention-19)
advmod(grabs-17, indeed-20)

(ROOT
  (S (CC And)
    (ADVP (DT no) (NN matter)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (JJ ridiculous) (DT the) (NN research))
          (VP (VBZ sounds)))))
    (, ,)
    (NP (NNS people))
    (VP (MD can)
      (VP (VB find)
        (S
          (NP (PRP it))
          (ADJP (JJ inspiring)
            (CC and)
            (JJ amusing)))))
    (. .)))

cc(find-12, And-1)
neg(matter-3, no-2)
advmod(find-12, matter-3)
advmod(sounds-8, how-4)
amod(research-7, ridiculous-5)
det(research-7, the-6)
nsubj(sounds-8, research-7)
dep(matter-3, sounds-8)
nsubj(find-12, people-10)
aux(find-12, can-11)
root(ROOT-0, find-12)
nsubj(inspiring-14, it-13)
nsubj(amusing-16, it-13)
xcomp(find-12, inspiring-14)
cc(inspiring-14, and-15)
xcomp(find-12, amusing-16)
conj:and(inspiring-14, amusing-16)

(ROOT
  (S
    (PP (IN With)
      (NP
        (NP (DT these) (NNS awards))
        (PP (IN in)
          (NP (NN mind)))))
    (, ,)
    (NP (PRP you))
    (VP (MD might)
      (VP (VB be)
        (ADJP (RBR more) (JJ interested)
          (PP (IN in)
            (NP (NNP Brian) (NNP Wansinks) (NN research))))))
    (. .)))

case(awards-3, With-1)
det(awards-3, these-2)
nmod:with(interested-11, awards-3)
case(mind-5, in-4)
nmod:in(awards-3, mind-5)
nsubj(interested-11, you-7)
aux(interested-11, might-8)
cop(interested-11, be-9)
advmod(interested-11, more-10)
root(ROOT-0, interested-11)
case(research-15, in-12)
compound(research-15, Brian-13)
compound(research-15, Wansinks-14)
nmod:in(interested-11, research-15)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD took)
      (NP (NN home))
      (NP
        (NP (DT an) (NNP Ig) (NNP Nobel) (NNP Prize))
        (PP (IN for)
          (NP
            (NP (NNP Nutrition))
            (PP (IN for)
              (S
                (VP (VBG looking)
                  (PP (IN into)
                    (NP
                      (NP (DT the) (NN influence))
                      (PP (IN of)
                        (NP (JJ visual) (NNS factors)))))
                  (PP (IN on)
                    (NP (NNS peoples) (NNS appetites))))))))))
    (. .)))

nsubj(took-2, He-1)
root(ROOT-0, took-2)
iobj(took-2, home-3)
det(Prize-7, an-4)
compound(Prize-7, Ig-5)
compound(Prize-7, Nobel-6)
dobj(took-2, Prize-7)
case(Nutrition-9, for-8)
nmod:for(Prize-7, Nutrition-9)
mark(looking-11, for-10)
acl(Nutrition-9, looking-11)
case(influence-14, into-12)
det(influence-14, the-13)
nmod:into(looking-11, influence-14)
case(factors-17, of-15)
amod(factors-17, visual-16)
nmod:of(influence-14, factors-17)
case(appetites-20, on-18)
compound(appetites-20, peoples-19)
nmod:on(looking-11, appetites-20)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD used)
      (NP
        (NP
          (ADJP (RB specially) (VBN designed))
          (NNS bowls))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD refilled)
              (NP (PRP themselves))
              (PP (IN with)
                (NP (NN soup)))
              (SBAR (IN while)
                (S
                  (NP (NNS people))
                  (VP (VBD were)
                    (VP (VBG eating))))))))))
    (. .)))

nsubj(used-2, He-1)
root(ROOT-0, used-2)
advmod(designed-4, specially-3)
amod(bowls-5, designed-4)
dobj(used-2, bowls-5)
nsubj(refilled-7, bowls-5)
ref(bowls-5, that-6)
acl:relcl(bowls-5, refilled-7)
dobj(refilled-7, themselves-8)
case(soup-10, with-9)
nmod:with(refilled-7, soup-10)
mark(eating-14, while-11)
nsubj(eating-14, people-12)
aux(eating-14, were-13)
advcl(refilled-7, eating-14)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (DT these) (NNS people))
        (VP (VBD had)
          (NP
            (NP (DT no) (NN idea))
            (SBAR
              (S
                (NP (DT this))
                (VP (VBD was)
                  (VP (VBG happening)))))))))
    (, ,)
    (NP (PRP they))
    (ADVP (RB just))
    (VP (VBD kept)
      (S
        (VP (VBG eating)
          (PP (IN from)
            (NP (DT these) (JJ bottomless) (NN bowls))))))
    (. .)))

mark(had-4, Since-1)
det(people-3, these-2)
nsubj(had-4, people-3)
advcl(kept-13, had-4)
neg(idea-6, no-5)
dobj(had-4, idea-6)
nsubj(happening-9, this-7)
aux(happening-9, was-8)
acl:relcl(idea-6, happening-9)
nsubj(kept-13, they-11)
advmod(kept-13, just-12)
root(ROOT-0, kept-13)
xcomp(kept-13, eating-14)
case(bowls-18, from-15)
det(bowls-18, these-16)
amod(bowls-18, bottomless-17)
nmod:from(eating-14, bowls-18)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP didnt)
            (VP (VB feel)
              (ADJP (JJ full)
                (SBAR (IN because)
                  (S
                    (NP (PRP$ their) (NN bowls))
                    (VP (VBD were) (RB not)
                      (ADJP (JJ empty))))))
              (ADVP (RB yet)))))))
    (. .)))

nsubj(said-2, They-1)
root(ROOT-0, said-2)
nsubj(didnt-4, they-3)
ccomp(said-2, didnt-4)
xcomp(didnt-4, feel-5)
xcomp(feel-5, full-6)
mark(empty-12, because-7)
nmod:poss(bowls-9, their-8)
nsubj(empty-12, bowls-9)
cop(empty-12, were-10)
neg(empty-12, not-11)
ccomp(full-6, empty-12)
advmod(feel-5, yet-13)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS results))
      (PP (IN of)
        (NP (DT this) (NN research))))
    (VP (VBD showed)
      (SBAR (IN that)
        (S
          (NP
            (NP (NNS people))
            (PP (IN in)
              (NP (DT this) (NN experiment))))
          (VP (VBD ate)
            (S
              (NP (CD 73) (NN percent))
              (ADJP (RBR more) (JJ soup)
                (PP (IN than)
                  (ADJP (JJ normal)))))))))
    (. .)))

det(results-2, The-1)
nsubj(showed-6, results-2)
case(research-5, of-3)
det(research-5, this-4)
nmod:of(results-2, research-5)
root(ROOT-0, showed-6)
mark(ate-12, that-7)
nsubj(ate-12, people-8)
case(experiment-11, in-9)
det(experiment-11, this-10)
nmod:in(people-8, experiment-11)
ccomp(showed-6, ate-12)
nummod(percent-14, 73-13)
nsubj(soup-16, percent-14)
advmod(soup-16, more-15)
xcomp(ate-12, soup-16)
case(normal-18, than-17)
advcl:than(soup-16, normal-18)

(ROOT
  (S
    (S
      (VP (VBG Owing)
        (PP (TO to)
          (NP (DT these) (NNS results)))))
    (, ,)
    (NP (NNP Wansink))
    (VP (VBD concluded)
      (SBAR (IN that)
        (S
          (NP
            (NP (PRP$ its) (RB not) (JJ peoples) (NNS stomachs))
            (NP (DT that)))
          (VP (VBP decide)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBP have)
                  (VP
                    (VP (VBN eaten)
                      (S
                        (ADJP (RB enough))))
                    (, ,)
                    (CC but)
                    (VP
                      (NP (PRP$ their) (NNS eyes)))))))))))
    (. .)))

advcl(concluded-7, Owing-1)
case(results-4, to-2)
det(results-4, these-3)
nmod:to(Owing-1, results-4)
nsubj(concluded-7, Wansink-6)
root(ROOT-0, concluded-7)
mark(decide-14, that-8)
nmod:poss(stomachs-12, its-9)
neg(stomachs-12, not-10)
amod(stomachs-12, peoples-11)
nsubj(decide-14, stomachs-12)
dep(stomachs-12, that-13)
ccomp(concluded-7, decide-14)
advmod(eaten-18, when-15)
nsubj(eaten-18, they-16)
aux(eaten-18, have-17)
advcl(decide-14, eaten-18)
xcomp(eaten-18, enough-19)
cc(eaten-18, but-21)
nmod:poss(eyes-23, their-22)
advcl(decide-14, eyes-23)
conj:but(eaten-18, eyes-23)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN addition))
        (PP (TO to)
          (NP (NNS facts)
            (CC and)
            (NNS discoveries)))
        (SBAR (IN that)
          (S
            (NP (NNS people))
            (VP (VBP have)
              (ADVP (RB never))
              (VP (VBN heard)
                (PP (IN of))))))))
    (, ,)
    (NP (DT the) (NNP Ig) (NNP Nobel) (NNPS Prizes))
    (ADVP (RB also))
    (VP (VBP give)
      (NP
        (NP (NN attention))
        (PP (TO to)
          (NP (NN science)
            (CC and)
            (NN technology)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (NP
                (NP (DT a) (NN part))
                (PP (IN of)
                  (NP (PRP$ our) (JJ daily) (NNS lives)))))))))
    (. .)))

case(facts-4, In-1)
mwe(In-1, addition-2)
mwe(In-1, to-3)
nmod:in_addition_to(give-19, facts-4)
cc(facts-4, and-5)
conj:and(facts-4, discoveries-6)
nmod:in_addition_to(give-19, discoveries-6)
mark(heard-11, that-7)
nsubj(heard-11, people-8)
aux(heard-11, have-9)
neg(heard-11, never-10)
dep(facts-4, heard-11)
nmod(heard-11, of-12)
det(Prizes-17, the-14)
compound(Prizes-17, Ig-15)
compound(Prizes-17, Nobel-16)
nsubj(give-19, Prizes-17)
advmod(give-19, also-18)
root(ROOT-0, give-19)
dobj(give-19, attention-20)
nsubj(part-28, attention-20)
case(science-22, to-21)
nmod:to(attention-20, science-22)
cc(science-22, and-23)
nmod:to(attention-20, technology-24)
conj:and(science-22, technology-24)
ref(attention-20, that-25)
cop(part-28, is-26)
det(part-28, a-27)
acl:relcl(attention-20, part-28)
case(lives-32, of-29)
nmod:poss(lives-32, our-30)
amod(lives-32, daily-31)
nmod:of(part-28, lives-32)

(ROOT
  (S
    (VP (VB Take)
      (NP (DT the) (NN karaoke) (NN machine))
      (, ,)
      (PP (IN for)
        (NP (NN example))))
    (. .)))

root(ROOT-0, Take-1)
det(machine-4, the-2)
compound(machine-4, karaoke-3)
dobj(Take-1, machine-4)
case(example-7, for-6)
nmod:for(Take-1, example-7)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (VP (VBN born)
          (PP (IN in)
            (NP (CD 1971))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ its) (NN inventor) (NNP Daisuke) (NNP Inoue))
      (VP (VBD was)
        (VP (VBN given)
          (NP (DT an) (NNP Ig) (NNP Nobel) (NNP Peace) (NNP Prize))
          (PP (IN for)
            (S
              (VP (VBG creating)
                (NP (PRP it))))))))
    (. .)))

nsubjpass(born-3, It-1)
auxpass(born-3, was-2)
root(ROOT-0, born-3)
case(1971-5, in-4)
nmod:in(born-3, 1971-5)
cc(born-3, and-7)
nmod:poss(Inoue-11, its-8)
compound(Inoue-11, inventor-9)
compound(Inoue-11, Daisuke-10)
nsubjpass(given-13, Inoue-11)
auxpass(given-13, was-12)
conj:and(born-3, given-13)
det(Prize-18, an-14)
compound(Prize-18, Ig-15)
compound(Prize-18, Nobel-16)
compound(Prize-18, Peace-17)
dobj(given-13, Prize-18)
mark(creating-20, for-19)
advcl(given-13, creating-20)
dobj(creating-20, it-21)

(ROOT
  (S
    (NP (NNP Inoue))
    (VP (VBD was)
      (VP (VBN employed)
        (PP (IN at)
          (NP (DT a) (NN nightclub)))
        (, ,)
        (S
          (VP (VBG playing)
            (NP
              (NP (DT the) (NN piano))
              (PP (IN for)
                (NP
                  (NP (DT the) (NNS customers))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBD wanted)
                        (S
                          (VP (TO to)
                            (VP (VB sing))))))))))))))
    (. .)))

nsubjpass(employed-3, Inoue-1)
auxpass(employed-3, was-2)
root(ROOT-0, employed-3)
case(nightclub-6, at-4)
det(nightclub-6, a-5)
nmod:at(employed-3, nightclub-6)
xcomp(employed-3, playing-8)
det(piano-10, the-9)
dobj(playing-8, piano-10)
case(customers-13, for-11)
det(customers-13, the-12)
nmod:for(piano-10, customers-13)
nsubj(wanted-15, customers-13)
nsubj(sing-17, customers-13)
ref(customers-13, who-14)
acl:relcl(customers-13, wanted-15)
mark(sing-17, to-16)
xcomp(wanted-15, sing-17)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (PRP he))
        (VP (VBP wasnt)
          (ADJP (JJ skillful) (RB enough)
            (S
              (VP (TO to)
                (VP (VB play)
                  (NP (PDT all) (DT the) (NNS songs))
                  (ADVP (RB properly)))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD tried)
      (S
        (VP (TO to)
          (VP (VB think)
            (PP (IN of)
              (NP (DT some) (NNS ways)))
            (S
              (VP (TO to)
                (VP (VB clear)
                  (PRT (RP up))
                  (NP (DT the) (NN problem)))))))))
    (. .)))

mark(wasnt-3, Since-1)
nsubj(wasnt-3, he-2)
advcl(tried-14, wasnt-3)
xcomp(wasnt-3, skillful-4)
advmod(skillful-4, enough-5)
mark(play-7, to-6)
xcomp(skillful-4, play-7)
det:predet(songs-10, all-8)
det(songs-10, the-9)
dobj(play-7, songs-10)
advmod(play-7, properly-11)
nsubj(tried-14, he-13)
nsubj(think-16, he-13)
nsubj(clear-21, he-13)
root(ROOT-0, tried-14)
mark(think-16, to-15)
xcomp(tried-14, think-16)
case(ways-19, of-17)
det(ways-19, some-18)
nmod:of(think-16, ways-19)
mark(clear-21, to-20)
xcomp(think-16, clear-21)
compound:prt(clear-21, up-22)
det(problem-24, the-23)
dobj(clear-21, problem-24)

(ROOT
  (S
    (ADVP (RB Thus))
    (, ,)
    (NP (PRP he))
    (VP (VBD created)
      (NP (DT the) (NN karaoke) (NN machine)))
    (. .)))

advmod(created-4, Thus-1)
nsubj(created-4, he-3)
root(ROOT-0, created-4)
det(machine-7, the-5)
compound(machine-7, karaoke-6)
dobj(created-4, machine-7)

(ROOT
  (S
    (PP (TO To)
      (NP (NNP Inoues) (NN surprise)))
    (, ,)
    (NP (DT the) (NN machine))
    (VP (VBD caused)
      (NP (JJ considerable) (NNS changes))
      (PP (IN in)
        (NP (NN entertainment)))
      (ADVP (RB worldwide)))
    (. .)))

case(surprise-3, To-1)
compound(surprise-3, Inoues-2)
nmod:to(caused-7, surprise-3)
det(machine-6, the-5)
nsubj(caused-7, machine-6)
root(ROOT-0, caused-7)
amod(changes-9, considerable-8)
dobj(caused-7, changes-9)
case(entertainment-11, in-10)
nmod:in(caused-7, entertainment-11)
advmod(caused-7, worldwide-12)

(ROOT
  (S
    (NP (DT The) (NNP Ig) (NNP Nobel) (NNP Prize))
    (VP (VBD was)
      (VP (VBN awarded)
        (S
          (VP (TO to)
            (VP (VB Inoue)
              (NP (RB not) (RB only))
              (SBAR
                (SBAR (IN because)
                  (S
                    (NP (PRP$ his) (NN invention))
                    (VP (VBD was)
                      (ADJP (JJ entertaining)))))
                (, ,)
                (CC but)
                (SBAR
                  (ADVP (RB also))
                  (IN because)
                  (S
                    (NP (PRP it))
                    (VP (VBZ has)
                      (VP (VBN brought)
                        (PP (IN about)
                          (NP
                            (NP (DT an)
                              (ADJP (RB entirely) (JJ new))
                              (NN way))
                            (PP (IN for)
                              (NP (NNS people)))))
                        (S
                          (VP (TO to)
                            (VP (VB learn)
                              (S
                                (VP (TO to)
                                  (VP (VB tolerate)
                                    (NP (DT each) (JJ other))))))))))))))))))
    (. .)))

det(Prize-4, The-1)
compound(Prize-4, Ig-2)
compound(Prize-4, Nobel-3)
nsubjpass(awarded-6, Prize-4)
nsubj(Inoue-8, Prize-4)
auxpass(awarded-6, was-5)
root(ROOT-0, awarded-6)
mark(Inoue-8, to-7)
xcomp(awarded-6, Inoue-8)
neg(only-10, not-9)
dobj(Inoue-8, only-10)
mark(entertaining-15, because-11)
nmod:poss(invention-13, his-12)
nsubj(entertaining-15, invention-13)
cop(entertaining-15, was-14)
advcl(Inoue-8, entertaining-15)
cc(entertaining-15, but-17)
advmod(brought-22, also-18)
mark(brought-22, because-19)
nsubj(brought-22, it-20)
nsubj(learn-31, it-20)
nsubj(tolerate-33, it-20)
aux(brought-22, has-21)
advcl(Inoue-8, brought-22)
conj:and(entertaining-15, brought-22)
case(way-27, about-23)
det(way-27, an-24)
advmod(new-26, entirely-25)
amod(way-27, new-26)
nmod:about(brought-22, way-27)
case(people-29, for-28)
nmod:for(way-27, people-29)
mark(learn-31, to-30)
xcomp(brought-22, learn-31)
mark(tolerate-33, to-32)
xcomp(learn-31, tolerate-33)
det(other-35, each-34)
dobj(tolerate-33, other-35)

(ROOT
  (S
    (NP
      (NP (DT These) (NN research) (NNS results))
      (PP (IN of)
        (NP (NNP Ig) (NNP Nobel) (NNPS Prizes))))
    (VP (MD may) (RB not)
      (VP (VB be)
        (ADJP (RB as) (JJ great)
          (PP (IN as)
            (NP
              (NP (NNP Edisons) (JJ light) (NN bulb)
                (CC or)
                (NN Newtons) (NNS laws))
              (PP (IN of)
                (NP (NN motion))))))))
    (. .)))

det(results-3, These-1)
compound(results-3, research-2)
nsubj(great-12, results-3)
case(Prizes-7, of-4)
compound(Prizes-7, Ig-5)
compound(Prizes-7, Nobel-6)
nmod:of(results-3, Prizes-7)
aux(great-12, may-8)
neg(great-12, not-9)
cop(great-12, be-10)
advmod(great-12, as-11)
root(ROOT-0, great-12)
case(bulb-16, as-13)
compound(bulb-16, Edisons-14)
amod(bulb-16, light-15)
nmod:as(great-12, bulb-16)
cc(bulb-16, or-17)
compound(laws-19, Newtons-18)
nmod:as(great-12, laws-19)
conj:or(bulb-16, laws-19)
case(motion-21, of-20)
nmod:of(bulb-16, motion-21)

(ROOT
  (S
    (ADVP (RB Nevertheless))
    (, ,)
    (NP (PRP they))
    (VP (VBP do)
      (NP (NN show) (NNS peoples) (NN willingness))
      (S
        (VP
          (VP (TO to)
            (VP (VB take)
              (NP (NN action))))
          (CC and)
          (VP (TO to)
            (VP (VB try)
              (NP (JJ new) (NNS ways))
              (S
                (VP (TO to)
                  (VP (VB solve)
                    (NP (NNS problems))))))))))
    (. .)))

advmod(do-4, Nevertheless-1)
nsubj(do-4, they-3)
root(ROOT-0, do-4)
compound(willingness-7, show-5)
compound(willingness-7, peoples-6)
dobj(do-4, willingness-7)
mark(take-9, to-8)
dep(do-4, take-9)
dobj(take-9, action-10)
cc(take-9, and-11)
mark(try-13, to-12)
dep(do-4, try-13)
conj:and(take-9, try-13)
amod(ways-15, new-14)
dobj(try-13, ways-15)
mark(solve-17, to-16)
advcl(try-13, solve-17)
dobj(solve-17, problems-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (PP (RB not)
        (PP (IN about)
          (SBAR
            (WHADJP (WRB how) (JJ much))
            (S
              (NP (DT a) (NN person))
              (VP (VBZ accomplishes)))))
        (, ,)
        (CC but)
        (PP (IN about)
          (SBAR
            (WHADVP (WRB how))
            (S
              (ADVP (RB desperately))
              (NP (PRP he)
                (CC or)
                (PRP she))
              (VP (VBZ has)
                (VP (VBN tried)
                  (S
                    (VP (TO to)
                      (VP (VB achieve)
                        (NP (NN something))))))))))))
    (. .)))

nsubj(accomplishes-9, It-1)
cop(accomplishes-9, is-2)
neg(accomplishes-9, not-3)
mark(accomplishes-9, about-4)
advmod(much-6, how-5)
dep(accomplishes-9, much-6)
det(person-8, a-7)
nsubj(accomplishes-9, person-8)
root(ROOT-0, accomplishes-9)
cc(accomplishes-9, but-11)
mark(tried-19, about-12)
advmod(tried-19, how-13)
advmod(tried-19, desperately-14)
nsubj(tried-19, he-15)
nsubj(achieve-21, he-15)
cc(he-15, or-16)
conj:or(he-15, she-17)
nsubj(tried-19, she-17)
nsubj(achieve-21, she-17)
aux(tried-19, has-18)
conj:but(accomplishes-9, tried-19)
mark(achieve-21, to-20)
xcomp(tried-19, achieve-21)
dobj(achieve-21, something-22)

(ROOT
  (S
    (PP (VBG According)
      (PP (TO to)
        (NP (NNP Marc) (NNPS Abrahams))))
    (, ,)
    (NP
      (NP (DT a) (NN founder))
      (PP (IN of)
        (NP (DT the) (NNP Ig) (NNP Nobel) (NNPS Prizes))))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP win)
          (NP (CD one)))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ signifies)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (VP (VBN done)
              (NP (NN something)))))))
    (. .)))

case(Abrahams-4, According-1)
mwe(According-1, to-2)
compound(Abrahams-4, Marc-3)
nmod:according_to(signifies-20, Abrahams-4)
det(founder-7, a-6)
nsubj(signifies-20, founder-7)
case(Prizes-12, of-8)
det(Prizes-12, the-9)
compound(Prizes-12, Ig-10)
compound(Prizes-12, Nobel-11)
nmod:of(founder-7, Prizes-12)
mark(win-16, if-14)
nsubj(win-16, you-15)
advcl(signifies-20, win-16)
dobj(win-16, one-17)
nsubj(signifies-20, it-19)
root(ROOT-0, signifies-20)
mark(done-24, that-21)
nsubj(done-24, you-22)
aux(done-24, have-23)
ccomp(signifies-20, done-24)
dobj(done-24, something-25)

(ROOT
  (NP (NNP XPaul) (NNP Geraghty)))

compound(Geraghty-2, XPaul-1)
root(ROOT-0, Geraghty-2)

