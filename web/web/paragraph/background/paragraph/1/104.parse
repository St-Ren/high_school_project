(ROOT
  (NP
    (NP (NNP Unit) (CD 6))
    (NP (NNP Lets) (NNP Dig) (NNP In))
    (. !)))

root(ROOT-0, Unit-1)
nummod(Unit-1, 6-2)
compound(In-5, Lets-3)
compound(In-5, Dig-4)
dep(Unit-1, In-5)

(ROOT
  (S
    (NP (NNP Fried) (NNS insects))
    (VP (VBP are)
      (VP (VBN regarded)
        (PP (IN as)
          (NP
            (NP (DT a)
              (ADJP (JJ delicious))
              (NN dish))
            (PP (IN in)
              (NP
                (NP (DT some) (NNS parts))
                (PP (IN of)
                  (NP (DT the) (NN worldXjust)))))))
        (SBAR (IN as)
          (S
            (NP (NN roast) (NNS mice))
            (VP (VBP make)
              (NP
                (NP (DT a) (JJ perfect) (NN meal))
                (PP (IN in)
                  (NP (JJ other) (NNS parts)))))))))
    (. .)))

compound(insects-2, Fried-1)
nsubjpass(regarded-4, insects-2)
auxpass(regarded-4, are-3)
root(ROOT-0, regarded-4)
case(dish-8, as-5)
det(dish-8, a-6)
amod(dish-8, delicious-7)
nmod:as(regarded-4, dish-8)
case(parts-11, in-9)
det(parts-11, some-10)
nmod:in(dish-8, parts-11)
case(worldXjust-14, of-12)
det(worldXjust-14, the-13)
nmod:of(parts-11, worldXjust-14)
mark(make-18, as-15)
compound(mice-17, roast-16)
nsubj(make-18, mice-17)
advcl(regarded-4, make-18)
det(meal-21, a-19)
amod(meal-21, perfect-20)
dobj(make-18, meal-21)
case(parts-24, in-22)
amod(parts-24, other-23)
nmod:in(meal-21, parts-24)

(ROOT
  (S
    (NP
      (NP (JJ Many))
      (PP (IN of)
        (NP (PRP us))))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (VP (MD would)
      (VP (VB turn)
        (PRT (RP down))
        (NP (DT these) (NNS foods))))
    (. .)))

nsubj(turn-8, Many-1)
case(us-3, of-2)
nmod:of(Many-1, us-3)
advmod(turn-8, however-5)
aux(turn-8, would-7)
root(ROOT-0, turn-8)
compound:prt(turn-8, down-9)
det(foods-11, these-10)
dobj(turn-8, foods-11)

(ROOT
  (S
    (ADVP (RB Similarly))
    (, ,)
    (NP
      (NP (NN horse) (NN meat))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ is)
            (VP (VBN served)
              (PP (IN as)
                (NP
                  (NP (DT a) (NN delicacy))
                  (PP (IN in)
                    (NP
                      (NP (JJ certain) (NNS areas))
                      (PP (IN of)
                        (NP (NNP France))))))))))))
    (VP (MD might)
      (ADVP (RB never))
      (VP (VB be)
        (ADJP (JJ acceptable)
          (PP (TO to)
            (NP
              (NP (JJS most) (NNS Americans))
              (, ,) (RB even)
              (NP
                (NP (DT those))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP are)
                      (ADJP (RB so) (JJ hungry)
                        (SBAR (IN that)
                          (S
                            (NP (PRP they))
                            (VP (MD could)
                              (VP (VB eat)
                                (NP (DT a) (NN horse))))))))))))))))
    (. .)))

advmod(acceptable-19, Similarly-1)
compound(meat-4, horse-3)
nsubjpass(served-7, meat-4)
nsubj(acceptable-19, meat-4)
ref(meat-4, that-5)
auxpass(served-7, is-6)
acl:relcl(meat-4, served-7)
case(delicacy-10, as-8)
det(delicacy-10, a-9)
nmod:as(served-7, delicacy-10)
case(areas-13, in-11)
amod(areas-13, certain-12)
nmod:in(delicacy-10, areas-13)
case(France-15, of-14)
nmod:of(areas-13, France-15)
aux(acceptable-19, might-16)
neg(acceptable-19, never-17)
cop(acceptable-19, be-18)
root(ROOT-0, acceptable-19)
case(Americans-22, to-20)
amod(Americans-22, most-21)
nmod:to(acceptable-19, Americans-22)
advmod(Americans-22, even-24)
dep(Americans-22, those-25)
nsubj(hungry-29, those-25)
ref(those-25, who-26)
cop(hungry-29, are-27)
advmod(hungry-29, so-28)
acl:relcl(those-25, hungry-29)
mark(eat-33, that-30)
nsubj(eat-33, they-31)
aux(eat-33, could-32)
ccomp(hungry-29, eat-33)
det(horse-35, a-34)
dobj(eat-33, horse-35)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ makes)
        (SBAR
          (S
            (NP (NNS people))
            (VP (VBP choose)
              (NP (JJ certain) (NNS foods))
              (PP (IN over)
                (NP (NNS others)))
              (, ,)
              (ADVP (RB then)))))))
    (. ?)))

nsubj(makes-2, What-1)
root(ROOT-0, makes-2)
nsubj(choose-4, people-3)
ccomp(makes-2, choose-4)
amod(foods-6, certain-5)
dobj(choose-4, foods-6)
case(others-8, over-7)
nmod:over(choose-4, others-8)
advmod(choose-4, then-10)

(ROOT
  (S
    (PP (IN After)
      (NP
        (NP (NN digging))
        (PP (IN into)
          (NP (DT this) (NN issue)))))
    (, ,)
    (NP (NNS experts))
    (VP (VBP have)
      (VP (VBN discovered)
        (NP (JJ several) (NNS factors))))
    (. .)))

case(digging-2, After-1)
nmod:after(discovered-9, digging-2)
case(issue-5, into-3)
det(issue-5, this-4)
nmod:into(digging-2, issue-5)
nsubj(discovered-9, experts-7)
aux(discovered-9, have-8)
root(ROOT-0, discovered-9)
amod(factors-11, several-10)
dobj(discovered-9, factors-11)

(ROOT
  (S
    (PP (IN Among)
      (NP (DT these) (NNS factors)))
    (, ,)
    (NP (NNS customs)
      (CONJP (RB as) (RB well) (IN as))
      (NNS traditions))
    (VP (VBP are)
      (UCP
        (NP (DT the) (JJ major) (NNS ones))
        (, ,)
        (CC and)
        (SBAR (IN so)
          (S
            (VP (VBZ is)
              (NP (NN geography)))))))
    (. .)))

case(factors-3, Among-1)
det(factors-3, these-2)
nmod:among(ones-13, factors-3)
nsubj(ones-13, customs-5)
cc(customs-5, as-6)
mwe(as-6, well-7)
mwe(as-6, as-8)
conj:and(customs-5, traditions-9)
nsubj(ones-13, traditions-9)
cop(ones-13, are-10)
det(ones-13, the-11)
amod(ones-13, major-12)
root(ROOT-0, ones-13)
cc(ones-13, and-15)
mark(geography-18, so-16)
cop(geography-18, is-17)
conj:and(ones-13, geography-18)

(ROOT
  (S
    (NP (NNS Customs)
      (CC and)
      (NNS traditions))
    (VP (VBP play)
      (NP (JJ important) (NNS roles))
      (PP (IN in)
        (NP
          (NP (NNS peoples) (NNS choices))
          (PP (IN of)
            (NP (NNS foods))))))
    (. .)))

nsubj(play-4, Customs-1)
cc(Customs-1, and-2)
conj:and(Customs-1, traditions-3)
nsubj(play-4, traditions-3)
root(ROOT-0, play-4)
amod(roles-6, important-5)
dobj(play-4, roles-6)
case(choices-9, in-7)
compound(choices-9, peoples-8)
nmod:in(play-4, choices-9)
case(foods-11, of-10)
nmod:of(choices-9, foods-11)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Japan)))
    (, ,)
    (NP (NN lobster))
    (VP (VBZ is)
      (VP (VBN considered)
        (ADJP (JJ essential)
          (PP (IN for)
            (NP (DT a) (NN birthday) (NN meal))))
        (SBAR (IN because)
          (S
            (NP (DT a) (NN lobster))
            (VP (VBZ looks)
              (PP (IN like)
                (NP
                  (NP (DT an)
                    (ADJP (VBN aged))
                    (NN person))
                  (PP (IN with)
                    (NP (DT a) (JJ hunched) (NN back))))))))))
    (. .)))

case(Japan-2, In-1)
nmod:in(considered-6, Japan-2)
nsubjpass(considered-6, lobster-4)
auxpass(considered-6, is-5)
root(ROOT-0, considered-6)
xcomp(considered-6, essential-7)
case(meal-11, for-8)
det(meal-11, a-9)
compound(meal-11, birthday-10)
nmod:for(essential-7, meal-11)
mark(looks-15, because-12)
det(lobster-14, a-13)
nsubj(looks-15, lobster-14)
advcl(considered-6, looks-15)
case(person-19, like-16)
det(person-19, an-17)
amod(person-19, aged-18)
nmod:like(looks-15, person-19)
case(back-23, with-20)
det(back-23, a-21)
amod(back-23, hunched-22)
nmod:with(person-19, back-23)

(ROOT
  (S
    (NP
      (NP (DT Another) (NN example))
      (PP (IN of)
        (NP (DT this))))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN found)
          (PP (IN in)
            (NP (NNP Greece))))))
    (. .)))

det(example-2, Another-1)
nsubjpass(found-7, example-2)
case(this-4, of-3)
nmod:of(example-2, this-4)
aux(found-7, can-5)
auxpass(found-7, be-6)
root(ROOT-0, found-7)
case(Greece-9, in-8)
nmod:in(found-7, Greece-9)

(ROOT
  (S
    (PP (IN On)
      (NP (NNP New) (NNS Years)))
    (NP (NNP Day))
    (, ,)
    (NP (NNP Greeks))
    (VP (VBP bake)
      (NP
        (NP (DT a) (JJ special) (NN type))
        (PP (IN of)
          (NP
            (NP (NN bread))
            (VP (VBG containing)
              (NP
                (NP (DT a) (NN coin))
                (VP (VBN made)
                  (PP (IN of)
                    (NP (NN silver)
                      (CC or)
                      (NN gold))))))))))
    (. .)))

case(Years-3, On-1)
compound(Years-3, New-2)
nmod:on(bake-7, Years-3)
nmod:tmod(bake-7, Day-4)
nsubj(bake-7, Greeks-6)
root(ROOT-0, bake-7)
det(type-10, a-8)
amod(type-10, special-9)
dobj(bake-7, type-10)
case(bread-12, of-11)
nmod:of(type-10, bread-12)
acl(bread-12, containing-13)
det(coin-15, a-14)
dobj(containing-13, coin-15)
acl(coin-15, made-16)
case(silver-18, of-17)
nmod:of(made-16, silver-18)
cc(silver-18, or-19)
nmod:of(made-16, gold-20)
conj:or(silver-18, gold-20)

(ROOT
  (S
    (NP
      (NP (DT The) (NN person))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ finds)
            (NP
              (NP (DT the) (NN coin))
              (PP (IN in)
                (NP
                  (NP
                    (ADJP (PRP$ his)
                      (CC or)
                      (PRP$ her))
                    (NN piece))
                  (PP (IN of)
                    (NP (NN bread))))))))))
    (VP (MD will)
      (VP (VB be)
        (VP (VBN blessed)
          (PP (IN with)
            (NP
              (NP (JJ good) (NN luck))
              (PP (IN for)
                (NP (DT the) (VBG coming) (NN year))))))))
    (. .)))

det(person-2, The-1)
nsubj(finds-4, person-2)
nsubjpass(blessed-16, person-2)
ref(person-2, who-3)
acl:relcl(person-2, finds-4)
det(coin-6, the-5)
dobj(finds-4, coin-6)
case(piece-11, in-7)
amod(piece-11, his-8)
cc(his-8, or-9)
conj:or(his-8, her-10)
amod(piece-11, her-10)
nmod:in(coin-6, piece-11)
case(bread-13, of-12)
nmod:of(piece-11, bread-13)
aux(blessed-16, will-14)
auxpass(blessed-16, be-15)
root(ROOT-0, blessed-16)
case(luck-19, with-17)
amod(luck-19, good-18)
nmod:with(blessed-16, luck-19)
case(year-23, for-20)
det(year-23, the-21)
amod(year-23, coming-22)
nmod:for(luck-19, year-23)

(ROOT
  (S
    (ADVP (RB Likewise))
    (, ,)
    (PP (IN on)
      (NP (NNP Chinese) (NNP New) (NNP Years) (NNP Eve)))
    (, ,)
    (NP (JJ many) (NNPS Chinese))
    (VP (VBP gather)
      (PRT (RP around))
      (NP
        (NP (DT the) (NN table))
        (PP (IN with)
          (NP (PRP$ their) (NN family) (NNS members))))
      (S
        (VP (TO to)
          (VP (VB make)
            (CC and)
            (VB eat)
            (NP (NNS dumplings))))))
    (. .)))

advmod(gather-11, Likewise-1)
case(Eve-7, on-3)
compound(Eve-7, Chinese-4)
compound(Eve-7, New-5)
compound(Eve-7, Years-6)
nmod:on(gather-11, Eve-7)
amod(Chinese-10, many-9)
nsubj(gather-11, Chinese-10)
root(ROOT-0, gather-11)
compound:prt(gather-11, around-12)
det(table-14, the-13)
dobj(gather-11, table-14)
case(members-18, with-15)
nmod:poss(members-18, their-16)
compound(members-18, family-17)
nmod:with(table-14, members-18)
mark(make-20, to-19)
advcl(gather-11, make-20)
cc(make-20, and-21)
advcl(gather-11, eat-22)
conj:and(make-20, eat-22)
dobj(make-20, dumplings-23)

(ROOT
  (S
    (NP (DT A) (NN dumpling))
    (VP (VBZ looks)
      (PP (IN like)
        (NP
          (NP (DT a) (NN yuanbao))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD was)
                (NP
                  (NP (DT a) (NN type))
                  (PP (IN of)
                    (NP
                      (NP (NN money))
                      (VP (VBN used)
                        (PP (IN in)
                          (NP (JJ ancient) (NNP China)))))))))))))
    (. .)))

det(dumpling-2, A-1)
nsubj(looks-3, dumpling-2)
root(ROOT-0, looks-3)
case(yuanbao-6, like-4)
det(yuanbao-6, a-5)
nmod:like(looks-3, yuanbao-6)
nsubj(type-11, yuanbao-6)
ref(yuanbao-6, which-8)
cop(type-11, was-9)
det(type-11, a-10)
acl:relcl(yuanbao-6, type-11)
case(money-13, of-12)
nmod:of(type-11, money-13)
acl(money-13, used-14)
case(China-17, in-15)
amod(China-17, ancient-16)
nmod:in(used-14, China-17)

(ROOT
  (S
    (NP (DT A) (NN yuanbao))
    (VP (VBZ represents)
      (NP
        (NP (NN wealth)
          (CC and)
          (NN satisfaction))
        (PP (IN in)
          (NP (JJ Chinese) (NN culture)))))
    (. .)))

det(yuanbao-2, A-1)
nsubj(represents-3, yuanbao-2)
root(ROOT-0, represents-3)
dobj(represents-3, wealth-4)
cc(wealth-4, and-5)
dobj(represents-3, satisfaction-6)
conj:and(wealth-4, satisfaction-6)
case(culture-9, in-7)
amod(culture-9, Chinese-8)
nmod:in(wealth-4, culture-9)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (DT many))
    (VP (VBP believe)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (NN making) (NNS dumplings))
            (VP (VBZ is)
              (ADJP (JJ helpful)
                (PP (IN in)
                  (S
                    (VP (VBG making)
                      (NP (JJR more) (NN money)))))))))
        (, ,)
        (CC and)
        (SBAR (IN so)
          (S
            (VP (VBZ is)
              (VP (VBG eating)
                (NP (NNS dumplings))))))))
    (. .)))

advmod(believe-4, Therefore-1)
nsubj(believe-4, many-3)
root(ROOT-0, believe-4)
mark(helpful-9, that-5)
compound(dumplings-7, making-6)
nsubj(helpful-9, dumplings-7)
nsubj(eating-18, dumplings-7)
cop(helpful-9, is-8)
advcl(believe-4, helpful-9)
mark(making-11, in-10)
advcl(helpful-9, making-11)
amod(money-13, more-12)
dobj(making-11, money-13)
cc(helpful-9, and-15)
mark(eating-18, so-16)
aux(eating-18, is-17)
advcl(believe-4, eating-18)
conj:and(helpful-9, eating-18)
dobj(eating-18, dumplings-19)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT the) (NNS things))))
      (SBAR (IN that)
        (S
          (NP (JJ Chinese) (NNS people))
          (VP (VBP do)
            (S
              (VP (TO to)
                (VP (VB try)
                  (S
                    (VP (TO to)
                      (VP (VB insure)
                        (NP (DT a) (JJ prosperous) (NN year))))))))))))
    (. .)))

nsubj(one-3, This-1)
cop(one-3, is-2)
root(ROOT-0, one-3)
case(things-6, of-4)
det(things-6, the-5)
nmod:of(one-3, things-6)
mark(do-10, that-7)
amod(people-9, Chinese-8)
nsubj(do-10, people-9)
nsubj(try-12, people-9)
nsubj(insure-14, people-9)
ccomp(one-3, do-10)
mark(try-12, to-11)
xcomp(do-10, try-12)
mark(insure-14, to-13)
xcomp(try-12, insure-14)
det(year-17, a-15)
amod(year-17, prosperous-16)
nmod:tmod(insure-14, year-17)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN addition))
        (PP (TO to)
          (NP (NNS customs)
            (CC and)
            (NNS traditions)))))
    (, ,)
    (NP (NN geography))
    (VP (VBZ is)
      (NP
        (NP (DT another) (JJ important) (NN factor))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ influences)
              (NP (JJ peoples) (NN food) (NNS choices)))))))
    (. .)))

case(customs-4, In-1)
mwe(In-1, addition-2)
mwe(In-1, to-3)
nmod:in_addition_to(factor-12, customs-4)
cc(customs-4, and-5)
conj:and(customs-4, traditions-6)
nmod:in_addition_to(factor-12, traditions-6)
nsubj(factor-12, geography-8)
cop(factor-12, is-9)
det(factor-12, another-10)
amod(factor-12, important-11)
root(ROOT-0, factor-12)
nsubj(influences-14, factor-12)
ref(factor-12, that-13)
acl:relcl(factor-12, influences-14)
amod(choices-17, peoples-15)
compound(choices-17, food-16)
dobj(influences-14, choices-17)

(ROOT
  (S
    (VP (VB Take)
      (NP (NN millet))
      (, ,)
      (PP (IN for)
        (NP (NN example))))
    (. .)))

root(ROOT-0, Take-1)
dobj(Take-1, millet-2)
case(example-5, for-4)
nmod:for(Take-1, example-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (NNP Africas) (JJ main) (NNS crops))))
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ flourishes)
            (PP (IN in)
              (NP (JJ hot) (NNS climates)))))))
    (. .)))

nsubj(one-3, It-1)
cop(one-3, is-2)
root(ROOT-0, one-3)
case(crops-7, of-4)
compound(crops-7, Africas-5)
amod(crops-7, main-6)
nmod:of(one-3, crops-7)
mark(flourishes-10, because-8)
nsubj(flourishes-10, it-9)
advcl(one-3, flourishes-10)
case(climates-13, in-11)
amod(climates-13, hot-12)
nmod:in(flourishes-10, climates-13)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB exactly))
      (NP
        (NP (DT the) (NN reason))
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (NN millet))
            (VP (MD can)
              (ADVP (RB also))
              (VP (VB be)
                (VP (VBN found)
                  (PP (IN in)
                    (NP (JJ certain) (JJ Asian) (NNS countries)))
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (DT the) (JJ average) (NN temperature))
                      (VP (VBZ tends)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (ADJP (JJ high)))))))))))))))
    (. .)))

nsubj(reason-5, This-1)
cop(reason-5, is-2)
advmod(reason-5, exactly-3)
det(reason-5, the-4)
root(ROOT-0, reason-5)
advmod(found-11, why-6)
nsubjpass(found-11, millet-7)
aux(found-11, can-8)
advmod(found-11, also-9)
auxpass(found-11, be-10)
acl:relcl(reason-5, found-11)
case(countries-15, in-12)
amod(countries-15, certain-13)
amod(countries-15, Asian-14)
nmod:in(found-11, countries-15)
advmod(tends-20, where-16)
det(temperature-19, the-17)
amod(temperature-19, average-18)
nsubj(tends-20, temperature-19)
nsubj(high-23, temperature-19)
advcl(found-11, tends-20)
mark(high-23, to-21)
cop(high-23, be-22)
xcomp(tends-20, high-23)

(ROOT
  (S
    (PP (IN In)
      (NP (NN contrast)))
    (, ,)
    (NP
      (NP (DT the) (JJ cold) (NN climate) (NN close))
      (PP (TO to)
        (NP (DT the) (NNP North) (NNP Pole))))
    (VP (VBZ drives)
      (S
        (NP (DT the) (NNP Inuit))
        (VP (TO to)
          (VP (VB get)
            (NP
              (NP (DT the) (NN fat)
                (CC and)
                (NN protein))
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBP need)
                    (PP (IN from)
                      (NP
                        (NP (DT the) (NN blubber))
                        (PP (IN of)
                          (NP (NNS whales)))))))))))))
    (. .)))

case(contrast-2, In-1)
nmod:in(drives-12, contrast-2)
det(Pole-11, the-4)
amod(Pole-11, cold-5)
compound(Pole-11, climate-6)
case(Pole-11, close-7)
mwe(close-7, to-8)
det(Pole-11, the-9)
compound(Pole-11, North-10)
nmod:close_to(drives-12, Pole-11)
root(ROOT-0, drives-12)
det(Inuit-14, the-13)
dobj(drives-12, Inuit-14)
nsubj(get-16, Inuit-14)
mark(get-16, to-15)
xcomp(drives-12, get-16)
det(fat-18, the-17)
dobj(get-16, fat-18)
cc(fat-18, and-19)
dobj(get-16, protein-20)
conj:and(fat-18, protein-20)
nsubj(need-22, they-21)
acl:relcl(fat-18, need-22)
case(blubber-25, from-23)
det(blubber-25, the-24)
nmod:from(need-22, blubber-25)
case(whales-27, of-26)
nmod:of(blubber-25, whales-27)

(ROOT
  (S
    (NP (DT The) (NN potato))
    (VP (VBZ is)
      (NP (DT a) (JJ classic) (NN example))
      (, ,)
      (ADVP (RB too)))
    (. .)))

det(potato-2, The-1)
nsubj(example-6, potato-2)
cop(example-6, is-3)
det(example-6, a-4)
amod(example-6, classic-5)
root(ROOT-0, example-6)
advmod(example-6, too-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN staple))
        (PP (IN in)
          (NP
            (NP (JJ many) (NNS peoples) (NNS diets))
            (, ,) (RB especially)
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP live)
                    (PP (IN in)
                      (NP (JJ mountainous) (NNS areas)))
                    (PP (IN with)
                      (NP (JJ poor) (NN soil)))))))))))
    (. .)))

nsubj(staple-4, It-1)
cop(staple-4, is-2)
det(staple-4, a-3)
root(ROOT-0, staple-4)
case(diets-8, in-5)
amod(diets-8, many-6)
compound(diets-8, peoples-7)
nmod:in(staple-4, diets-8)
advmod(diets-8, especially-10)
dep(diets-8, those-11)
nsubj(live-13, those-11)
ref(those-11, who-12)
acl:relcl(those-11, live-13)
case(areas-16, in-14)
amod(areas-16, mountainous-15)
nmod:in(live-13, areas-16)
case(soil-19, with-17)
amod(soil-19, poor-18)
nmod:with(live-13, soil-19)

(ROOT
  (S
    (S
      (NP (DT The) (NN potato))
      (VP (VBZ adapts)
        (NP (PRP itself))
        (ADVP (RB well)
          (PP (TO to)
            (NP (JJ different) (NNS climates))))))
    (: ;)
    (S
      (ADVP (RB therefore))
      (, ,)
      (NP (PRP it))
      (VP
        (VP (VBZ is)
          (ADVP (RB often))
          (VP (VBN grown)
            (PP (IN in)
              (NP (JJ many) (JJ European) (NNS countries)))))
        (, ,)
        (CC and)
        (VP (VBZ is)
          (ADVP (RB even))
          (VP (VBN thought)
            (PP (IN of)
              (PP (IN as)
                (NP (JJ second) (NN bread))))))))
    (. .)))

det(potato-2, The-1)
nsubj(adapts-3, potato-2)
root(ROOT-0, adapts-3)
dobj(adapts-3, itself-4)
advmod(adapts-3, well-5)
case(climates-8, to-6)
amod(climates-8, different-7)
nmod:to(well-5, climates-8)
advmod(grown-15, therefore-10)
nsubjpass(grown-15, it-12)
nsubjpass(thought-24, it-12)
auxpass(grown-15, is-13)
advmod(grown-15, often-14)
parataxis(adapts-3, grown-15)
case(countries-19, in-16)
amod(countries-19, many-17)
amod(countries-19, European-18)
nmod:in(grown-15, countries-19)
cc(grown-15, and-21)
auxpass(thought-24, is-22)
advmod(thought-24, even-23)
parataxis(adapts-3, thought-24)
conj:and(grown-15, thought-24)
case(bread-28, of-25)
case(bread-28, as-26)
amod(bread-28, second-27)
nmod:as(thought-24, bread-28)

(ROOT
  (S
    (PP (IN In)
      (NP (JJS most) (NNS cases)))
    (, ,)
    (NP (NNS people))
    (VP (VBP choose)
      (S
        (VP
          (VP (TO to)
            (VP (VB eat)
              (NP (DT some) (NNS foods))))
          (CC and)
          (VP (RB not) (TO to)
            (VP (VB eat)
              (NP (JJ other) (NNS foods))
              (PP (IN for)
                (NP (JJ specific) (JJ understandable) (NNS reasons))))))))
    (. .)))

case(cases-3, In-1)
amod(cases-3, most-2)
nmod:in(choose-6, cases-3)
nsubj(choose-6, people-5)
root(ROOT-0, choose-6)
mark(eat-8, to-7)
ccomp(choose-6, eat-8)
det(foods-10, some-9)
dobj(eat-8, foods-10)
cc(eat-8, and-11)
neg(eat-14, not-12)
mark(eat-14, to-13)
ccomp(choose-6, eat-14)
conj:and(eat-8, eat-14)
amod(foods-16, other-15)
dobj(eat-14, foods-16)
case(reasons-20, for-17)
amod(reasons-20, specific-18)
amod(reasons-20, understandable-19)
nmod:for(eat-14, reasons-20)

(ROOT
  (S
    (ADVP (RB Actually))
    (, ,)
    (NP (JJ complex) (NNS factors))
    (ADVP (RB often))
    (VP (VBP lead)
      (PP (TO to)
        (NP (JJ different) (NN food) (NNS choices))))
    (. .)))

advmod(lead-6, Actually-1)
amod(factors-4, complex-3)
nsubj(lead-6, factors-4)
advmod(lead-6, often-5)
root(ROOT-0, lead-6)
case(choices-10, to-7)
amod(choices-10, different-8)
compound(choices-10, food-9)
nmod:to(lead-6, choices-10)

(ROOT
  (S
    (VP
      (VP (VB Keep)
        (NP
          (NP (DT this))
          (PP (IN in)
            (NP (NN mind))))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP have)
              (NP (DT the) (NN opportunity)
                (S
                  (VP (TO to)
                    (VP (VB visit)
                      (NP (NNP Sweden))))))))))
      (CC and)
      (VP (VB taste)
        (NP (JJ soured) (NN herring))))
    (. .)))

root(ROOT-0, Keep-1)
dobj(Keep-1, this-2)
case(mind-4, in-3)
nmod:in(this-2, mind-4)
mark(have-7, if-5)
nsubj(have-7, you-6)
advcl(Keep-1, have-7)
det(opportunity-9, the-8)
dobj(have-7, opportunity-9)
mark(visit-11, to-10)
acl(opportunity-9, visit-11)
dobj(visit-11, Sweden-12)
cc(Keep-1, and-13)
conj:and(Keep-1, taste-14)
amod(herring-16, soured-15)
dobj(taste-14, herring-16)

(ROOT
  (S
    (ADVP (RBR Better) (RB still))
    (, ,)
    (VP (VB try)
      (S
        (VP (TO to)
          (VP (VB find)
            (PRT (RP out))
            (NP
              (NP (DT the) (NN origin))
              (PP (IN of)
                (NP (DT this) (JJ Swedish) (NN specialty))))))))
    (. .)))

advmod(still-2, Better-1)
advmod(try-4, still-2)
root(ROOT-0, try-4)
mark(find-6, to-5)
xcomp(try-4, find-6)
compound:prt(find-6, out-7)
det(origin-9, the-8)
dobj(find-6, origin-9)
case(specialty-13, of-10)
det(specialty-13, this-11)
amod(specialty-13, Swedish-12)
nmod:of(origin-9, specialty-13)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP you))
        (VP (VBP discover)
          (SBAR
            (S
              (VP (MD may)
                (VP (VB keep)
                  (NP (PRP you))
                  (PP (IN from)
                    (S
                      (VP (VBG losing)
                        (NP (PRP$ your) (NN appetiteXif))))))))))))
    (NP (PRP you))
    (VP (VBP are)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB put)
              (PRT (RP up))
              (PP (IN with)
                (NP (PRP$ its) (JJ unique) (NN smell))))))))
    (. !)))

dobj(discover-3, What-1)
nsubj(discover-3, you-2)
advcl(able-13, discover-3)
aux(keep-5, may-4)
ccomp(discover-3, keep-5)
dobj(keep-5, you-6)
mark(losing-8, from-7)
advcl(keep-5, losing-8)
nmod:poss(appetiteXif-10, your-9)
dobj(losing-8, appetiteXif-10)
nsubj(able-13, you-11)
nsubj(put-15, you-11)
cop(able-13, are-12)
root(ROOT-0, able-13)
mark(put-15, to-14)
xcomp(able-13, put-15)
compound:prt(put-15, up-16)
case(smell-20, with-17)
nmod:poss(smell-20, its-18)
amod(smell-20, unique-19)
nmod:with(put-15, smell-20)

(ROOT
  (NP (NNP XGail) (NNP Sharpe) (. .)))

compound(Sharpe-2, XGail-1)
root(ROOT-0, Sharpe-2)

(ROOT
  (S
    (VP (VBN Adapted)
      (PP (IN from)
        (SBAR
          (WHADVP (WRB Why))
          (S
            (NP (PRP We))
            (VP (VB Eat)
              (SBAR
                (WHNP (WP What))
                (S
                  (NP (PRP We))
                  (VP (VB Eat)))))))))
    (. .)))

root(ROOT-0, Adapted-1)
mark(Eat-5, from-2)
advmod(Eat-5, Why-3)
nsubj(Eat-5, We-4)
advcl(Adapted-1, Eat-5)
dobj(Eat-8, What-6)
nsubj(Eat-8, We-7)
ccomp(Eat-5, Eat-8)

