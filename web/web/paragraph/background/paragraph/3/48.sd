(ROOT
  (NP
    (NP (NNS Biospheres))
    (PP (IN in)
      (NP (NNP Space)))
    (. .)))

root(ROOT-0, Biospheres-1)
case(Space-3, in-2)
nmod:in(Biospheres-1, Space-3)

(ROOT
  (SQ (MD Will)
    (NP (PRP it))
    (ADVP (RB ever))
    (VP (VB be)
      (ADJP (JJ possible)
        (PP (IN for)
          (NP (NNS people))))
      (S
        (VP (TO to)
          (VP (VB live)
            (PP (IN on)
              (NP
                (NP (JJ faraway) (NNS planets))
                (PP (JJ such) (IN as)
                  (NP (NNP Mars)))))))))
    (. ?)))

aux(possible-5, Will-1)
nsubj(possible-5, it-2)
nsubj(live-9, it-2)
advmod(possible-5, ever-3)
cop(possible-5, be-4)
root(ROOT-0, possible-5)
case(people-7, for-6)
nmod:for(possible-5, people-7)
mark(live-9, to-8)
xcomp(possible-5, live-9)
case(planets-12, on-10)
amod(planets-12, faraway-11)
nmod:on(live-9, planets-12)
case(Mars-15, such-13)
mwe(such-13, as-14)
nmod:such_as(planets-12, Mars-15)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN past)))
    (, ,)
    (NP
      (NP (NNS colonies))
      (PP (IN in)
        (NP (NN space))))
    (VP (VBD were)
      (ADJP (JJ possible))
      (PP
        (ADVP (RB only))
        (IN in)
        (NP (NN science) (NN fiction) (NNS stories))))
    (. .)))

case(past-3, In-1)
det(past-3, the-2)
nmod:in(possible-9, past-3)
nsubj(possible-9, colonies-5)
case(space-7, in-6)
nmod:in(colonies-5, space-7)
cop(possible-9, were-8)
root(ROOT-0, possible-9)
advmod(stories-14, only-10)
case(stories-14, in-11)
compound(stories-14, science-12)
compound(stories-14, fiction-13)
nmod:in(possible-9, stories-14)

(ROOT
  (S
    (NP (NN Today))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (PRP we))
    (VP (VBP are)
      (VP (VBG experimenting)
        (PP (IN with)
          (NP (NNS ways)))
        (S
          (VP (TO to)
            (VP (VB build)
              (NP (JJ real) (NN space) (NNS colonies)))))))
    (. .)))

nmod:tmod(experimenting-7, Today-1)
advmod(experimenting-7, however-3)
nsubj(experimenting-7, we-5)
nsubj(build-11, we-5)
aux(experimenting-7, are-6)
root(ROOT-0, experimenting-7)
case(ways-9, with-8)
nmod:with(experimenting-7, ways-9)
mark(build-11, to-10)
xcomp(experimenting-7, build-11)
amod(colonies-14, real-12)
compound(colonies-14, space-13)
dobj(build-11, colonies-14)

(ROOT
  (S
    (NP (JJ Many) (NNS scientists))
    (ADVP (RB actually))
    (VP (VBP consider)
      (S
        (NP (PRP it))
        (ADJP (JJ possible)))
      (SBAR (IN that)
        (S
          (NP (NNS people))
          (VP (MD will)
            (VP (VB live)
              (ADVP (RB far)
                (PP (IN from)
                  (ADVP
                    (NP (DT the) (NN Earth))
                    (RB sometime))))
              (PP (IN in)
                (NP (DT the) (NN future))))))))
    (. .)))

amod(scientists-2, Many-1)
nsubj(consider-4, scientists-2)
advmod(consider-4, actually-3)
root(ROOT-0, consider-4)
nsubj(possible-6, it-5)
xcomp(consider-4, possible-6)
mark(live-10, that-7)
nsubj(live-10, people-8)
aux(live-10, will-9)
ccomp(consider-4, live-10)
advmod(live-10, far-11)
case(sometime-15, from-12)
det(Earth-14, the-13)
nmod:npmod(sometime-15, Earth-14)
advcl:from(far-11, sometime-15)
case(future-18, in-16)
det(future-18, the-17)
nmod:in(live-10, future-18)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Environment) (NNP Research) (NNP Laboratory))
      (PP (IN at)
        (NP
          (NP (DT the) (NNP University))
          (PP (IN of)
            (NP (NNP Arizona))))))
    (VP (VBZ is)
      (NP
        (NP (CD one) (NN place))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ designs)
              (NP
                (NP (NNS biospheres))
                (PRN (-LRB- -LRB-)
                  (S
                    (S
                      (NP (NN bio))
                      (VP (VBZ means)
                        (NP (NN life))))
                    (, ,)
                    (CC and)
                    (S
                      (NP (DT a) (NN sphere))
                      (VP (VBZ is)
                        (NP
                          (NP (DT a) (NN circle))
                          (, ,)
                          (PP (IN like)
                            (NP (DT a) (NN ball)))))))
                  (-RRB- -RRB-))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (MD could)
                      (VP (VB be)
                        (VP (VBN used)
                          (PP (IN for)
                            (NP (NNS people)))
                          (S
                            (VP (TO to)
                              (VP (VB live)
                                (PP (IN on)
                                  (NP (JJ other) (NNS planets)))))))))))))))))
    (. .)))

det(Laboratory-4, The-1)
compound(Laboratory-4, Environment-2)
compound(Laboratory-4, Research-3)
nsubj(place-12, Laboratory-4)
case(University-7, at-5)
det(University-7, the-6)
nmod:at(Laboratory-4, University-7)
case(Arizona-9, of-8)
nmod:of(University-7, Arizona-9)
cop(place-12, is-10)
nummod(place-12, one-11)
root(ROOT-0, place-12)
nsubj(designs-14, place-12)
ref(place-12, that-13)
acl:relcl(place-12, designs-14)
dobj(designs-14, biospheres-15)
nsubjpass(used-35, biospheres-15)
nsubj(live-39, biospheres-15)
nsubj(means-18, bio-17)
dep(biospheres-15, means-18)
dobj(means-18, life-19)
cc(means-18, and-21)
det(sphere-23, a-22)
nsubj(circle-26, sphere-23)
cop(circle-26, is-24)
det(circle-26, a-25)
dep(biospheres-15, circle-26)
conj:and(means-18, circle-26)
case(ball-30, like-28)
det(ball-30, a-29)
nmod:like(circle-26, ball-30)
ref(biospheres-15, which-32)
aux(used-35, could-33)
auxpass(used-35, be-34)
acl:relcl(biospheres-15, used-35)
case(people-37, for-36)
nmod:for(used-35, people-37)
mark(live-39, to-38)
xcomp(used-35, live-39)
case(planets-42, on-40)
amod(planets-42, other-41)
nmod:on(live-39, planets-42)

(ROOT
  (S
    (NP (NNS Biospheres))
    (VP (VBP are)
      (NP
        (NP (JJ complete) (, ,) (JJ enclosed) (NNS environments))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NNS people))
            (VP (MD can)
              (VP
                (VP (VB be)
                  (VP (VBN born)))
                (, ,)
                (VP (VB live)
                  (NP (PRP$ their) (JJ whole) (NNS lives)))
                (, ,)
                (CC and)
                (VP (VB die)
                  (PP (IN without)
                    (S
                      (VP (VBG returning)
                        (PP (TO to)
                          (NP (DT the) (NN Earth)))))))))))))
    (. .)))

nsubj(environments-6, Biospheres-1)
cop(environments-6, are-2)
amod(environments-6, complete-3)
amod(environments-6, enclosed-5)
root(ROOT-0, environments-6)
advmod(born-11, where-7)
nsubjpass(born-11, people-8)
nsubj(live-13, people-8)
nsubj(die-19, people-8)
aux(born-11, can-9)
auxpass(born-11, be-10)
acl:relcl(environments-6, born-11)
acl:relcl(environments-6, live-13)
conj:and(born-11, live-13)
nmod:poss(lives-16, their-14)
amod(lives-16, whole-15)
dobj(live-13, lives-16)
cc(born-11, and-18)
acl:relcl(environments-6, die-19)
conj:and(born-11, die-19)
mark(returning-21, without-20)
advcl(die-19, returning-21)
case(Earth-24, to-22)
det(Earth-24, the-23)
nmod:to(returning-21, Earth-24)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB be)
          (ADJP (JJ successful)))))
    (, ,)
    (NP (DT a) (NN biosphere))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP
              (NP
                (NP (DT a) (JJ perfect) (NN balance))
                (PP (IN among)
                  (NP
                    (NP (NN everything))
                    (PP (IN within)
                      (NP (PRP it))))))
              (: --)
              (NP
                (NP (DT the) (NNS plants))
                (, ,)
                (NP (DT the) (NNS animals)))
              (PRN (-LRB- -LRB-)
                (PP (VBG including)
                  (NP (NNS humans)))
                (-RRB- -RRB-))
              (, ,)
              (CC and)
              (NP (DT the) (JJ chemical) (NNS elements)))))))
    (. .)))

mark(successful-3, To-1)
cop(successful-3, be-2)
advcl(has-7, successful-3)
det(biosphere-6, a-5)
nsubj(has-7, biosphere-6)
nsubj(have-9, biosphere-6)
root(ROOT-0, has-7)
mark(have-9, to-8)
xcomp(has-7, have-9)
det(balance-12, a-10)
amod(balance-12, perfect-11)
dobj(have-9, balance-12)
case(everything-14, among-13)
nmod:among(balance-12, everything-14)
case(it-16, within-15)
nmod:within(everything-14, it-16)
det(plants-19, the-18)
dobj(have-9, plants-19)
conj:and(balance-12, plants-19)
det(animals-22, the-21)
appos(plants-19, animals-22)
case(humans-25, including-24)
nmod:including(balance-12, humans-25)
cc(balance-12, and-28)
det(elements-31, the-29)
amod(elements-31, chemical-30)
dobj(have-9, elements-31)
conj:and(balance-12, elements-31)

(ROOT
  (S
    (NP
      (NP (NNS Specialists)
        (CC and)
        (NNS experts))
      (PP (IN from)
        (NP (JJ many) (JJ different) (NNS fields))))
    (VP (VBP are)
      (VP (VBN needed)
        (S
          (VP (TO to)
            (VP (VB work)
              (PP (IN on)
                (NP (DT these)
                  (ADJP (JJ complex)
                    (CC and)
                    (JJ time-consuming))
                  (NNS projects))))))))
    (. .)))

nsubjpass(needed-9, Specialists-1)
nsubj(work-11, Specialists-1)
cc(Specialists-1, and-2)
conj:and(Specialists-1, experts-3)
nsubjpass(needed-9, experts-3)
nsubj(work-11, experts-3)
case(fields-7, from-4)
amod(fields-7, many-5)
amod(fields-7, different-6)
nmod:from(Specialists-1, fields-7)
auxpass(needed-9, are-8)
root(ROOT-0, needed-9)
mark(work-11, to-10)
xcomp(needed-9, work-11)
case(projects-17, on-12)
det(projects-17, these-13)
amod(projects-17, complex-14)
cc(complex-14, and-15)
conj:and(complex-14, time-consuming-16)
amod(projects-17, time-consuming-16)
nmod:on(work-11, projects-17)

(ROOT
  (S
    (S
      (VP (VBG Building)
        (NP
          (NP (DT a) (NN greenhouse))
          (PP (IN for)
            (NP
              (NP (VBG growing) (NNS plants))
              (PP (IN in)
                (NP (NN winter))))))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ first) (NN step))
        (PP (IN in)
          (S
            (VP (VBG creating)
              (NP (DT a) (NN biosphere)))))))
    (. .)))

csubj(step-12, Building-1)
det(greenhouse-3, a-2)
dobj(Building-1, greenhouse-3)
case(plants-6, for-4)
amod(plants-6, growing-5)
nmod:for(greenhouse-3, plants-6)
case(winter-8, in-7)
nmod:in(plants-6, winter-8)
cop(step-12, is-9)
det(step-12, the-10)
amod(step-12, first-11)
root(ROOT-0, step-12)
mark(creating-14, in-13)
acl(step-12, creating-14)
det(biosphere-16, a-15)
dobj(creating-14, biosphere-16)

(ROOT
  (S
    (NP (DT A) (NN greenhouse))
    (VP (VBZ is)
      (NP
        (NP (DT a) (VBN closed) (NN environment))
        (PP (IN except)
          (PP (IN for)
            (NP
              (NP (DT the) (NN sun) (POS 's))
              (NN heat))))
        (VP (VBG entering)
          (PP (IN through)
            (NP (DT the) (NN glass)
              (CC or)
              (NN plastic))))))
    (. .)))

det(greenhouse-2, A-1)
nsubj(environment-6, greenhouse-2)
cop(environment-6, is-3)
det(environment-6, a-4)
amod(environment-6, closed-5)
root(ROOT-0, environment-6)
case(heat-12, except-7)
mwe(except-7, for-8)
det(sun-10, the-9)
nmod:poss(heat-12, sun-10)
case(sun-10, 's-11)
nmod:except_for(environment-6, heat-12)
acl(environment-6, entering-13)
case(glass-16, through-14)
det(glass-16, the-15)
nmod:through(entering-13, glass-16)
cc(glass-16, or-17)
nmod:through(entering-13, plastic-18)
conj:or(glass-16, plastic-18)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN water) (NN system))
          (PP (IN from)
            (NP (RB outside))))))
    (, ,)
    (CC and)
    (S
      (NP (NNS people))
      (VP
        (VP (VB bring)
          (PP (IN in)
            (NP
              (NP (NNS nutrients))
              (PP (IN for)
                (NP (DT the) (NNS plants))))))
        (CC and)
        (VP (VB take)
          (PRT (RP out))
          (NP (DT the) (NN waste) (NN material)))))
    (. .)))

case(course-2, Of-1)
nmod:of(is-5, course-2)
expl(is-5, there-4)
root(ROOT-0, is-5)
det(system-8, a-6)
compound(system-8, water-7)
nsubj(is-5, system-8)
case(outside-10, from-9)
nmod:from(system-8, outside-10)
cc(is-5, and-12)
nsubj(bring-14, people-13)
nsubj(take-21, people-13)
conj:and(is-5, bring-14)
case(nutrients-16, in-15)
nmod:in(bring-14, nutrients-16)
case(plants-19, for-17)
det(plants-19, the-18)
nmod:for(nutrients-16, plants-19)
cc(bring-14, and-20)
conj:and(is-5, take-21)
conj:and(bring-14, take-21)
compound:prt(take-21, out-22)
det(material-25, the-23)
compound(material-25, waste-24)
dobj(take-21, material-25)

(ROOT
  (S
    (NP
      (NP (DT A) (NN biosphere))
      (PP (IN in)
        (NP (NN space))))
    (VP (MD will)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (PRP$ its) (JJ own) (NN system))
              (S
                (VP (TO to)
                  (VP (VB provide)
                    (NP
                      (NP (NN water))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (MD can)
                            (VP (VB be)
                              (VP (VBN used)
                                (CC and)
                                (VBN reused)))))))))))))))
    (. .)))

det(biosphere-2, A-1)
nsubj(have-6, biosphere-2)
nsubj(have-8, biosphere-2)
case(space-4, in-3)
nmod:in(biosphere-2, space-4)
aux(have-6, will-5)
root(ROOT-0, have-6)
mark(have-8, to-7)
xcomp(have-6, have-8)
nmod:poss(system-11, its-9)
amod(system-11, own-10)
dobj(have-8, system-11)
mark(provide-13, to-12)
advcl(have-8, provide-13)
dobj(provide-13, water-14)
nsubjpass(used-18, water-14)
nsubjpass(reused-20, water-14)
ref(water-14, that-15)
aux(used-18, can-16)
auxpass(used-18, be-17)
acl:relcl(water-14, used-18)
cc(used-18, and-19)
acl:relcl(water-14, reused-20)
conj:and(used-18, reused-20)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD will)
      (VP (VB need)
        (S
          (NP (NNS bacteria)
            (CC or)
            (NN something))
          (ADJP (RB else))
          (S
            (VP (TO to)
              (VP (VB take)
                (NP
                  (NP (NN care))
                  (PP (IN of)
                    (NP (DT the) (NN waste))))))))))
    (. .)))

nsubj(need-3, It-1)
aux(need-3, will-2)
root(ROOT-0, need-3)
nsubj(take-9, bacteria-4)
cc(bacteria-4, or-5)
conj:or(bacteria-4, something-6)
nsubj(take-9, something-6)
dep(take-9, else-7)
mark(take-9, to-8)
xcomp(need-3, take-9)
dobj(take-9, care-10)
case(waste-13, of-11)
det(waste-13, the-12)
nmod:of(care-10, waste-13)

(ROOT
  (S
    (S
      (NP (NNP Everything))
      (VP (MD must)
        (VP (VB be)
          (VP
            (ADVP (RB perfectly))
            (VBN balanced)))))
    (, ,)
    (CC or)
    (S
      (NP (RB else) (DT the) (JJ whole) (NN system))
      (VP (MD will)
        (VP (VB break)
          (PRT (RP down)))))
    (. .)))

nsubjpass(balanced-5, Everything-1)
aux(balanced-5, must-2)
auxpass(balanced-5, be-3)
advmod(balanced-5, perfectly-4)
root(ROOT-0, balanced-5)
cc(balanced-5, or-7)
advmod(system-11, else-8)
det(system-11, the-9)
amod(system-11, whole-10)
nsubj(break-13, system-11)
aux(break-13, will-12)
conj:or(balanced-5, break-13)
compound:prt(break-13, down-14)

(ROOT
  (S
    (NP (DT The) (NN Earth))
    (ADVP (PRP itself))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS best) (NN example))
        (PP (IN of)
          (NP (DT a) (JJ real) (NN biosphere)))))
    (. .)))

det(Earth-2, The-1)
nsubj(example-7, Earth-2)
advmod(example-7, itself-3)
cop(example-7, is-4)
det(example-7, the-5)
amod(example-7, best-6)
root(ROOT-0, example-7)
case(biosphere-11, of-8)
det(biosphere-11, a-9)
amod(biosphere-11, real-10)
nmod:of(example-7, biosphere-11)

(ROOT
  (S
    (S
      (NP (NN Nothing) (JJ important))
      (VP (VBZ enters)
        (PP (IN except)
          (NP (NN sunlight)))))
    (, ,)
    (CC and)
    (S
      (NP (NN nothing))
      (VP (VBZ leaves)
        (PP (IN as)
          (NP
            (NP (NN waste))
            (PP (IN except)
              (NP (DT some) (NN heat)))))))
    (. .)))

nsubj(enters-3, Nothing-1)
amod(Nothing-1, important-2)
root(ROOT-0, enters-3)
case(sunlight-5, except-4)
nmod:except(enters-3, sunlight-5)
cc(enters-3, and-7)
nsubj(leaves-9, nothing-8)
conj:and(enters-3, leaves-9)
case(waste-11, as-10)
nmod:as(leaves-9, waste-11)
case(heat-14, except-12)
det(heat-14, some-13)
nmod:except(waste-11, heat-14)

(ROOT
  (S
    (NP
      (NP (NN Everything))
      (PP (IN in)
        (NP
          (NP (DT the) (NN Earth) (POS 's))
          (NN environment))))
    (VP (VBZ needs)
      (S
        (VP (TO to)
          (VP (VB be)
            (PP (IN in)
              (NP (NN balance)))))))
    (. .)))

nsubj(needs-7, Everything-1)
nsubj(balance-11, Everything-1)
case(environment-6, in-2)
det(Earth-4, the-3)
nmod:poss(environment-6, Earth-4)
case(Earth-4, 's-5)
nmod:in(Everything-1, environment-6)
root(ROOT-0, needs-7)
mark(balance-11, to-8)
cop(balance-11, be-9)
case(balance-11, in-10)
xcomp(needs-7, balance-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP destroy)
          (NP (DT that) (NN balance)))))
    (, ,)
    (NP (DT the) (NN system))
    (VP (MD will)
      (VP (VB break)
        (PRT (RP down))))
    (. .)))

mark(destroy-3, If-1)
nsubj(destroy-3, we-2)
advcl(break-10, destroy-3)
det(balance-5, that-4)
dobj(destroy-3, balance-5)
det(system-8, the-7)
nsubj(break-10, system-8)
aux(break-10, will-9)
root(ROOT-0, break-10)
compound:prt(break-10, down-11)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (JJ several) (NNS reasons))
        (PP (IN for)
          (NP (NN building) (NNS biospheres)))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(reasons-4, several-3)
nsubj(are-2, reasons-4)
case(biospheres-7, for-5)
compound(biospheres-7, building-6)
nmod:for(reasons-4, biospheres-7)

(ROOT
  (S
    (NP (CD One) (NN reason))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB help)
            (PRT (RP out))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP (DT an) (NN energy) (NN shortage)))))))))
    (. .)))

nummod(reason-2, One-1)
nsubj(is-3, reason-2)
nsubj(help-5, reason-2)
root(ROOT-0, is-3)
mark(help-5, to-4)
xcomp(is-3, help-5)
compound:prt(help-5, out-6)
advmod(is-9, when-7)
expl(is-9, there-8)
advcl(help-5, is-9)
det(shortage-12, an-10)
compound(shortage-12, energy-11)
nsubj(is-9, shortage-12)

(ROOT
  (S
    (NP
      (NP (NNP Dr.) (NNP Gerard) (NNP K.) (NNP O'Neill))
      (, ,)
      (NP
        (NP (DT a) (JJ famous) (NN physicist))
        (PP (IN from)
          (NP (NNP Princeton) (NNP University))))
      (, ,))
    (VP (VBZ has)
      (VP (VBN said)
        (SBAR (IN that)
          (S
            (PP (IN in)
              (NP (DT the) (NN future)))
            (NP (PRP we))
            (VP (MD will)
              (VP (VB have)
                (NP (NNS satellites))
                (PP (IN in)
                  (NP (NN space)))
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB produce)
                        (NP (JJ solar) (NN energy)))
                      (CC and)
                      (VP (VB send)
                        (NP (PRP it))
                        (PP (TO to)
                          (NP (DT the) (NN Earth)))))))))))))
    (. .)))

compound(O'Neill-4, Dr.-1)
compound(O'Neill-4, Gerard-2)
compound(O'Neill-4, K.-3)
nsubj(said-14, O'Neill-4)
det(physicist-8, a-6)
amod(physicist-8, famous-7)
appos(O'Neill-4, physicist-8)
case(University-11, from-9)
compound(University-11, Princeton-10)
nmod:from(physicist-8, University-11)
aux(said-14, has-13)
root(ROOT-0, said-14)
mark(have-21, that-15)
case(future-18, in-16)
det(future-18, the-17)
nmod:in(have-21, future-18)
nsubj(have-21, we-19)
aux(have-21, will-20)
ccomp(said-14, have-21)
dobj(have-21, satellites-22)
case(space-24, in-23)
nmod:in(have-21, space-24)
mark(produce-26, to-25)
advcl(have-21, produce-26)
amod(energy-28, solar-27)
dobj(produce-26, energy-28)
cc(produce-26, and-29)
advcl(have-21, send-30)
conj:and(produce-26, send-30)
dobj(send-30, it-31)
case(Earth-34, to-32)
det(Earth-34, the-33)
nmod:to(send-30, Earth-34)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD will)
        (VP (VB be)
          (ADJP (RB too) (JJ expensive)
            (S
              (VP (TO to)
                (VP
                  (ADVP (RB continually))
                  (VB send)
                  (NP (NNS people)
                    (CC and)
                    (NNS materials))
                  (PP (TO to)
                    (NP (DT the) (NNS satellites))))))))))
    (, ,) (IN so)
    (S
      (NP (NNS biospheres))
      (VP (MD will)
        (VP (VB be)
          (ADJP (JJ necessary)))))
    (. .)))

nsubj(expensive-5, It-1)
nsubj(send-8, It-1)
aux(expensive-5, will-2)
cop(expensive-5, be-3)
advmod(expensive-5, too-4)
root(ROOT-0, expensive-5)
mark(send-8, to-6)
advmod(send-8, continually-7)
xcomp(expensive-5, send-8)
dobj(send-8, people-9)
cc(people-9, and-10)
dobj(send-8, materials-11)
conj:and(people-9, materials-11)
case(satellites-14, to-12)
det(satellites-14, the-13)
nmod:to(send-8, satellites-14)
dep(expensive-5, so-16)
nsubj(necessary-20, biospheres-17)
aux(necessary-20, will-18)
cop(necessary-20, be-19)
parataxis(expensive-5, necessary-20)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ thinks)
      (SBAR (IN that)
        (S
          (NP
            (QP (CD ten) (CD thousand))
            (NNS people))
          (VP (MD could)
            (VP (VB live)
              (PP (IN in)
                (NP (DT a) (NN space) (NN colony)))
              (ADVP (RB sometime)
                (PP (IN in)
                  (NP (DT the) (NN future)))))))))
    (. .)))

nsubj(thinks-2, He-1)
root(ROOT-0, thinks-2)
mark(live-8, that-3)
compound(thousand-5, ten-4)
nummod(people-6, thousand-5)
nsubj(live-8, people-6)
aux(live-8, could-7)
ccomp(thinks-2, live-8)
case(colony-12, in-9)
det(colony-12, a-10)
compound(colony-12, space-11)
nmod:in(live-8, colony-12)
advmod(live-8, sometime-13)
case(future-16, in-14)
det(future-16, the-15)
nmod:in(sometime-13, future-16)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT another) (JJ interesting) (NN reason)
        (S
          (VP (TO to)
            (VP (VB build)
              (NP (NNS biospheres)))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(reason-5, another-3)
amod(reason-5, interesting-4)
nsubj(is-2, reason-5)
mark(build-7, to-6)
acl(reason-5, build-7)
dobj(build-7, biospheres-8)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can)
      (VP (VB use)
        (SBAR
          (SBAR
            (S
              (NP (PRP them))
              (VP (TO to)
                (VP (VB do)
                  (NP
                    (NP (DT all) (NNS kinds))
                    (PP (IN of)
                      (NP (NN research))))
                  (PP (IN about)
                    (NP (PRP$ our) (JJ own) (NN environment)))))))
          (CC and)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP it))
              (VP (VBZ works)))))))
    (. .)))

nsubj(use-3, We-1)
aux(use-3, can-2)
root(ROOT-0, use-3)
nsubj(do-6, them-4)
mark(do-6, to-5)
dep(use-3, do-6)
det(kinds-8, all-7)
dobj(do-6, kinds-8)
case(research-10, of-9)
nmod:of(kinds-8, research-10)
case(environment-14, about-11)
nmod:poss(environment-14, our-12)
amod(environment-14, own-13)
nmod:about(do-6, environment-14)
cc(do-6, and-15)
advmod(works-18, how-16)
nsubj(works-18, it-17)
dep(use-3, works-18)
conj:and(do-6, works-18)

(ROOT
  (S
    (PP (IN By)
      (S
        (VP (VBG studying)
          (NP (NNS biospheres)))))
    (, ,)
    (NP (PRP we))
    (VP (MD can)
      (VP (VB understand)
        (ADVP
          (ADVP (RBR better))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (MD will)
                (VP (VB happen)
                  (SBAR
                    (SBAR (IN as)
                      (S
                        (NP (NNS humans))
                        (VP (VBP destroy)
                          (NP (JJ tropical) (NNS forests)))))
                    (, ,)
                    (SBAR (IN as)
                      (S
                        (NP (PRP they))
                        (VP (VBP create)
                          (NP (JJR more) (NN carbon) (NN dioxide))
                          (PP (IN by)
                            (NP (NN burning) (NN fuel))))))
                    (, ,)
                    (CC and)
                    (SBAR (IN as)
                      (S
                        (NP (PRP they))
                        (VP (VB pollute)
                          (NP
                            (NP (DT the) (NNS oceans))
                            (CC and)
                            (NP (DT the) (NN air))))))))))))))
    (. .)))

mark(studying-2, By-1)
advcl(understand-7, studying-2)
dobj(studying-2, biospheres-3)
nsubj(understand-7, we-5)
aux(understand-7, can-6)
root(ROOT-0, understand-7)
advmod(understand-7, better-8)
nsubj(happen-11, what-9)
aux(happen-11, will-10)
advcl(better-8, happen-11)
mark(destroy-14, as-12)
nsubj(destroy-14, humans-13)
advcl(happen-11, destroy-14)
amod(forests-16, tropical-15)
dobj(destroy-14, forests-16)
mark(create-20, as-18)
nsubj(create-20, they-19)
advcl(happen-11, create-20)
conj:and(destroy-14, create-20)
amod(dioxide-23, more-21)
compound(dioxide-23, carbon-22)
dobj(create-20, dioxide-23)
case(fuel-26, by-24)
compound(fuel-26, burning-25)
nmod:by(create-20, fuel-26)
cc(destroy-14, and-28)
mark(pollute-31, as-29)
nsubj(pollute-31, they-30)
advcl(happen-11, pollute-31)
conj:and(destroy-14, pollute-31)
det(oceans-33, the-32)
dobj(pollute-31, oceans-33)
cc(oceans-33, and-34)
det(air-36, the-35)
dobj(pollute-31, air-36)
conj:and(oceans-33, air-36)

(ROOT
  (S
    (ADVP (IN So) (RB far))
    (, ,)
    (NP (RB only) (DT a) (JJ few) (JJ experimental) (NNS biospheres))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBN built)
          (PP (IN on)
            (NP (NNP Earth))))))
    (. .)))

case(far-2, So-1)
advmod(built-11, far-2)
advmod(biospheres-8, only-4)
det(biospheres-8, a-5)
amod(biospheres-8, few-6)
amod(biospheres-8, experimental-7)
nsubjpass(built-11, biospheres-8)
aux(built-11, have-9)
auxpass(built-11, been-10)
root(ROOT-0, built-11)
case(Earth-13, on-12)
nmod:on(built-11, Earth-13)

(ROOT
  (S
    (NP (PRP One))
    (VP (VBZ is)
      (PP (IN in)
        (NP
          (NP (NNP Oracle) (, ,) (NNP Arizona) (, ,))
          (PP (IN near)
            (NP
              (NP (DT the) (NNP University))
              (PP (IN of)
                (NP (NNP Arizona))))))))
    (. .)))

nsubj(Arizona-6, One-1)
cop(Arizona-6, is-2)
case(Arizona-6, in-3)
compound(Arizona-6, Oracle-4)
root(ROOT-0, Arizona-6)
case(University-10, near-8)
det(University-10, the-9)
nmod:near(Arizona-6, University-10)
case(Arizona-12, of-11)
nmod:of(University-10, Arizona-12)

(ROOT
  (S
    (PP (IN In)
      (NP (CD 1991)))
    (, ,)
    (NP
      (NP (CD four) (NNS men))
      (CC and)
      (NP (CD four) (NNS women)))
    (VP (VBD tried)
      (S
        (VP (TO to)
          (VP (VB live)
            (PP (IN inside)
              (NP (DT the) (NN biosphere)))
            (PP (IN without)
              (S
                (VP (VBG getting)
                  (NP (NN anything))
                  (PP (IN from) (NN outside)))))))))
    (. .)))

case(1991-2, In-1)
nmod:in(tried-9, 1991-2)
nummod(men-5, four-4)
nsubj(tried-9, men-5)
nsubj(live-11, men-5)
cc(men-5, and-6)
nummod(women-8, four-7)
conj:and(men-5, women-8)
nsubj(tried-9, women-8)
nsubj(live-11, women-8)
root(ROOT-0, tried-9)
mark(live-11, to-10)
xcomp(tried-9, live-11)
case(biosphere-14, inside-12)
det(biosphere-14, the-13)
nmod:inside(live-11, biosphere-14)
mark(getting-16, without-15)
advcl(live-11, getting-16)
dobj(getting-16, anything-17)
case(outside-19, from-18)
advcl:from(getting-16, outside-19)

(ROOT
  (S
    (PP (IN During)
      (NP (DT the) (NN experiment)))
    (, ,)
    (NP (NNS things))
    (VP (VBD got)
      (PRT (RP out))
      (PP (IN of)
        (NP (NN balance))))
    (. .)))

case(experiment-3, During-1)
det(experiment-3, the-2)
nmod:during(got-6, experiment-3)
nsubj(got-6, things-5)
root(ROOT-0, got-6)
compound:prt(got-6, out-7)
case(balance-9, of-8)
nmod:of(got-6, balance-9)

(ROOT
  (S
    (S
      (NP (NN Oxygen)
        (CC and)
        (NN carbon) (NN dioxide) (NNS levels))
      (VP (VBD fell)))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN crew))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB get)
              (NP (NN help)
                (CC and)
                (NNS supplies))
              (PP (IN from) (NN outside)))))))
    (. .)))

compound(levels-5, Oxygen-1)
cc(Oxygen-1, and-2)
conj:and(Oxygen-1, carbon-3)
compound(levels-5, carbon-3)
compound(levels-5, dioxide-4)
nsubj(fell-6, levels-5)
root(ROOT-0, fell-6)
cc(fell-6, and-8)
det(crew-10, the-9)
nsubj(had-11, crew-10)
nsubj(get-13, crew-10)
conj:and(fell-6, had-11)
mark(get-13, to-12)
xcomp(had-11, get-13)
dobj(get-13, help-14)
cc(help-14, and-15)
dobj(get-13, supplies-16)
conj:and(help-14, supplies-16)
case(outside-18, from-17)
advcl:from(get-13, outside-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NN space)))
    (, ,)
    (NP
      (NP (NNS people))
      (VP (VBG living)
        (PP (IN in)
          (NP (DT a) (NN biosphere)))))
    (VP (MD would) (RB not)
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB do)
                (NP (DT this))))))))
    (. .)))

case(space-2, In-1)
nmod:in(able-12, space-2)
nsubj(able-12, people-4)
nsubj(do-14, people-4)
acl(people-4, living-5)
case(biosphere-8, in-6)
det(biosphere-8, a-7)
nmod:in(living-5, biosphere-8)
aux(able-12, would-9)
neg(able-12, not-10)
cop(able-12, be-11)
root(ROOT-0, able-12)
mark(do-14, to-13)
xcomp(able-12, do-14)
dobj(do-14, this-15)

(ROOT
  (S
    (NP
      (NP (NNP Learning))
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (DT a) (NN biosphere))
          (VP (VBZ works)))))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the) (RBS most) (JJ significant) (NNS things))
            (SBAR
              (S
                (NP (PRP we))
                (VP (MD can)
                  (VP (VB do)))))))))
    (. .)))

nsubj(one-7, Learning-1)
advmod(works-5, how-2)
det(biosphere-4, a-3)
nsubj(works-5, biosphere-4)
dep(Learning-1, works-5)
cop(one-7, is-6)
root(ROOT-0, one-7)
case(things-12, of-8)
det(things-12, the-9)
advmod(things-12, most-10)
amod(things-12, significant-11)
nmod:of(one-7, things-12)
nsubj(do-15, we-13)
aux(do-15, can-14)
acl:relcl(things-12, do-15)

(ROOT
  (S
    (NP
      (NP (DT The) (NN information))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP get)
            (PP (IN from)
              (NP (NNS biospheres)))))))
    (VP (MD may)
      (VP (VB keep)
        (NP (PRP us))
        (PP (IN from)
          (S
            (VP (VBG destroying)
              (NP (PRP$ our) (JJ own) (NN environment)))))))
    (. .)))

det(information-2, The-1)
nsubj(keep-8, information-2)
nsubj(get-4, we-3)
acl:relcl(information-2, get-4)
case(biospheres-6, from-5)
nmod:from(get-4, biospheres-6)
aux(keep-8, may-7)
root(ROOT-0, keep-8)
dobj(keep-8, us-9)
mark(destroying-11, from-10)
advcl(keep-8, destroying-11)
nmod:poss(environment-14, our-12)
amod(environment-14, own-13)
dobj(destroying-11, environment-14)

(ROOT
  (S
    (NP (DT This) (NN information))
    (VP (MD will)
      (ADVP (RB also))
      (VP (VB help)
        (S
          (NP (PRP us))
          (VP (TO to)
            (VP (VB travel)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (ADVP (RB once))
                  (NP (JJ only) (NN science) (NN fiction))
                  (VP (MD could)
                    (VP (VB go))))))))))
    (. .)))

det(information-2, This-1)
nsubj(help-5, information-2)
aux(help-5, will-3)
advmod(help-5, also-4)
root(ROOT-0, help-5)
dobj(help-5, us-6)
nsubj(travel-8, us-6)
mark(travel-8, to-7)
xcomp(help-5, travel-8)
advmod(go-15, where-9)
advmod(go-15, once-10)
amod(fiction-13, only-11)
compound(fiction-13, science-12)
nsubj(go-15, fiction-13)
aux(go-15, could-14)
advcl(travel-8, go-15)

