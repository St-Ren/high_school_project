(ROOT
  (S
    (NP (JJ Cloud) (NN computing))
    (VP (VBZ is)
      (NP (DT the) (JJ hot) (JJ new) (NN buzzword))
      (PP (IN in)
        (NP (NN technology)))
      (NP (DT these) (NNS days)))
    (. .)))

amod(computing-2, Cloud-1)
nsubj(buzzword-7, computing-2)
cop(buzzword-7, is-3)
det(buzzword-7, the-4)
amod(buzzword-7, hot-5)
amod(buzzword-7, new-6)
root(ROOT-0, buzzword-7)
case(technology-9, in-8)
nmod:in(buzzword-7, technology-9)
det(days-11, these-10)
nmod:tmod(buzzword-7, days-11)

(ROOT
  (SBARQ (CC But)
    (WHNP (WP who))
    (SQ
      (VP (VBD knew)
        (SBAR
          (S
            (NP
              (NP (DT the) (NN killer) (NN app))
              (PP (IN for)
                (NP (DT this)
                  (ADJP (JJ brave))
                  (JJ new) (NN world))))
            (VP (MD would)
              (VP (VB be)
                (NP
                  (ADJP (RB plain) (JJ old))
                  (NN e-mail))))))))
    (. ?)))

cc(knew-3, But-1)
nsubj(knew-3, who-2)
root(ROOT-0, knew-3)
det(app-6, the-4)
compound(app-6, killer-5)
nsubj(e-mail-16, app-6)
case(world-11, for-7)
det(world-11, this-8)
amod(world-11, brave-9)
amod(world-11, new-10)
nmod:for(app-6, world-11)
aux(e-mail-16, would-12)
cop(e-mail-16, be-13)
advmod(old-15, plain-14)
amod(e-mail-16, old-15)
ccomp(knew-3, e-mail-16)

(ROOT
  (S (CC Yet)
    (NP (DT that))
    (VP (VBZ is)
      (ADVP (RB exactly))
      (NP
        (NP (NNS whats))
        (VP (VBG happening))))
    (. .)))

cc(whats-5, Yet-1)
nsubj(whats-5, that-2)
cop(whats-5, is-3)
advmod(whats-5, exactly-4)
root(ROOT-0, whats-5)
acl(whats-5, happening-6)

(ROOT
  (SINV
    (S
      (NP (NN E-mail))
      (VP (VBZ has)
        (VP (VBN become)
          (NP
            (NP (DT the) (JJS easiest) (NN workload))
            (PP (IN for)
              (NP (NNS customers))))
          (S
            (VP (TO to)
              (VP (VB move)
                (PP (TO to)
                  (NP (DT the) (NN cloud)))))))))
    (, ,)
    (VP (VBZ says))
    (NP
      (NP (NNP Chris) (NNP Capossela))
      (, ,)
      (NP
        (NP (DT a) (JJ senior) (NN vice) (NN president))
        (PP (IN at)
          (NP (NNP Microsoft)))))
    (. .)))

nsubj(become-3, E-mail-1)
aux(become-3, has-2)
ccomp(says-15, become-3)
det(workload-6, the-4)
amod(workload-6, easiest-5)
xcomp(become-3, workload-6)
case(customers-8, for-7)
nmod:for(workload-6, customers-8)
mark(move-10, to-9)
advcl(become-3, move-10)
case(cloud-13, to-11)
det(cloud-13, the-12)
nmod:to(move-10, cloud-13)
root(ROOT-0, says-15)
compound(Capossela-17, Chris-16)
nsubj(says-15, Capossela-17)
det(president-22, a-19)
amod(president-22, senior-20)
compound(president-22, vice-21)
appos(Capossela-17, president-22)
case(Microsoft-24, at-23)
nmod:at(president-22, Microsoft-24)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (DT this) (NN shift))
        (VP (VBZ means))))
    (, ,)
    (ADVP (RB basically))
    (, ,)
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (PP (RB instead) (IN of)
            (S
              (VP
                (VP (VBG buying)
                  (NP (PRP$ your) (JJ own) (NN computer) (NNS servers)))
                (CC and)
                (VP (VBG paying)
                  (NP
                    (NP (DT a) (NN team))
                    (PP (IN of)
                      (NP (NNS techies))))
                  (S
                    (VP (TO to)
                      (VP (VB run)
                        (NP (PRP$ your) (JJ e-mail) (NN system)))))))))
          (, ,)
          (NP (PRP you))
          (VP (MD can)
            (ADVP (RB instead))
            (VP (VB rent)
              (NP (NN e-mail))
              (PP (IN as)
                (NP (DT a) (NN service))))))))
    (. .)))

dobj(means-4, What-1)
det(shift-3, this-2)
nsubj(means-4, shift-3)
dep(is-8, means-4)
advmod(is-8, basically-6)
root(ROOT-0, is-8)
mark(rent-32, that-9)
mark(buying-12, instead-10)
mwe(instead-10, of-11)
advcl(rent-32, buying-12)
nmod:poss(servers-16, your-13)
amod(servers-16, own-14)
compound(servers-16, computer-15)
dobj(buying-12, servers-16)
cc(buying-12, and-17)
conj:and(buying-12, paying-18)
advcl(rent-32, paying-18)
det(team-20, a-19)
dobj(paying-18, team-20)
case(techies-22, of-21)
nmod:of(team-20, techies-22)
mark(run-24, to-23)
advcl(paying-18, run-24)
nmod:poss(system-27, your-25)
amod(system-27, e-mail-26)
dobj(run-24, system-27)
nsubj(rent-32, you-29)
aux(rent-32, can-30)
advmod(rent-32, instead-31)
ccomp(is-8, rent-32)
dobj(rent-32, e-mail-33)
case(service-36, as-34)
det(service-36, a-35)
nmod:as(rent-32, service-36)

(ROOT
  (S
    (VP (VB Microsoftwor)
      (S
        (NP (NNP Google)
          (CC or)
          (NNP IBMwruns))
        (NP
          (NP (PRP$ your) (JJ e-mail) (NN system))
          (PP (IN on)
            (NP (PRP$ its) (NNS servers))))
        (, ,)
        (S
          (VP (VBG taking)
            (NP
              (NP (NN care))
              (PP (IN of)
                (NP
                  (NP (NN security))
                  (, ,)
                  (NP (NN software) (NNS updates))
                  (, ,)
                  (CC and)
                  (NP (NNS bugs)))))))))
    (. .)))

root(ROOT-0, Microsoftwor-1)
nsubj(taking-12, Google-2)
cc(Google-2, or-3)
conj:or(Google-2, IBMwruns-4)
nsubj(taking-12, IBMwruns-4)
nmod:poss(system-7, your-5)
amod(system-7, e-mail-6)
dep(taking-12, system-7)
case(servers-10, on-8)
nmod:poss(servers-10, its-9)
nmod:on(system-7, servers-10)
xcomp(Microsoftwor-1, taking-12)
dobj(taking-12, care-13)
case(security-15, of-14)
nmod:of(care-13, security-15)
compound(updates-18, software-17)
nmod:of(care-13, updates-18)
conj:and(security-15, updates-18)
cc(security-15, and-20)
nmod:of(care-13, bugs-21)
conj:and(security-15, bugs-21)

(ROOT
  (S
    (NP
      (NP
        (NP (PRP$ Its)
          (NP
            (NP (DT the) (JJ first) (NN step))
            (PP (IN in)
              (NP
                (NP (DT a) (JJR larger) (NN shift))
                (WHPP (IN in)
                  (WHNP (WDT which)))))))
        (, ,)
        (PP (IN over)
          (NP (DT the) (JJ next) (NN decade)))
        (, ,))
      (PP (JJ much) (IN of)
        (NP
          (NP (DT the) (NN computing))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ takes)
                (NP
                  (NP (NN place))
                  (PP (IN in)
                    (NP (JJ corporate) (NN data) (NNS centers))))))))))
    (VP (MD will)
      (VP (VB migrate)
        (PRT (RP out))
        (PP (IN onto)
          (NP (DT the) (NN cloud)))))
    (. .)))

nmod:poss(step-4, Its-1)
det(step-4, the-2)
amod(step-4, first-3)
nsubj(migrate-29, step-4)
case(shift-8, in-5)
det(shift-8, a-6)
amod(shift-8, larger-7)
nmod:in(step-4, shift-8)
case(which-10, in-9)
nmod:in(shift-8, which-10)
case(decade-15, over-12)
det(decade-15, the-13)
amod(decade-15, next-14)
nmod:over(step-4, decade-15)
case(computing-20, much-17)
case(computing-20, of-18)
det(computing-20, the-19)
nmod:of(step-4, computing-20)
nsubj(takes-22, computing-20)
ref(computing-20, that-21)
acl:relcl(computing-20, takes-22)
dobj(takes-22, place-23)
case(centers-27, in-24)
amod(centers-27, corporate-25)
compound(centers-27, data-26)
nmod:in(place-23, centers-27)
aux(migrate-29, will-28)
root(ROOT-0, migrate-29)
compound:prt(migrate-29, out-30)
case(cloud-33, onto-31)
det(cloud-33, the-32)
nmod:onto(migrate-29, cloud-33)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP it))
        (VP (VBZ unfolds))))
    (, ,)
    (NP (PRP it))
    (VP (MD could)
      (VP (VB create)
        (NP (JJ new) (NNS winners)
          (CC and)
          (NNS losers))
        (PP (IN among)
          (NP (JJ big) (NN tech) (NNS companies)))))
    (. .)))

mark(unfolds-3, As-1)
nsubj(unfolds-3, it-2)
advcl(create-7, unfolds-3)
nsubj(create-7, it-5)
aux(create-7, could-6)
root(ROOT-0, create-7)
amod(winners-9, new-8)
dobj(create-7, winners-9)
cc(winners-9, and-10)
dobj(create-7, losers-11)
conj:and(winners-9, losers-11)
case(companies-15, among-12)
amod(companies-15, big-13)
compound(companies-15, tech-14)
nmod:among(create-7, companies-15)

(ROOT
  (S
    (NP (NNP Microsoft))
    (VP (VBZ reckons)
      (SBAR (IN that)
        (S
          (NP (DT the) (JJ average) (NN customer))
          (VP (MD can)
            (VP (VB save)
              (NP
                (NP (CD 30) (NN percent))
                (PP (IN on)
                  (NP (NN e-mail))))
              (PP (IN by)
                (S
                  (VP (VBG moving)
                    (PP (TO to)
                      (NP (DT the) (NN cloud)))))))))))
    (. .)))

nsubj(reckons-2, Microsoft-1)
root(ROOT-0, reckons-2)
mark(save-8, that-3)
det(customer-6, the-4)
amod(customer-6, average-5)
nsubj(save-8, customer-6)
aux(save-8, can-7)
ccomp(reckons-2, save-8)
nummod(percent-10, 30-9)
dobj(save-8, percent-10)
case(e-mail-12, on-11)
nmod:on(percent-10, e-mail-12)
mark(moving-14, by-13)
advcl(save-8, moving-14)
case(cloud-17, to-15)
det(cloud-17, the-16)
nmod:to(moving-14, cloud-17)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (NN company))
        (PP (IN with)
          (NP (CD 1,000) (NNS employees))))
      (VP (MD might)
        (VP (VB spend)
          (NP
            (NP
              (QP ($ $) (CD 2) (CD million)))
            (NP (DT a) (NN year)))
          (PP (IN on)
            (NP (NN e-mail))))))
    (, ,) (IN so)
    (S
      (NP (DT the) (NNS savings))
      (VP (VBP are)
        (ADJP (JJ significant))))
    (. .)))

det(company-2, A-1)
nsubj(spend-7, company-2)
case(employees-5, with-3)
nummod(employees-5, 1,000-4)
nmod:with(company-2, employees-5)
aux(spend-7, might-6)
root(ROOT-0, spend-7)
dobj(spend-7, $-8)
compound(million-10, 2-9)
nummod($-8, million-10)
det(year-12, a-11)
dep($-8, year-12)
case(e-mail-14, on-13)
nmod:on(spend-7, e-mail-14)
dep(spend-7, so-16)
det(savings-18, the-17)
nsubj(significant-20, savings-18)
cop(significant-20, are-19)
parataxis(spend-7, significant-20)

(ROOT
  (S
    (NP (NNS Proponents))
    (VP (VBP say)
      (SBAR
        (S
          (NP (JJ cloud-based) (NN mail))
          (VP (VBZ is) (RB not)
            (ADJP
              (ADJP (RB only) (JJR cheaper))
              (CC but)
              (ADJP (RB also) (JJR better)))))))
    (. .)))

nsubj(say-2, Proponents-1)
root(ROOT-0, say-2)
amod(mail-4, cloud-based-3)
nsubj(cheaper-8, mail-4)
nsubj(better-11, mail-4)
cop(cheaper-8, is-5)
neg(cheaper-8, not-6)
advmod(cheaper-8, only-7)
ccomp(say-2, cheaper-8)
cc(cheaper-8, but-9)
advmod(better-11, also-10)
ccomp(say-2, better-11)
conj:and(cheaper-8, better-11)

(ROOT
  (S
    (PP (IN With)
      (NP (JJ cloud-based) (NN mail)))
    (NP (DT each) (NN user))
    (VP (MD can)
      (VP
        (VP (VB have)
          (NP
            (NP (JJ huge) (NNS amounts))
            (PP (IN of)
              (NP (NN storage) (NN spacew) (NNS gigabytes)))))
        (CC or)
        (VP (VB morewwhile)
          (NP
            (NP (DT a) (JJ traditional) (JJ on-premises) (JJ e-mail) (NN system))
            (SBAR
              (S
                (VP (MD might)
                  (VP (VB allow)
                    (NP (NNS users))
                    (NP
                      (QP (RB only) (CD 100))
                      (NNS megabytes))))))))))
    (. .)))

case(mail-3, With-1)
amod(mail-3, cloud-based-2)
nmod:with(have-7, mail-3)
det(user-5, each-4)
nsubj(have-7, user-5)
nsubj(morewwhile-15, user-5)
aux(have-7, can-6)
root(ROOT-0, have-7)
amod(amounts-9, huge-8)
dobj(have-7, amounts-9)
case(gigabytes-13, of-10)
compound(gigabytes-13, storage-11)
compound(gigabytes-13, spacew-12)
nmod:of(amounts-9, gigabytes-13)
cc(have-7, or-14)
conj:or(have-7, morewwhile-15)
det(system-20, a-16)
amod(system-20, traditional-17)
amod(system-20, on-premises-18)
amod(system-20, e-mail-19)
dobj(morewwhile-15, system-20)
aux(allow-22, might-21)
acl:relcl(system-20, allow-22)
iobj(allow-22, users-23)
advmod(100-25, only-24)
nummod(megabytes-26, 100-25)
dobj(allow-22, megabytes-26)

(ROOT
  (S
    (NP
      (NP (NNP Rexel))
      (, ,)
      (NP
        (NP (DT a) (JJ French) (NN distributor))
        (PP (IN of)
          (NP (JJ electrical) (NN equipment))))
      (, ,))
    (VP (VBZ expects)
      (S
        (VP (TO to)
          (VP (VB cut)
            (NP (PRP$ its) (JJ e-mail) (NNS costs))
            (PP (IN by)
              (NP (CD one) (NN third)))
            (PP (IN by)
              (S
                (VP (VBG moving)
                  (NP (PRP$ its) (NNS employees))
                  (PP (IN from)
                    (NP
                      (NP (DT a) (NN hodgepodge))
                      (PP (IN of)
                        (NP (NNS systems)))))
                  (PP (TO to)
                    (NP
                      (NP (DT a) (JJ single) (JJ cloud-based) (NN one))
                      (, ,)
                      (VP (VBN operated)
                        (PP (IN by)
                          (NP (NNP Microsoft)))))))))))))
    (. .)))

nsubj(expects-10, Rexel-1)
nsubj(cut-12, Rexel-1)
det(distributor-5, a-3)
amod(distributor-5, French-4)
appos(Rexel-1, distributor-5)
case(equipment-8, of-6)
amod(equipment-8, electrical-7)
nmod:of(distributor-5, equipment-8)
root(ROOT-0, expects-10)
mark(cut-12, to-11)
xcomp(expects-10, cut-12)
nmod:poss(costs-15, its-13)
amod(costs-15, e-mail-14)
dobj(cut-12, costs-15)
case(third-18, by-16)
nummod(third-18, one-17)
nmod:by(cut-12, third-18)
mark(moving-20, by-19)
advcl(cut-12, moving-20)
nmod:poss(employees-22, its-21)
dobj(moving-20, employees-22)
case(hodgepodge-25, from-23)
det(hodgepodge-25, a-24)
nmod:from(moving-20, hodgepodge-25)
case(systems-27, of-26)
nmod:of(hodgepodge-25, systems-27)
case(one-32, to-28)
det(one-32, a-29)
amod(one-32, single-30)
amod(one-32, cloud-based-31)
nmod:to(moving-20, one-32)
acl(one-32, operated-34)
case(Microsoft-36, by-35)
nmod:by(operated-34, Microsoft-36)

(ROOT
  (S
    (ADVP (IN So) (RB far))
    (NP (NNP Rexel))
    (VP
      (VP (VBZ has)
        (VP (VBN shifted)
          (NP
            (NP (CD 4,000))
            (PP (IN of)
              (NP (PRP$ its) (CD 28,000) (NNS employees))))
          (PP (TO to)
            (NP
              (NP (DT a) (NN cloud) (NN version))
              (PP (IN of)
                (NP (NNP Microsoft) (NNP Exchange)))))))
      (CC and)
      (VP (VBZ plans)
        (S
          (VP (TO to)
            (VP (VB get)
              (NP
                (NP (NN everyone))
                (VP (VBN moved)
                  (PRT (RP over))
                  (ADVP
                    (ADVP (RB as) (RB soon))
                    (PP (IN as)
                      (ADJP (JJ possible)))))))))))
    (. .)))

case(far-2, So-1)
advmod(shifted-5, far-2)
nsubj(shifted-5, Rexel-3)
nsubj(plans-19, Rexel-3)
nsubj(get-21, Rexel-3)
aux(shifted-5, has-4)
root(ROOT-0, shifted-5)
dobj(shifted-5, 4,000-6)
case(employees-10, of-7)
nmod:poss(employees-10, its-8)
nummod(employees-10, 28,000-9)
nmod:of(4,000-6, employees-10)
case(version-14, to-11)
det(version-14, a-12)
compound(version-14, cloud-13)
nmod:to(shifted-5, version-14)
case(Exchange-17, of-15)
compound(Exchange-17, Microsoft-16)
nmod:of(version-14, Exchange-17)
cc(shifted-5, and-18)
conj:and(shifted-5, plans-19)
mark(get-21, to-20)
xcomp(plans-19, get-21)
dobj(get-21, everyone-22)
acl(everyone-22, moved-23)
compound:prt(moved-23, over-24)
advmod(soon-26, as-25)
advmod(moved-23, soon-26)
case(possible-28, as-27)
advcl:as(soon-26, possible-28)

(ROOT
  (S
    (S
      (NP (NNP Microsoft))
      (VP (VBP wasnt)
        (NP (DT the) (JJ first))
        (S
          (VP (TO to)
            (VP (VB offer)
              (NP (JJ cloud-based) (NN mail))
              (PP (TO to)
                (NP (JJ corporate) (NNS customers))))))))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB play)
              (NP (NN catch-up))
              (PP (IN with)
                (NP (NNP Google))))))))
    (. .)))

nsubj(wasnt-2, Microsoft-1)
root(ROOT-0, wasnt-2)
det(first-4, the-3)
dobj(wasnt-2, first-4)
mark(offer-6, to-5)
advcl(wasnt-2, offer-6)
amod(mail-8, cloud-based-7)
dobj(offer-6, mail-8)
case(customers-11, to-9)
amod(customers-11, corporate-10)
nmod:to(offer-6, customers-11)
nsubj(had-14, it-13)
nsubj(play-16, it-13)
parataxis(wasnt-2, had-14)
mark(play-16, to-15)
xcomp(had-14, play-16)
dobj(play-16, catch-up-17)
case(Google-19, with-18)
nmod:with(play-16, Google-19)

(ROOT
  (S (CC But)
    (PP (IN for)
      (S
        (NP (NNS companies))
        (ADVP (RB already))
        (VP (VBG using)
          (NP (NNP Exchange)))))
    (, ,)
    (NP (PRP$ its))
    (VP
      (ADVP (RB often) (JJR easier))
      (S
        (VP (TO to)
          (VP (VB move)
            (NP (NNS employees))
            (PP (TO to)
              (NP
                (NP (DT the) (NN cloud) (NN version))
                (PP (IN of)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP they))
                      (ADVP (RB already))
                      (VP (VBP know)
                        (SBAR (IN than)
                          (S
                            (VP (TO to)
                              (VP (VB switch)
                                (NP (PRP them))
                                (PRT (RP over))
                                (PP (TO to)
                                  (NP (DT a) (JJ new) (NN system)))))))))))))))))
    (. .)))

cc(easier-10, But-1)
mark(using-5, for-2)
nsubj(using-5, companies-3)
advmod(using-5, already-4)
advcl(easier-10, using-5)
dobj(using-5, Exchange-6)
nsubj(easier-10, its-8)
nsubj(move-12, its-8)
advmod(easier-10, often-9)
root(ROOT-0, easier-10)
mark(move-12, to-11)
xcomp(easier-10, move-12)
dobj(move-12, employees-13)
case(version-17, to-14)
det(version-17, the-15)
compound(version-17, cloud-16)
nmod:to(move-12, version-17)
mark(know-22, of-18)
dobj(know-22, what-19)
nsubj(know-22, they-20)
advmod(know-22, already-21)
acl(version-17, know-22)
mark(switch-25, than-23)
mark(switch-25, to-24)
advcl(know-22, switch-25)
dobj(switch-25, them-26)
compound:prt(switch-25, over-27)
case(system-31, to-28)
det(system-31, a-29)
amod(system-31, new-30)
nmod:to(switch-25, system-31)

(ROOT
  (S
    (NP
      (NP (NNP Serena))
      (, ,)
      (NP
        (NP (DT a) (NN software) (NN company))
        (PP (IN in)
          (NP (NNP California))))
      (, ,))
    (NP (JJ last) (NN year))
    (VP
      (VP (VBD went)
        (PP (IN from)
          (NP (JJ on-premises) (NNP Exchange)))
        (PP (TO to)
          (NP (NNP Googles) (NNP Gmail))))
      (CC but)
      (VP (VBZ is)
        (VP (VBG migrating)
          (ADVP (RB again))
          (, ,)
          (PP (TO to)
            (NP
              (NP (DT the) (JJ cloud-based) (NN version))
              (PP (IN of)
                (NP (NNP Exchange)))))
          (, ,)
          (SBAR
            (ADVP (RB mostly))
            (IN because)
            (S
              (NP (PRP$ its) (NNS employees))
              (VP (VBP are)
                (ADJP (RBR more) (JJ familiar)
                  (PP (IN with)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(went-11, Serena-1)
nsubj(migrating-20, Serena-1)
det(company-5, a-3)
compound(company-5, software-4)
appos(Serena-1, company-5)
case(California-7, in-6)
nmod:in(company-5, California-7)
amod(year-10, last-9)
nsubj(went-11, year-10)
root(ROOT-0, went-11)
case(Exchange-14, from-12)
amod(Exchange-14, on-premises-13)
nmod:from(went-11, Exchange-14)
case(Gmail-17, to-15)
compound(Gmail-17, Googles-16)
nmod:to(went-11, Gmail-17)
cc(went-11, but-18)
aux(migrating-20, is-19)
conj:but(went-11, migrating-20)
advmod(migrating-20, again-21)
case(version-26, to-23)
det(version-26, the-24)
amod(version-26, cloud-based-25)
nmod:to(migrating-20, version-26)
case(Exchange-28, of-27)
nmod:of(version-26, Exchange-28)
advmod(familiar-36, mostly-30)
mark(familiar-36, because-31)
nmod:poss(employees-33, its-32)
nsubj(familiar-36, employees-33)
cop(familiar-36, are-34)
advmod(familiar-36, more-35)
advcl(migrating-20, familiar-36)
case(it-38, with-37)
nmod:with(familiar-36, it-38)

(ROOT
  (SINV
    (S
      (S
        (VP (VBG Making)
          (NP (DT the) (NN change))
          (PP (TO to)
            (NP (NNP Google)))))
      (VP (VBD was)
        (VP (VBN gut-wrenching)
          (PP (IN for)
            (NP
              (NP (DT a) (NN lot))
              (PP (IN of)
                (NP (NNS people))))))))
    (, ,)
    (VP (VBZ says))
    (NP
      (NP (NNP Ron) (NNP Brister))
      (, ,)
      (NP
        (NP (NNP Serenas) (NN director))
        (PP (IN of)
          (NP (PRP IT)))))
    (. .)))

csubjpass(gut-wrenching-7, Making-1)
det(change-3, the-2)
dobj(Making-1, change-3)
case(Google-5, to-4)
nmod:to(Making-1, Google-5)
auxpass(gut-wrenching-7, was-6)
ccomp(says-14, gut-wrenching-7)
case(lot-10, for-8)
det(lot-10, a-9)
nmod:for(gut-wrenching-7, lot-10)
case(people-12, of-11)
nmod:of(lot-10, people-12)
root(ROOT-0, says-14)
compound(Brister-16, Ron-15)
nsubj(says-14, Brister-16)
compound(director-19, Serenas-18)
appos(Brister-16, director-19)
case(IT-21, of-20)
nmod:of(director-19, IT-21)

(ROOT
  (S
    (NP (NNS People))
    (ADVP (RB just))
    (VP (VBP werent)
      (S
        (VP (VBG getting)
          (VP (VBN used)
            (PP (TO to)
              (NP (PRP it)))))))
    (. .)))

nsubj(werent-3, People-1)
advmod(werent-3, just-2)
root(ROOT-0, werent-3)
auxpass(used-5, getting-4)
xcomp(werent-3, used-5)
case(it-7, to-6)
nmod:to(used-5, it-7)

(ROOT
  (S
    (NP (NNP Microsoft))
    (VP (VBZ sees)
      (NP (DT the) (NN cloud))
      (PP (IN as)
        (NP
          (NP (DT a) (JJ competitive) (NN weapon))
          (, ,)
          (NP (DT a) (NN chance)
            (S
              (VP (TO to)
                (VP (VB pull)
                  (NP (NNS customers))
                  (PRT (RP away))
                  (PP (IN from)
                    (NP
                      (NP (NNS rivals))
                      (PP (IN like)
                        (NP (NNP IBM)))
                      (, ,)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ sells)
                            (SBAR
                              (S
                                (NP (DT an) (JJ on-premises) (NN messaging) (NN system))
                                (VP (VBD called)
                                  (NP (NNS Notes)))))))))))))))))
    (. .)))

nsubj(sees-2, Microsoft-1)
root(ROOT-0, sees-2)
det(cloud-4, the-3)
dobj(sees-2, cloud-4)
case(weapon-8, as-5)
det(weapon-8, a-6)
amod(weapon-8, competitive-7)
nmod:as(sees-2, weapon-8)
det(chance-11, a-10)
appos(weapon-8, chance-11)
mark(pull-13, to-12)
acl(chance-11, pull-13)
dobj(pull-13, customers-14)
compound:prt(pull-13, away-15)
case(rivals-17, from-16)
nmod:from(pull-13, rivals-17)
nsubj(sells-22, rivals-17)
case(IBM-19, like-18)
nmod:like(rivals-17, IBM-19)
ref(rivals-17, which-21)
acl:relcl(rivals-17, sells-22)
det(system-26, an-23)
amod(system-26, on-premises-24)
compound(system-26, messaging-25)
nsubj(called-27, system-26)
ccomp(sells-22, called-27)
dobj(called-27, Notes-28)

(ROOT
  (S
    (S
      (NP (NNS Customers))
      (VP (VBP are)
        (VP (VBG using)
          (NP (DT the) (NN cloud))
          (PP (IN as)
            (NP (DT a) (NN way)
              (S
                (VP (TO to)
                  (VP (VB move)
                    (PP (TO to)
                      (NP (NNP Microsoft)))))))))))
    (, ,)
    (NP (NNP Capossela))
    (VP (VBZ says) (, ,)
      (S
        (VP (VBG citing)
          (NP (JJ new) (NNS customers))
          (PP (IN like)
            (NP
              (NP (NNP GlaxoSmithKline))
              (, ,)
              (CC and)
              (NP (NNP Kraft) (NNPS Foods)))))))
    (. .)))

nsubj(using-3, Customers-1)
aux(using-3, are-2)
ccomp(says-15, using-3)
det(cloud-5, the-4)
dobj(using-3, cloud-5)
case(way-8, as-6)
det(way-8, a-7)
nmod:as(using-3, way-8)
mark(move-10, to-9)
acl(way-8, move-10)
case(Microsoft-12, to-11)
nmod:to(move-10, Microsoft-12)
nsubj(says-15, Capossela-14)
root(ROOT-0, says-15)
xcomp(says-15, citing-17)
amod(customers-19, new-18)
dobj(citing-17, customers-19)
case(GlaxoSmithKline-21, like-20)
nmod:like(citing-17, GlaxoSmithKline-21)
cc(GlaxoSmithKline-21, and-23)
compound(Foods-25, Kraft-24)
nmod:like(citing-17, Foods-25)
conj:and(GlaxoSmithKline-21, Foods-25)

(ROOT
  (S (CC But)
    (NP (NN waitwIBM))
    (VP (VBZ claims)
      (S
        (NP (PRP$ its))
        (VP (VBG doing)
          (NP (DT the) (JJ same) (NN thing))
          (ADVP (RB right) (RB back))
          (PP (TO to)
            (NP (NNP Microsoft))))))
    (. .)))

cc(claims-3, But-1)
nsubj(claims-3, waitwIBM-2)
root(ROOT-0, claims-3)
nsubj(doing-5, its-4)
dep(claims-3, doing-5)
det(thing-8, the-6)
amod(thing-8, same-7)
dobj(doing-5, thing-8)
advmod(back-10, right-9)
advmod(doing-5, back-10)
case(Microsoft-12, to-11)
nmod:to(doing-5, Microsoft-12)

(ROOT
  (S
    (NP (NNP IBM))
    (VP (VBZ sells)
      (SBAR
        (S
          (NP (DT a) (JJ cloud-based) (NN mail) (NN solution))
          (VP (VBD called)
            (SBAR
              (S
                (NP (NNP LotusLive))
                (VP
                  (VP (VBZ iNotes))
                  (CC and)
                  (VP (VBZ has)
                    (VP (VBN lured)
                      (PRT (RP away))
                      (PP (IN from)
                        (NP (NNP Microsoft) (JJ such) (NNS customers)))
                      (PP (IN as)
                        (NP
                          (NP (NNP Panasonic))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP (VBZ is)
                                (VP (VBG moving)
                                  (NP (CD 300,000) (NNS employees))
                                  (PP (IN onto)
                                    (NP (DT an) (NNP IBM) (NN cloud))))))))))))))))))
    (. .)))

nsubj(sells-2, IBM-1)
root(ROOT-0, sells-2)
det(solution-6, a-3)
amod(solution-6, cloud-based-4)
compound(solution-6, mail-5)
nsubj(called-7, solution-6)
ccomp(sells-2, called-7)
nsubj(iNotes-9, LotusLive-8)
nsubj(lured-12, LotusLive-8)
ccomp(called-7, iNotes-9)
cc(iNotes-9, and-10)
aux(lured-12, has-11)
ccomp(called-7, lured-12)
conj:and(iNotes-9, lured-12)
compound:prt(lured-12, away-13)
case(customers-17, from-14)
compound(customers-17, Microsoft-15)
amod(customers-17, such-16)
nmod:from(lured-12, customers-17)
case(Panasonic-19, as-18)
nmod:as(lured-12, Panasonic-19)
nsubj(moving-23, Panasonic-19)
ref(Panasonic-19, which-21)
aux(moving-23, is-22)
acl:relcl(Panasonic-19, moving-23)
nummod(employees-25, 300,000-24)
dobj(moving-23, employees-25)
case(cloud-29, onto-26)
det(cloud-29, an-27)
compound(cloud-29, IBM-28)
nmod:onto(moving-23, cloud-29)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (NP
          (NP (CD one) (NN thing))
          (SBAR
            (S
              (NP (NNP Microsoft) (, ,) (NNP Google) (, ,)
                (CC and)
                (NNP IBM))
              (RB all)
              (VP (VB agree)
                (PRT (RP on))))))))
    (: :)
    (S
      (NP
        (NP (DT the) (NN battle))
        (PP (IN over)
          (NP (NN cloud) (NN computing))))
      (VP (VBZ is)
        (ADVP (RB only))
        (VP
          (ADVP (RB just))
          (VBG beginning))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
nummod(thing-4, one-3)
nsubj(is-2, thing-4)
nsubj(agree-12, Microsoft-5)
conj:and(Microsoft-5, Google-7)
nsubj(agree-12, Google-7)
cc(Microsoft-5, and-9)
conj:and(Microsoft-5, IBM-10)
nsubj(agree-12, IBM-10)
advmod(agree-12, all-11)
acl:relcl(thing-4, agree-12)
compound:prt(agree-12, on-13)
det(battle-16, the-15)
nsubj(beginning-23, battle-16)
case(computing-19, over-17)
compound(computing-19, cloud-18)
nmod:over(battle-16, computing-19)
aux(beginning-23, is-20)
advmod(beginning-23, only-21)
advmod(beginning-23, just-22)
parataxis(is-2, beginning-23)

(ROOT
  (S
    (PP (IN For)
      (NP (JJ old-guard) (NN tech) (NNS companies)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ offers)
      (NP (DT the) (NN chance)
        (S
          (VP (TO to)
            (VP (VB add)
              (NP (JJ new) (NNS customers)))))))
    (. .)))

case(companies-4, For-1)
amod(companies-4, old-guard-2)
compound(companies-4, tech-3)
nmod:for(offers-7, companies-4)
nsubj(offers-7, it-6)
root(ROOT-0, offers-7)
det(chance-9, the-8)
dobj(offers-7, chance-9)
mark(add-11, to-10)
acl(chance-9, add-11)
amod(customers-13, new-12)
dobj(add-11, customers-13)

(ROOT
  (S
    (S (CC But)
      (NP (PRP it))
      (ADVP (RB also))
      (VP (VBZ brings)
        (NP (JJ big) (NNS risks))))
    (: :)
    (S
      (PP (IN during)
        (NP
          (NP (JJ big) (NNS shifts))
          (PP (IN in)
            (NP
              (NP (NN technology))
              (PP (IN like)
                (NP (DT this) (NN one)))))))
      (, ,)
      (NP (NN industry) (NNS giants))
      (VP (MD can)
        (VP (VB be)
          (VP (VBN swept)
            (ADVP (RB aside))
            (SBAR (IN as)
              (S
                (NP (JJ new) (NNS leaders))
                (VP (VBP emerge))))))))
    (. .)))

cc(brings-4, But-1)
nsubj(brings-4, it-2)
advmod(brings-4, also-3)
root(ROOT-0, brings-4)
amod(risks-6, big-5)
dobj(brings-4, risks-6)
case(shifts-10, during-8)
amod(shifts-10, big-9)
nmod:during(swept-21, shifts-10)
case(technology-12, in-11)
nmod:in(shifts-10, technology-12)
case(one-15, like-13)
det(one-15, this-14)
nmod:like(technology-12, one-15)
compound(giants-18, industry-17)
nsubjpass(swept-21, giants-18)
aux(swept-21, can-19)
auxpass(swept-21, be-20)
parataxis(brings-4, swept-21)
advmod(swept-21, aside-22)
mark(emerge-26, as-23)
amod(leaders-25, new-24)
nsubj(emerge-26, leaders-25)
advcl(swept-21, emerge-26)

(ROOT
  (S
    (NP
      (NP (CD Ten) (NNS years))
      (PP (IN from)
        (NP
          (NP (RB now))
          (, ,)
          (NP (DT the) (NN tech) (NN landscape)))))
    (VP (VBZ is)
      (ADJP (JJ certain)
        (S
          (VP (TO to)
            (VP (VB look)
              (ADJP (RB very) (JJ different)))))))
    (. .)))

nummod(years-2, Ten-1)
nsubj(certain-10, years-2)
nsubj(look-12, years-2)
case(now-4, from-3)
nmod:from(years-2, now-4)
det(landscape-8, the-6)
compound(landscape-8, tech-7)
appos(now-4, landscape-8)
cop(certain-10, is-9)
root(ROOT-0, certain-10)
mark(look-12, to-11)
xcomp(certain-10, look-12)
advmod(different-14, very-13)
xcomp(look-12, different-14)

