(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN excerpt))
        (PP (IN from)
          (NP
            (NP (DT the) (NN commencement) (NN address))
            (VP (VBN delivered)
              (PP (IN by)
                (NP
                  (NP (NNP Steve) (NNP Jobs))
                  (, ,)
                  (NP (DT the) (NN co-founder))
                  (CC and)
                  (NP
                    (NP (JJ former)
                      (NX (JJ chief) (JJ executive) (NN officer)))
                    (PP (IN of)
                      (NP (NNP Apple))))))
              (, ,)
              (PP (IN at)
                (NP
                  (NP (NNP Stanford) (NNP University))
                  (PP (IN on)
                    (NP (NNP June) (CD 1) (, ,) (CD 2))))))))))
    (. .)))

nsubj(excerpt-4, This-1)
cop(excerpt-4, is-2)
det(excerpt-4, an-3)
root(ROOT-0, excerpt-4)
case(address-8, from-5)
det(address-8, the-6)
compound(address-8, commencement-7)
nmod:from(excerpt-4, address-8)
acl(address-8, delivered-9)
case(Jobs-12, by-10)
compound(Jobs-12, Steve-11)
nmod:by(delivered-9, Jobs-12)
det(co-founder-15, the-14)
nmod:by(delivered-9, co-founder-15)
conj:and(Jobs-12, co-founder-15)
cc(Jobs-12, and-16)
amod(officer-20, former-17)
amod(officer-20, chief-18)
amod(officer-20, executive-19)
nmod:by(delivered-9, officer-20)
conj:and(Jobs-12, officer-20)
case(Apple-22, of-21)
nmod:of(officer-20, Apple-22)
case(University-26, at-24)
compound(University-26, Stanford-25)
nmod:at(delivered-9, University-26)
case(June-28, on-27)
nmod:on(University-26, June-28)
nummod(June-28, 1-29)
nummod(June-28, 2-31)

(ROOT
  (S
    (PP (IN In)
      (NP (DT this) (NN speech)))
    (, ,)
    (NP (NNP Steve) (NNP Jobs))
    (VP (VBZ shares)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP he))
          (VP (VBD learned)
            (PP (IN after)
              (S
                (VP (VBG having)
                  (NP (NN surgery)))))))))
    (. .)))

case(speech-3, In-1)
det(speech-3, this-2)
nmod:in(shares-7, speech-3)
compound(Jobs-6, Steve-5)
nsubj(shares-7, Jobs-6)
root(ROOT-0, shares-7)
dobj(learned-10, what-8)
nsubj(learned-10, he-9)
ccomp(shares-7, learned-10)
mark(having-12, after-11)
advcl(learned-10, having-12)
dobj(having-12, surgery-13)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ talks)
      (PP (IN about)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (NN death))
            (VP (MD can)
              (VP (VB be)
                (NP
                  (NP (DT a) (NN mechanism))
                  (PP (IN for)
                    (S
                      (VP (VBG changing)
                        (NP
                          (NP (CD one) (POS 's))
                          (NN life))))))))))))
    (. .)))

nsubj(talks-2, He-1)
root(ROOT-0, talks-2)
mark(mechanism-9, about-3)
advmod(mechanism-9, how-4)
nsubj(mechanism-9, death-5)
aux(mechanism-9, can-6)
cop(mechanism-9, be-7)
det(mechanism-9, a-8)
advcl(talks-2, mechanism-9)
mark(changing-11, for-10)
acl(mechanism-9, changing-11)
nmod:poss(life-14, one-12)
case(one-12, 's-13)
dobj(changing-11, life-14)

(ROOT
  (S
    (ADVP (DT No) (NN matter)
      (SBAR
        (SBAR
          (WHADJP (WRB how) (JJ important))
          (S
            (NP (PRP one))
            (VP (MD may)
              (VP (VB be)))))
        (CC or)
        (SBAR
          (WHNP (WDT whatever))
          (S
            (NP (PRP one))
            (VP (MD may)
              (VP (VB possess)))))))
    (, ,)
    (NP (DT each) (NN person))
    (VP (VBZ is)
      (VP (VBN destined)
        (S
          (VP (TO to)
            (VP (VB confront)
              (NP (NN death))
              (ADVP (RB sooner)
                (CC or)
                (RB later)))))))
    (. .)))

neg(matter-2, No-1)
advmod(destined-17, matter-2)
advmod(important-4, how-3)
dep(be-7, important-4)
nsubj(be-7, one-5)
aux(be-7, may-6)
dep(matter-2, be-7)
cc(be-7, or-8)
dobj(possess-12, whatever-9)
nsubj(possess-12, one-10)
aux(possess-12, may-11)
dep(matter-2, possess-12)
conj:or(be-7, possess-12)
det(person-15, each-14)
nsubjpass(destined-17, person-15)
nsubj(confront-19, person-15)
auxpass(destined-17, is-16)
root(ROOT-0, destined-17)
mark(confront-19, to-18)
xcomp(destined-17, confront-19)
dobj(confront-19, death-20)
advmod(confront-19, sooner-21)
cc(sooner-21, or-22)
advmod(confront-19, later-23)
conj:or(sooner-21, later-23)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ urges)
      (S
        (NP (NNS people))
        (VP (TO to)
          (VP
            (ADVP (RB always))
            (VB live)
            (NP (DT each) (NN day))
            (SBAR (RB as) (IN if)
              (S
                (NP (PRP it))
                (VP (VBD were)
                  (NP (PRP$ their) (JJ last)))))))))
    (. .)))

nsubj(urges-2, He-1)
root(ROOT-0, urges-2)
dobj(urges-2, people-3)
nsubj(live-6, people-3)
mark(live-6, to-4)
advmod(live-6, always-5)
xcomp(urges-2, live-6)
det(day-8, each-7)
nmod:tmod(live-6, day-8)
mark(last-14, as-9)
mwe(as-9, if-10)
nsubj(last-14, it-11)
cop(last-14, were-12)
nmod:poss(last-14, their-13)
advcl(live-6, last-14)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB also))
    (VP (VBZ advises)
      (SBAR (IN that)
        (S
          (PP (RB instead) (IN of)
            (S
              (VP (VBG compromising)
                (CC and)
                (VBG accepting)
                (NP (DT the) (JJ conventional) (NNS ways)))))
          (, ,)
          (NP (NNS students))
          (VP (MD should)
            (VP (VB pursue)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP they))
                  (ADVP (RB really))
                  (VP (VBP want)))))))))
    (. .)))

nsubj(advises-3, He-1)
advmod(advises-3, also-2)
root(ROOT-0, advises-3)
mark(pursue-16, that-4)
mark(compromising-7, instead-5)
mwe(instead-5, of-6)
advcl(pursue-16, compromising-7)
cc(compromising-7, and-8)
conj:and(compromising-7, accepting-9)
advcl(pursue-16, accepting-9)
det(ways-12, the-10)
amod(ways-12, conventional-11)
dobj(compromising-7, ways-12)
nsubj(pursue-16, students-14)
aux(pursue-16, should-15)
ccomp(advises-3, pursue-16)
dobj(want-20, what-17)
nsubj(want-20, they-18)
advmod(want-20, really-19)
ccomp(pursue-16, want-20)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP I))
          (VP (VBD was)
            (NP (CD 1)))))
      (, ,)
      (NP (PRP I))
      (VP (VBD read)
        (NP
          (NP (DT a) (NN quote))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD went)
                (NP (NN something))
                (PP (IN like))))))))
    (: :) (`` ``)
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP live)
            (NP (DT each) (NN day))
            (SBAR (RB as) (IN if)
              (S
                (NP (PRP it))
                (VP (VBD were)
                  (NP (PRP$ your) (JJ last))))))))
      (, ,)
      (ADVP (RB someday))
      (NP (PRP you))
      (VP (MD 'll)
        (ADVP (RBS most) (RB certainly))
        (VP (VB be)
          (ADJP (JJ right)))))
    (. .) ('' '')))

advmod(1-4, When-1)
nsubj(1-4, I-2)
cop(1-4, was-3)
advcl(read-7, 1-4)
nsubj(read-7, I-6)
root(ROOT-0, read-7)
det(quote-9, a-8)
dobj(read-7, quote-9)
nsubj(went-11, quote-9)
ref(quote-9, that-10)
acl:relcl(quote-9, went-11)
dobj(went-11, something-12)
nmod(went-11, like-13)
mark(live-18, If-16)
nsubj(live-18, you-17)
advcl(right-34, live-18)
det(day-20, each-19)
nmod:tmod(live-18, day-20)
mark(last-26, as-21)
mwe(as-21, if-22)
nsubj(last-26, it-23)
cop(last-26, were-24)
nmod:poss(last-26, your-25)
advcl(live-18, last-26)
advmod(you-29, someday-28)
nsubj(right-34, you-29)
aux(right-34, 'll-30)
advmod(certainly-32, most-31)
advmod(right-34, certainly-32)
cop(right-34, be-33)
parataxis(read-7, right-34)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD made)
        (NP (DT an) (NN impression))
        (PP (IN on)
          (NP (PRP me)))))
    (, ,)
    (CC and)
    (S
      (PP (IN since)
        (NP (RB then)))
      (, ,)
      (PP (IN for)
        (NP (DT the) (JJ past) (CD 3) (NNS years)))
      (, ,)
      (NP (PRP I))
      (VP (VBP have)
        (VP
          (VP (VBN looked)
            (PP (IN in)
              (NP (DT the) (NN mirror)))
            (NP (DT every) (NN morning)))
          (CC and)
          (VP (VBN asked)
            (NP
              (NP (PRP myself))
              (: :) (`` ``)
              (SBARQ
                (SBAR (IN If)
                  (S
                    (NP (NN today))
                    (VP (VBD were)
                      (NP
                        (NP (DT the) (JJ last) (NN day))
                        (PP (IN of)
                          (NP (PRP$ my) (NN life)))))))
                (, ,)
                (SQ (MD would)
                  (NP (PRP I))
                  (VP (VB want)
                    (S
                      (VP (TO to)
                        (VP (VB do)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (PRP I))
                              (VP (VBP am)
                                (VP (IN about)
                                  (S
                                    (VP (TO to)
                                      (VP (VB do)
                                        (NP (NN today))))))))))))))
                (. ?))
              ('' ''))))))))

nsubj(made-2, It-1)
root(ROOT-0, made-2)
det(impression-4, an-3)
dobj(made-2, impression-4)
case(me-6, on-5)
nmod:on(made-2, me-6)
cc(made-2, and-8)
case(then-10, since-9)
nmod:since(looked-20, then-10)
case(years-16, for-12)
det(years-16, the-13)
amod(years-16, past-14)
nummod(years-16, 3-15)
nmod:for(looked-20, years-16)
nsubj(looked-20, I-18)
nsubj(asked-27, I-18)
aux(looked-20, have-19)
conj:and(made-2, looked-20)
case(mirror-23, in-21)
det(mirror-23, the-22)
nmod:in(looked-20, mirror-23)
det(morning-25, every-24)
nmod:tmod(looked-20, morning-25)
cc(looked-20, and-26)
conj:and(made-2, asked-27)
conj:and(looked-20, asked-27)
dobj(asked-27, myself-28)
mark(day-36, If-31)
nsubj(day-36, today-32)
cop(day-36, were-33)
det(day-36, the-34)
amod(day-36, last-35)
advcl(want-43, day-36)
case(life-39, of-37)
nmod:poss(life-39, my-38)
nmod:of(day-36, life-39)
aux(want-43, would-41)
nsubj(want-43, I-42)
nsubj(do-45, I-42)
dep(myself-28, want-43)
mark(do-45, to-44)
xcomp(want-43, do-45)
dobj(do-51, what-46)
nsubj(about-49, I-47)
nsubj(do-51, I-47)
aux(about-49, am-48)
ccomp(do-45, about-49)
mark(do-51, to-50)
xcomp(about-49, do-51)
nmod:tmod(do-51, today-52)

(ROOT
  (S (CC And)
    (SBAR
      (WHADVP (WRB whenever))
      (S
        (NP (DT the) (NN answer))
        (VP (VBZ has)
          (VP (VBN been)
            (NP (`` ``)
              (NP (NNP No))
              ('' '')
              (PP (IN for)
                (NP
                  (ADJP (RB too) (JJ many))
                  (NNS days))))
            (PP (IN in)
              (NP (DT a) (NN row)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP need)
            (S
              (VP (TO to)
                (VP (VB change)
                  (NP (NN something)))))))))
    (. .)))

cc(know-19, And-1)
advmod(No-8, whenever-2)
det(answer-4, the-3)
nsubj(No-8, answer-4)
aux(No-8, has-5)
cop(No-8, been-6)
advcl(know-19, No-8)
case(days-13, for-10)
advmod(many-12, too-11)
amod(days-13, many-12)
nmod:for(No-8, days-13)
case(row-16, in-14)
det(row-16, a-15)
nmod:in(No-8, row-16)
nsubj(know-19, I-18)
root(ROOT-0, know-19)
nsubj(need-21, I-20)
nsubj(change-23, I-20)
ccomp(know-19, need-21)
mark(change-23, to-22)
xcomp(need-21, change-23)
dobj(change-23, something-24)

(ROOT
  (S
    (S
      (VP (VBG Remembering)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (MD 'll)
              (VP (VB be)
                (ADJP (JJ dead))
                (ADVP (RB soon))))))))
    (VP (VBZ is)
      (NP
        (NP (DT the)
          (ADJP (RBS most) (JJ important))
          (NN tool))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP 've)
              (ADVP (RB ever))
              (VP (VBN encountered)
                (S
                  (VP (TO to)
                    (VP (VB help)
                      (S
                        (NP (PRP me))
                        (VP (VB make)
                          (NP
                            (NP (DT the) (JJ big) (NNS choices))
                            (PP (IN in)
                              (NP (NN life)))))))))))))))
    (. .)))

csubj(tool-12, Remembering-1)
mark(dead-6, that-2)
nsubj(dead-6, I-3)
aux(dead-6, 'll-4)
cop(dead-6, be-5)
ccomp(Remembering-1, dead-6)
advmod(dead-6, soon-7)
cop(tool-12, is-8)
det(tool-12, the-9)
advmod(important-11, most-10)
amod(tool-12, important-11)
root(ROOT-0, tool-12)
nsubj(encountered-16, I-13)
nsubj(help-18, I-13)
aux(encountered-16, 've-14)
advmod(encountered-16, ever-15)
acl:relcl(tool-12, encountered-16)
mark(help-18, to-17)
xcomp(encountered-16, help-18)
nsubj(make-20, me-19)
ccomp(help-18, make-20)
det(choices-23, the-21)
amod(choices-23, big-22)
dobj(make-20, choices-23)
case(life-25, in-24)
nmod:in(choices-23, life-25)

(ROOT
  (S
    (PP (IN Because)
      (NP
        (NP (RB almost) (JJ everything-all) (JJ external) (NNS expectations))
        (, ,)
        (NP (DT all) (NN pride))))
    (, ,)
    (NP
      (NP (DT all) (NN fear))
      (PP (IN of)
        (NP (NN embarrassment)
          (CC or)
          (NN failure-these) (NNS things))))
    (VP
      (ADVP (RB just))
      (VB fall)
      (PRT (RP away))
      (PP (IN in)
        (NP
          (NP (DT the) (NN face))
          (PP (IN of)
            (NP (NN death)))))
      (, ,)
      (S
        (VP (VBG leaving)
          (ADVP (RB only))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ is)
                (ADJP (RB truly) (JJ important))))))))
    (. .)))

case(expectations-5, Because-1)
advmod(expectations-5, almost-2)
amod(expectations-5, everything-all-3)
amod(expectations-5, external-4)
nmod:because(fall-18, expectations-5)
det(pride-8, all-7)
appos(expectations-5, pride-8)
det(fear-11, all-10)
nsubj(fall-18, fear-11)
case(things-16, of-12)
compound(things-16, embarrassment-13)
cc(embarrassment-13, or-14)
conj:or(embarrassment-13, failure-these-15)
compound(things-16, failure-these-15)
nmod:of(fear-11, things-16)
advmod(fall-18, just-17)
root(ROOT-0, fall-18)
compound:prt(fall-18, away-19)
case(face-22, in-20)
det(face-22, the-21)
nmod:in(fall-18, face-22)
case(death-24, of-23)
nmod:of(face-22, death-24)
xcomp(fall-18, leaving-26)
advmod(leaving-26, only-27)
nsubj(important-31, what-28)
cop(important-31, is-29)
advmod(important-31, truly-30)
ccomp(leaving-26, important-31)

(ROOT
  (S
    (S
      (VP (VBG Remembering)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP are)
              (VP (VBG going)
                (S
                  (VP (TO to)
                    (VP (VB die))))))))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS best) (NN way))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP know)
              (S
                (VP (TO to)
                  (VP (VB avoid)
                    (NP
                      (NP (DT the) (NN trap))
                      (PP (IN of)
                        (S
                          (VP (VBG thinking)
                            (S
                              (NP (PRP you))
                              (VP (VB have)
                                (S
                                  (NP (NN something))
                                  (VP (TO to)
                                    (VP (VB lose))))))))))))))))))
    (. .)))

csubj(way-11, Remembering-1)
mark(going-5, that-2)
nsubj(going-5, you-3)
nsubj(die-7, you-3)
aux(going-5, are-4)
ccomp(Remembering-1, going-5)
mark(die-7, to-6)
xcomp(going-5, die-7)
cop(way-11, is-8)
det(way-11, the-9)
amod(way-11, best-10)
root(ROOT-0, way-11)
nsubj(know-13, I-12)
nsubj(avoid-15, I-12)
acl:relcl(way-11, know-13)
mark(avoid-15, to-14)
xcomp(know-13, avoid-15)
det(trap-17, the-16)
dobj(avoid-15, trap-17)
mark(thinking-19, of-18)
acl(trap-17, thinking-19)
nsubj(have-21, you-20)
ccomp(thinking-19, have-21)
dobj(have-21, something-22)
mark(lose-24, to-23)
ccomp(have-21, lose-24)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADVP (RB already))
      (ADJP (JJ naked)))
    (. .)))

nsubj(naked-4, You-1)
cop(naked-4, are-2)
advmod(naked-4, already-3)
root(ROOT-0, naked-4)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (NN reason)
        (S (RB not)
          (VP (TO to)
            (VP (VB follow)
              (NP (PRP$ your) (NN heart)))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(reason-4, no-3)
nsubj(is-2, reason-4)
neg(follow-7, not-5)
mark(follow-7, to-6)
acl(reason-4, follow-7)
nmod:poss(heart-9, your-8)
dobj(follow-7, heart-9)

(ROOT
  (S
    (ADVP
      (NP (RB About) (DT a) (NN year))
      (RB ago))
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBN diagnosed)
        (PP (IN with)
          (NP (NN cancer)))))
    (. .)))

advmod(year-3, About-1)
det(year-3, a-2)
nmod:npmod(ago-4, year-3)
advmod(diagnosed-7, ago-4)
nsubjpass(diagnosed-7, I-5)
auxpass(diagnosed-7, was-6)
root(ROOT-0, diagnosed-7)
case(cancer-9, with-8)
nmod:with(diagnosed-7, cancer-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD had)
        (NP
          (NP
            (NP (DT a) (NN scan))
            (PP (IN at)
              (NP (CD 7))))
          (: :)
          (PP (IN in)
            (NP (DT the) (NN morning))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (ADVP (RB clearly))
      (VP (VBD showed)
        (NP (DT a) (NN tumor))
        (PP (IN on)
          (NP (PRP$ my) (NN pancreas)))))
    (. .)))

nsubj(had-2, I-1)
root(ROOT-0, had-2)
det(scan-4, a-3)
dobj(had-2, scan-4)
case(7-6, at-5)
nmod:at(scan-4, 7-6)
case(morning-10, in-8)
det(morning-10, the-9)
nmod:in(scan-4, morning-10)
cc(had-2, and-12)
nsubj(showed-15, it-13)
advmod(showed-15, clearly-14)
conj:and(had-2, showed-15)
det(tumor-17, a-16)
dobj(showed-15, tumor-17)
case(pancreas-20, on-18)
nmod:poss(pancreas-20, my-19)
nmod:on(showed-15, pancreas-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (ADVP (RB even))
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT a) (NN pancreas))
            (VP (VBD was))))))
    (. .)))

nsubj(know-5, I-1)
aux(know-5, did-2)
neg(know-5, n't-3)
advmod(know-5, even-4)
root(ROOT-0, know-5)
dobj(was-9, what-6)
det(pancreas-8, a-7)
nsubj(was-9, pancreas-8)
ccomp(know-5, was-9)

(ROOT
  (S
    (NP (DT The) (NNS doctors))
    (VP (VBD told)
      (NP (PRP me))
      (SBAR
        (SBAR
          (S
            (NP (DT this))
            (VP (VBD was)
              (ADVP (RB almost) (RB certainly))
              (NP
                (NP (DT a) (NN type))
                (PP (IN of)
                  (NP (NN cancer)))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ is)
                      (ADJP (JJ incurable)))))))))
        (CC and)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (MD should)
              (VP (VB expect)
                (S
                  (VP (TO to)
                    (VP (VB live)
                      (ADVP (RB no) (RB longer))
                      (NP
                        (QP (IN than) (CD three) (TO to) (CD six))
                        (NNS months)))))))))))
    (. .)))

det(doctors-2, The-1)
nsubj(told-3, doctors-2)
root(ROOT-0, told-3)
dobj(told-3, me-4)
nsubj(type-10, this-5)
cop(type-10, was-6)
advmod(certainly-8, almost-7)
advmod(type-10, certainly-8)
det(type-10, a-9)
ccomp(told-3, type-10)
nsubj(incurable-15, type-10)
case(cancer-12, of-11)
nmod:of(type-10, cancer-12)
ref(type-10, that-13)
cop(incurable-15, is-14)
acl:relcl(type-10, incurable-15)
cc(type-10, and-16)
mark(expect-20, that-17)
nsubj(expect-20, I-18)
nsubj(live-22, I-18)
aux(expect-20, should-19)
ccomp(told-3, expect-20)
conj:and(type-10, expect-20)
nsubj(incurable-15, expect-20)
mark(live-22, to-21)
xcomp(expect-20, live-22)
neg(longer-24, no-23)
advmod(live-22, longer-24)
advmod(six-28, than-25)
compound(six-28, three-26)
dep(six-28, to-27)
nummod(months-29, six-28)
nmod:tmod(live-22, months-29)

(ROOT
  (S
    (NP (PRP$ My) (NN doctor))
    (VP (VBD advised)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP
            (VP (VB go)
              (NP (NN home)))
            (CC and)
            (VP (VB get)
              (NP (PRP$ my) (NNS affairs))
              (PP (IN in)
                (NP
                  (NP (NN order))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ is)
                        (NP
                          (NP
                            (NP (NN doctor) (POS 's))
                            (NN code))
                          (PP (IN for) (`` ``)
                            (S
                              (VP (VB prepare)
                                (S
                                  (VP (TO to)
                                    (VP (VB die))))))))))))))))))
    (. .) ('' '')))

nmod:poss(doctor-2, My-1)
nsubj(advised-3, doctor-2)
root(ROOT-0, advised-3)
dobj(advised-3, me-4)
nsubj(go-6, me-4)
nsubj(get-9, me-4)
mark(go-6, to-5)
xcomp(advised-3, go-6)
dobj(go-6, home-7)
cc(go-6, and-8)
xcomp(advised-3, get-9)
conj:and(go-6, get-9)
nmod:poss(affairs-11, my-10)
dobj(get-9, affairs-11)
case(order-13, in-12)
nmod:in(get-9, order-13)
nsubj(code-19, order-13)
ref(order-13, which-15)
cop(code-19, is-16)
nmod:poss(code-19, doctor-17)
case(doctor-17, 's-18)
acl:relcl(order-13, code-19)
case(prepare-22, for-20)
acl:for(code-19, prepare-22)
mark(die-24, to-23)
xcomp(prepare-22, die-24)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ means)
      (S
        (VP (TO to)
          (VP (VB try)
            (S
              (VP (TO to)
                (VP (VB tell)
                  (NP (PRP$ your) (NNS kids))
                  (NP
                    (NP (NN everything))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBD thought)
                          (SBAR
                            (S
                              (NP (PRP you))
                              (VP (MD 'd)
                                (VP (VB have)
                                  (NP (DT the) (JJ next) (CD 1) (NNS years))
                                  (S
                                    (VP (TO to)
                                      (VP (VB tell)
                                        (NP (PRP them))
                                        (PP (IN in)
                                          (NP
                                            (QP (RB just) (DT a) (JJ few))
                                            (NNS months)))))))))))))))))))))
    (. .)))

nsubj(means-2, It-1)
nsubj(try-4, It-1)
nsubj(tell-6, It-1)
root(ROOT-0, means-2)
mark(try-4, to-3)
xcomp(means-2, try-4)
mark(tell-6, to-5)
xcomp(try-4, tell-6)
nmod:poss(kids-8, your-7)
dep(tell-6, kids-8)
dobj(tell-6, everything-9)
nsubj(thought-11, you-10)
acl:relcl(everything-9, thought-11)
nsubj(have-14, you-12)
aux(have-14, 'd-13)
ccomp(thought-11, have-14)
det(years-18, the-15)
amod(years-18, next-16)
nummod(years-18, 1-17)
nmod:tmod(have-14, years-18)
mark(tell-20, to-19)
advcl(have-14, tell-20)
dobj(tell-20, them-21)
case(months-26, in-22)
advmod(few-25, just-23)
advmod(few-25, a-24)
nummod(months-26, few-25)
nmod:in(tell-20, months-26)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ means)
      (S
        (VP (TO to)
          (VP (VB make)
            (ADJP (JJ sure)
              (SBAR
                (S
                  (NP (NN everything))
                  (VP (VBZ is)
                    (VP (VBN buttoned)
                      (ADVP
                        (ADVP (RB up) (RB so))
                        (SBAR (IN that)
                          (S
                            (NP (PRP it))
                            (VP (MD will)
                              (VP (VB be)
                                (ADJP (RB as) (JJ easy)
                                  (PP (IN as)
                                    (ADJP (JJ possible))))
                                (PP (IN for)
                                  (NP (PRP$ your) (NN family)))))))))))))))))
    (. .)))

nsubj(means-2, It-1)
nsubj(make-4, It-1)
root(ROOT-0, means-2)
mark(make-4, to-3)
xcomp(means-2, make-4)
xcomp(make-4, sure-5)
nsubjpass(buttoned-8, everything-6)
auxpass(buttoned-8, is-7)
ccomp(sure-5, buttoned-8)
advmod(so-10, up-9)
advmod(buttoned-8, so-10)
mark(easy-16, that-11)
nsubj(easy-16, it-12)
aux(easy-16, will-13)
cop(easy-16, be-14)
advmod(easy-16, as-15)
advcl(so-10, easy-16)
case(possible-18, as-17)
advcl:as(easy-16, possible-18)
case(family-21, for-19)
nmod:poss(family-21, your-20)
nmod:for(easy-16, family-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ means)
      (S
        (VP (TO to)
          (VP (VB say)
            (NP (PRP$ your) (NNS goodbyes))))))
    (. .)))

nsubj(means-2, It-1)
nsubj(say-4, It-1)
root(ROOT-0, means-2)
mark(say-4, to-3)
xcomp(means-2, say-4)
nmod:poss(goodbyes-6, your-5)
dobj(say-4, goodbyes-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD lived)
      (PP (IN with)
        (NP
          (NP (DT that) (NN diagnosis))
          (NP (DT all) (NN day)))))
    (. .)))

nsubj(lived-2, I-1)
root(ROOT-0, lived-2)
case(diagnosis-5, with-3)
det(diagnosis-5, that-4)
nmod:with(lived-2, diagnosis-5)
det(day-7, all-6)
dep(diagnosis-5, day-7)

(ROOT
  (S
    (NP (RB Later) (DT that) (NN evening))
    (NP (PRP I))
    (VP
      (VP (VBD had)
        (NP
          (NP (DT a) (NN biopsy))
          (, ,)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP they))
              (VP (VBD stuck)
                (NP (DT an) (NN endoscope))
                (PP (IN down)
                  (NP (PRP$ my) (NN throat)))
                (, ,)
                (PP (IN through)
                  (NP (PRP$ my) (NN stomach))))))))
      (CC and)
      (VP
        (PP (IN into)
          (NP (PRP$ my) (NNS intestines)))
        (, ,)
        (VP (VBD put)
          (NP (DT a) (NN needle))
          (PP (IN into)
            (NP (PRP$ my) (NN pancreas))))
        (CC and)
        (VP (VBD got)
          (NP (DT a) (JJ few) (NNS cells))
          (PP (IN from)
            (NP (DT the) (NN tumor))))))
    (. .)))

advmod(evening-3, Later-1)
det(evening-3, that-2)
nmod:tmod(had-5, evening-3)
nsubj(had-5, I-4)
nsubj(put-26, I-4)
root(ROOT-0, had-5)
det(biopsy-7, a-6)
dobj(had-5, biopsy-7)
advmod(stuck-11, where-9)
nsubj(stuck-11, they-10)
acl:relcl(biopsy-7, stuck-11)
det(endoscope-13, an-12)
dobj(stuck-11, endoscope-13)
case(throat-16, down-14)
nmod:poss(throat-16, my-15)
nmod:down(stuck-11, throat-16)
case(stomach-20, through-18)
nmod:poss(stomach-20, my-19)
nmod:through(stuck-11, stomach-20)
cc(had-5, and-21)
case(intestines-24, into-22)
nmod:poss(intestines-24, my-23)
nmod:into(put-26, intestines-24)
conj:and(had-5, put-26)
det(needle-28, a-27)
dobj(put-26, needle-28)
case(pancreas-31, into-29)
nmod:poss(pancreas-31, my-30)
nmod:into(put-26, pancreas-31)
cc(put-26, and-32)
conj:and(had-5, got-33)
conj:and(put-26, got-33)
det(cells-36, a-34)
amod(cells-36, few-35)
dobj(got-33, cells-36)
case(tumor-39, from-37)
det(tumor-39, the-38)
nmod:from(got-33, tumor-39)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBN sedated))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (PRP$ my) (NN wife))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD was)
              (ADVP (RB there)))))
        (, ,))
      (VP (VBD told)
        (NP (PRP me))
        (SBAR (IN that)
          (S
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBD viewed)
                  (NP (DT the) (NNS cells))
                  (PP (IN under)
                    (NP (DT a) (NN microscope))))))
            (, ,)
            (NP (DT the) (NNS doctors))
            (VP (VBD started)
              (S
                (VP (VBG crying)
                  (SBAR (IN because)
                    (S
                      (NP (PRP it))
                      (VP (VBD turned)
                        (PRT (RP out))
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (NP
                                (NP (DT a)
                                  (ADJP (RB very) (JJ rare))
                                  (NN form))
                                (PP (IN of)
                                  (NP
                                    (NP (JJ pancreatic) (NN cancer))
                                    (SBAR
                                      (WHNP (WDT that))
                                      (S
                                        (VP (VBZ is)
                                          (ADJP (JJ curable)
                                            (PP (IN with)
                                              (NP (NN surgery)))))))))))))))))))))))
    (. .)))

nsubjpass(sedated-3, I-1)
auxpass(sedated-3, was-2)
root(ROOT-0, sedated-3)
cc(sedated-3, but-5)
nmod:poss(wife-7, my-6)
nsubj(was-10, wife-7)
nsubj(told-13, wife-7)
ref(wife-7, who-9)
acl:relcl(wife-7, was-10)
advmod(was-10, there-11)
conj:but(sedated-3, told-13)
dobj(told-13, me-14)
mark(started-27, that-15)
advmod(viewed-18, when-16)
nsubj(viewed-18, they-17)
advcl(started-27, viewed-18)
det(cells-20, the-19)
dobj(viewed-18, cells-20)
case(microscope-23, under-21)
det(microscope-23, a-22)
nmod:under(viewed-18, microscope-23)
det(doctors-26, the-25)
nsubj(started-27, doctors-26)
ccomp(told-13, started-27)
xcomp(started-27, crying-28)
mark(turned-31, because-29)
nsubj(turned-31, it-30)
nsubj(form-38, it-30)
advcl(crying-28, turned-31)
compound:prt(turned-31, out-32)
mark(form-38, to-33)
cop(form-38, be-34)
det(form-38, a-35)
advmod(rare-37, very-36)
amod(form-38, rare-37)
xcomp(turned-31, form-38)
case(cancer-41, of-39)
amod(cancer-41, pancreatic-40)
nmod:of(form-38, cancer-41)
nsubj(curable-44, cancer-41)
ref(cancer-41, that-42)
cop(curable-44, is-43)
acl:relcl(cancer-41, curable-44)
case(surgery-46, with-45)
nmod:with(curable-44, surgery-46)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD had)
        (NP (DT the) (NN surgery))))
    (CC and)
    (S
      (ADVP (RB thankfully))
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ fine))
        (ADVP (RB now))))
    (. .)))

nsubj(had-2, I-1)
root(ROOT-0, had-2)
det(surgery-4, the-3)
dobj(had-2, surgery-4)
cc(had-2, and-5)
advmod(fine-9, thankfully-6)
nsubj(fine-9, I-7)
cop(fine-9, 'm-8)
conj:and(had-2, fine-9)
advmod(fine-9, now-10)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJS closest))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP 've)
                (VP (VBN been)
                  (PP (TO to)
                    (S
                      (VP (VBG facing)
                        (NP (NN death))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP hope)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (NP
                (NP (DT the) (JJS closest))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP get)
                      (PP (IN for)
                        (NP (DT a) (JJ few)
                          (QP (RBR more))
                          (NNS decades))))))))))))
    (. .)))

nsubj(closest-4, This-1)
cop(closest-4, was-2)
det(closest-4, the-3)
root(ROOT-0, closest-4)
nsubj(facing-9, I-5)
aux(facing-9, 've-6)
cop(facing-9, been-7)
mark(facing-9, to-8)
acl:relcl(closest-4, facing-9)
dobj(facing-9, death-10)
cc(closest-4, and-12)
nsubj(hope-14, I-13)
conj:and(closest-4, hope-14)
nsubj(closest-18, it-15)
cop(closest-18, 's-16)
det(closest-18, the-17)
ccomp(hope-14, closest-18)
nsubj(get-20, I-19)
acl:relcl(closest-18, get-20)
case(decades-25, for-21)
det(decades-25, a-22)
amod(decades-25, few-23)
nummod(decades-25, more-24)
nmod:for(get-20, decades-25)

(ROOT
  (S
    (S
      (S
        (VP (VBG Having)
          (VP (VBN lived)
            (PP (IN through)
              (NP (PRP it))))))
      (, ,)
      (NP (PRP I))
      (VP (MD can)
        (ADVP (RB now))
        (VP (VB say)
          (NP (DT this))
          (PP (TO to)
            (NP (PRP you)))
          (PP (IN with)
            (NP
              (NP
                (ADJP
                  (NP (DT a) (RB bit))
                  (JJR more))
                (NN certainty))
              (PP (IN than)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (NN death))
                    (VP (VBD was)
                      (NP (DT a)
                        (ADJP
                          (ADJP (JJ useful))
                          (CC but)
                          (ADJP (RB purely) (JJ intellectual)))
                        (NN concept)))))))))))
    (: :)
    (S
      (NP (DT No) (NN one))
      (VP (VBZ wants)
        (S
          (VP (TO to)
            (VP (VB die))))))
    (. .)))

aux(lived-2, Having-1)
advcl(say-9, lived-2)
case(it-4, through-3)
nmod:through(lived-2, it-4)
nsubj(say-9, I-6)
aux(say-9, can-7)
advmod(say-9, now-8)
root(ROOT-0, say-9)
dobj(say-9, this-10)
case(you-12, to-11)
nmod:to(say-9, you-12)
case(certainty-17, with-13)
det(bit-15, a-14)
nmod:npmod(more-16, bit-15)
amod(certainty-17, more-16)
nmod:with(say-9, certainty-17)
mark(concept-27, than-18)
advmod(concept-27, when-19)
nsubj(concept-27, death-20)
cop(concept-27, was-21)
det(concept-27, a-22)
amod(concept-27, useful-23)
cc(useful-23, but-24)
advmod(intellectual-26, purely-25)
conj:but(useful-23, intellectual-26)
amod(concept-27, intellectual-26)
acl(certainty-17, concept-27)
neg(one-30, No-29)
nsubj(wants-31, one-30)
nsubj(die-33, one-30)
parataxis(say-9, wants-31)
mark(die-33, to-32)
xcomp(wants-31, die-33)

(ROOT
  (S
    (NP
      (NP (RB Even) (NNS people))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB go)
                  (PP (TO to)
                    (NP (NN heaven))))))))))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB die)
              (S
                (VP (TO to)
                  (VP (VB get)
                    (ADVP (RB there))))))))))
    (. .)))

advmod(people-2, Even-1)
nsubj(want-4, people-2)
nsubj(go-6, people-2)
nsubj(want-11, people-2)
nsubj(die-13, people-2)
nsubj(get-15, people-2)
ref(people-2, who-3)
acl:relcl(people-2, want-4)
mark(go-6, to-5)
xcomp(want-4, go-6)
case(heaven-8, to-7)
nmod:to(go-6, heaven-8)
aux(want-11, do-9)
neg(want-11, n't-10)
root(ROOT-0, want-11)
mark(die-13, to-12)
xcomp(want-11, die-13)
mark(get-15, to-14)
xcomp(die-13, get-15)
advmod(get-15, there-16)

(ROOT
  (S (CC And)
    (ADVP (RB yet))
    (NP (NN death))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN destination))
        (NP
          (NP (PRP we))
          (NP (DT all) (NN share)))))
    (. .)))

cc(destination-6, And-1)
advmod(destination-6, yet-2)
nsubj(destination-6, death-3)
cop(destination-6, is-4)
det(destination-6, the-5)
root(ROOT-0, destination-6)
dep(destination-6, we-7)
det(share-9, all-8)
dep(we-7, share-9)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (VBZ has)
      (ADVP (RB ever))
      (VP (VBN escaped)
        (NP (PRP it))))
    (. .)))

neg(one-2, No-1)
nsubj(escaped-5, one-2)
aux(escaped-5, has-3)
advmod(escaped-5, ever-4)
root(ROOT-0, escaped-5)
dobj(escaped-5, it-6)

(ROOT
  (S (CC And)
    (NP (DT that))
    (VP (VBZ is)
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (MD should)
            (VP (VB be)))))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (NN death))
          (VP (VBZ is)
            (ADJP (RB very) (JJ likely))
            (NP
              (NP (DT the)
                (ADJP (JJ single) (JJS best))
                (NN invention))
              (PP (IN of)
                (NP (NN life))))))))
    (. .)))

cc(is-3, And-1)
nsubj(is-3, that-2)
root(ROOT-0, is-3)
mark(be-7, as-4)
nsubj(be-7, it-5)
aux(be-7, should-6)
advcl(is-3, be-7)
mark(likely-13, because-9)
nsubj(likely-13, death-10)
cop(likely-13, is-11)
advmod(likely-13, very-12)
advcl(is-3, likely-13)
det(invention-17, the-14)
amod(invention-17, single-15)
dep(single-15, best-16)
dep(likely-13, invention-17)
case(life-19, of-18)
nmod:of(invention-17, life-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (NN life) (POS 's))
        (NN change) (NN agent)))
    (. .)))

nsubj(agent-6, It-1)
cop(agent-6, is-2)
nmod:poss(agent-6, life-3)
case(life-3, 's-4)
compound(agent-6, change-5)
root(ROOT-0, agent-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ clears)
      (PRT (RP out))
      (NP
        (NP (DT the)
          (ADJP (JJ old)
            (S
              (VP (TO to)
                (VP (VB make)))))
          (NN way))
        (PP (IN for)
          (NP (DT the) (JJ new)))))
    (. .)))

nsubj(clears-2, It-1)
root(ROOT-0, clears-2)
compound:prt(clears-2, out-3)
det(way-8, the-4)
amod(way-8, old-5)
mark(make-7, to-6)
xcomp(old-5, make-7)
dobj(clears-2, way-8)
case(new-11, for-9)
det(new-11, the-10)
nmod:for(way-8, new-11)

(ROOT
  (S
    (S
      (ADVP (RB Right) (RB now))
      (NP (DT the) (JJ new))
      (VP (VBZ is)
        (NP (PRP you))
        (PRN (, ,)
          (CC but)
          (ADVP (RB someday))
          (ADJP
            (ADJP (RB not) (RB too) (JJ long))
            (PP (IN from)
              (ADVP (RB now))))
          (, ,))))
    (NP (PRP you))
    (VP (MD will)
      (ADVP (RB gradually))
      (VP
        (VP (VB become)
          (NP (DT the) (JJ old)))
        (CC and)
        (VP (VB be)
          (VP (VBN cleared)
            (PRT (RP away))))))
    (. .)))

advmod(now-2, Right-1)
advmod(you-6, now-2)
det(new-4, the-3)
nsubj(you-6, new-4)
cop(you-6, is-5)
dep(become-19, you-6)
cc(long-12, but-8)
dep(long-12, someday-9)
neg(long-12, not-10)
advmod(long-12, too-11)
dep(you-6, long-12)
case(now-14, from-13)
advcl:from(long-12, now-14)
nsubj(become-19, you-16)
nsubjpass(cleared-24, you-16)
aux(become-19, will-17)
advmod(become-19, gradually-18)
root(ROOT-0, become-19)
det(old-21, the-20)
xcomp(become-19, old-21)
cc(become-19, and-22)
auxpass(cleared-24, be-23)
conj:and(become-19, cleared-24)
compound:prt(cleared-24, away-25)

(ROOT
  (S
    (S
      (NP (NNP Sorry))
      (VP (TO to)
        (VP (VB be)
          (ADJP (RB so) (JJ dramatic)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (RB quite) (JJ true))))
    (. .)))

nsubj(dramatic-5, Sorry-1)
mark(dramatic-5, to-2)
cop(dramatic-5, be-3)
advmod(dramatic-5, so-4)
root(ROOT-0, dramatic-5)
cc(dramatic-5, but-7)
nsubj(true-11, it-8)
cop(true-11, is-9)
advmod(true-11, quite-10)
conj:but(dramatic-5, true-11)

(ROOT
  (S
    (NP (PRP$ Your) (NN time))
    (VP (VBZ is)
      (ADJP (JJ limited))
      (, ,)
      (SBAR (IN so)
        (S
          (VP (VBP do) (RB n't)
            (VP (VB waste)
              (S
                (NP (PRP it))
                (VP (VBG living)
                  (NP
                    (NP (NN someone) (RB else) (POS 's))
                    (NN life)))))))))
    (. .)))

nmod:poss(time-2, Your-1)
nsubj(limited-4, time-2)
cop(limited-4, is-3)
root(ROOT-0, limited-4)
mark(waste-9, so-6)
aux(waste-9, do-7)
neg(waste-9, n't-8)
advcl(limited-4, waste-9)
nsubj(living-11, it-10)
dep(waste-9, living-11)
nmod:poss(life-15, someone-12)
advmod(someone-12, else-13)
case(someone-12, 's-14)
dobj(living-11, life-15)

(ROOT
  (S
    (S
      (VP (VBP Do) (RB n't)
        (VP (VB be)
          (VP (VBN trapped)
            (PP (IN by)
              (NP (NN dogma-which)))))))
    (VP (VBZ is)
      (VP (VBG living)
        (PP (IN with)
          (NP
            (NP (DT the) (NNS results))
            (PP (IN of)
              (NP
                (NP (JJ other) (NNS people) (POS 's))
                (NN thinking)))))))
    (. .)))

aux(trapped-4, Do-1)
neg(trapped-4, n't-2)
auxpass(trapped-4, be-3)
csubj(living-8, trapped-4)
case(dogma-which-6, by-5)
nmod:by(trapped-4, dogma-which-6)
aux(living-8, is-7)
root(ROOT-0, living-8)
case(results-11, with-9)
det(results-11, the-10)
nmod:with(living-8, results-11)
case(thinking-16, of-12)
amod(people-14, other-13)
nmod:poss(thinking-16, people-14)
case(people-14, 's-15)
nmod:of(results-11, thinking-16)

(ROOT
  (S
    (VP (VB Do) (RB n't)
      (VP (VB let)
        (S
          (NP
            (NP (DT the) (NN noise))
            (PP (IN of)
              (NP
                (NP (NNS others) (POS '))
                (NNS opinions))))
          (VP (VB drown)
            (PRT (RP out))
            (NP (PRP$ your) (JJ own) (JJ inner) (NN voice))))))
    (. .)))

aux(let-3, Do-1)
neg(let-3, n't-2)
root(ROOT-0, let-3)
det(noise-5, the-4)
nsubj(drown-10, noise-5)
case(opinions-9, of-6)
nmod:poss(opinions-9, others-7)
case(others-7, '-8)
nmod:of(noise-5, opinions-9)
ccomp(let-3, drown-10)
compound:prt(drown-10, out-11)
nmod:poss(voice-15, your-12)
amod(voice-15, own-13)
amod(voice-15, inner-14)
dobj(drown-10, voice-15)

(ROOT
  (S (CC And)
    (ADVP (RBS most) (JJ important))
    (, ,)
    (VP (VBP have)
      (NP (DT the) (NN courage)
        (S
          (VP (TO to)
            (VP (VB follow)
              (NP (PRP$ your) (NN heart)
                (CC and)
                (NN intuition)))))))
    (. .)))

cc(have-5, And-1)
advmod(important-3, most-2)
advmod(have-5, important-3)
root(ROOT-0, have-5)
det(courage-7, the-6)
dobj(have-5, courage-7)
mark(follow-9, to-8)
acl(courage-7, follow-9)
nmod:poss(heart-11, your-10)
dobj(follow-9, heart-11)
cc(heart-11, and-12)
dobj(follow-9, intuition-13)
conj:and(heart-11, intuition-13)

(ROOT
  (S
    (NP (PRP They))
    (ADVP (RB somehow))
    (VP
      (ADVP (RB already))
      (VBP know)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP you))
          (ADVP (RB truly))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB become))))))))
    (. .)))

nsubj(know-4, They-1)
advmod(know-4, somehow-2)
advmod(know-4, already-3)
root(ROOT-0, know-4)
dobj(want-8, what-5)
nsubj(become-10, what-5)
nsubj(want-8, you-6)
advmod(want-8, truly-7)
ccomp(know-4, want-8)
mark(become-10, to-9)
xcomp(want-8, become-10)

(ROOT
  (S
    (NP (NN Everything) (RB else))
    (VP (VBZ is)
      (ADJP (JJ secondary)))
    (. .)))

nsubj(secondary-4, Everything-1)
advmod(Everything-1, else-2)
cop(secondary-4, is-3)
root(ROOT-0, secondary-4)

