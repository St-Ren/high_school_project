(ROOT
  (NP (NN Money) (. .)))

root(ROOT-0, Money-1)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (NP (DT a) (JJ whole) (NN lifetime)
        (S
          (VP (TO to)
            (VP (VB earn) (, ,) (VB save) (, ,) (VB invest) (, ,)
              (CC and)
              (VB spend)
              (NP (PRP it)))))))
    (. .)))

nsubj(have-2, You-1)
root(ROOT-0, have-2)
det(lifetime-5, a-3)
amod(lifetime-5, whole-4)
dobj(have-2, lifetime-5)
mark(earn-7, to-6)
acl(lifetime-5, earn-7)
acl(lifetime-5, save-9)
conj:and(earn-7, save-9)
acl(lifetime-5, invest-11)
conj:and(earn-7, invest-11)
cc(earn-7, and-13)
acl(lifetime-5, spend-14)
conj:and(earn-7, spend-14)
dobj(earn-7, it-15)

(ROOT
  (S (RB Yet) (, ,)
    (SBAR (IN in) (NN order)
      (S
        (VP (TO to)
          (VP
            (VP (VB avoid)
              (NP (JJ costly) (NNS mistakes)))
            (CC and)
            (VP (VBN wasted)
              (NP (NN time)))))))
    (, ,)
    (NP (PRP you))
    (ADVP (RB probably))
    (VP (MD should)
      (VP (VB learn)
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB do)
                (NP
                  (NP (DT these))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP you))
                      (VP (VBP are)
                        (ADVP (RB still))
                        (ADJP (JJ young))))))))))))
    (. .)))

advmod(learn-16, Yet-1)
mark(avoid-6, in-3)
mwe(in-3, order-4)
mark(avoid-6, to-5)
advcl(learn-16, avoid-6)
amod(mistakes-8, costly-7)
dobj(avoid-6, mistakes-8)
cc(avoid-6, and-9)
conj:and(avoid-6, wasted-10)
advcl(learn-16, wasted-10)
dobj(wasted-10, time-11)
nsubj(learn-16, you-13)
advmod(learn-16, probably-14)
aux(learn-16, should-15)
root(ROOT-0, learn-16)
advmod(do-19, how-17)
mark(do-19, to-18)
ccomp(learn-16, do-19)
dobj(do-19, these-20)
advmod(young-25, when-21)
nsubj(young-25, you-22)
cop(young-25, are-23)
advmod(young-25, still-24)
acl:relcl(these-20, young-25)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (PRP$ your) (NN opportunity)
        (S
          (VP (TO to)
            (VP (VB learn)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (NP
                        (NP (DT the) (JJS most))
                        (PP (IN of)
                          (NP (DT every) (NN penny))))
                      (SBAR (IN so)
                        (S
                          (NP (PRP you))
                          (VP (MD can)
                            (VP (VB achieve)
                              (NP
                                (NP (DT the) (JJ financial) (NN independence))
                                (SBAR
                                  (S
                                    (NP (PRP you))
                                    (VP (VBP wantwhen)
                                      (SBAR
                                        (S
                                          (NP (PRP you))
                                          (VP (VBP need)
                                            (NP (PRP it))))))))))))))))))))))
    (. .)))

nsubj(opportunity-4, This-1)
cop(opportunity-4, is-2)
nmod:poss(opportunity-4, your-3)
root(ROOT-0, opportunity-4)
mark(learn-6, to-5)
acl(opportunity-4, learn-6)
advmod(make-9, how-7)
mark(make-9, to-8)
ccomp(learn-6, make-9)
det(most-11, the-10)
dobj(make-9, most-11)
case(penny-14, of-12)
det(penny-14, every-13)
nmod:of(most-11, penny-14)
mark(achieve-18, so-15)
nsubj(achieve-18, you-16)
aux(achieve-18, can-17)
advcl(make-9, achieve-18)
det(independence-21, the-19)
amod(independence-21, financial-20)
dobj(achieve-18, independence-21)
nsubj(wantwhen-23, you-22)
acl:relcl(independence-21, wantwhen-23)
nsubj(need-25, you-24)
ccomp(wantwhen-23, need-25)
dobj(need-25, it-26)

(ROOT
  (S
    (NP
      (NP (DT The) (CD two) (JJS most) (JJ basic) (NNS things))
      (SBAR
        (S
          (VP (TO to)
            (VP (VB achieve)
              (NP (DT this)))))))
    (VP (VBP are)
      (VP (VBG setting)
        (NP (NNS goals)
          (CC and)
          (NN budgeting))))
    (. .)))

det(things-5, The-1)
nummod(things-5, two-2)
amod(things-5, most-3)
amod(things-5, basic-4)
nsubj(setting-10, things-5)
mark(achieve-7, to-6)
acl(things-5, achieve-7)
dobj(achieve-7, this-8)
aux(setting-10, are-9)
root(ROOT-0, setting-10)
dobj(setting-10, goals-11)
cc(goals-11, and-12)
dobj(setting-10, budgeting-13)
conj:and(goals-11, budgeting-13)

(ROOT
  (S
    (S
      (VP (VBG Setting)
        (NP (NNS goals))))
    (NP (NNP Goal) (NN setting))
    (VP (VBZ is)
      (NP (PRP$ your) (NN chance)
        (S
          (VP (TO to)
            (VP (VB figure)
              (PRT (RP out))
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP you))
                  (ADVP (RB really))
                  (VP (VBP want)
                    (S
                      (VP
                        (VP (TO to)
                          (VP (VB do)
                            (PP (IN with)
                              (NP (PRP$ your) (NN money)))))
                        (CC and)
                        (VP (TO to)
                          (VP (VB get)
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (NP (PRP you))
                                (VP (VBP want)
                                  (PP (IN without)
                                    (S
                                      (VP (VBG having)
                                        (S
                                          (VP (TO to)
                                            (VP (VB borrow)
                                              (PP (IN for)
                                                (NP (PRP it))))))))))))))))))))))))
    (. .)))

dep(chance-7, Setting-1)
dobj(Setting-1, goals-2)
compound(setting-4, Goal-3)
nsubj(chance-7, setting-4)
cop(chance-7, is-5)
nmod:poss(chance-7, your-6)
root(ROOT-0, chance-7)
mark(figure-9, to-8)
acl(chance-7, figure-9)
compound:prt(figure-9, out-10)
dobj(want-14, what-11)
nsubj(want-14, you-12)
advmod(want-14, really-13)
ccomp(figure-9, want-14)
mark(do-16, to-15)
ccomp(want-14, do-16)
case(money-19, with-17)
nmod:poss(money-19, your-18)
nmod:with(do-16, money-19)
cc(do-16, and-20)
mark(get-22, to-21)
ccomp(want-14, get-22)
conj:and(do-16, get-22)
dobj(want-25, what-23)
nsubj(want-25, you-24)
ccomp(get-22, want-25)
mark(having-27, without-26)
advcl(want-25, having-27)
mark(borrow-29, to-28)
xcomp(having-27, borrow-29)
case(it-31, for-30)
nmod:for(borrow-29, it-31)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP
          (NP (CD three) (JJ basic) (NNS types))
          (PP (IN of)
            (NP (NNS goals))))
        (: :)
        (NP
          (NP
            (NP (JJ short-term))
            (PRN (-LRB- -LRB-)
              (ADJP (JJ achievable)
                (PP (IN in)
                  (NP
                    (QP (JJR less) (IN than) (DT a))
                    (NN year))))
              (-RRB- -RRB-)))
          (, ,)
          (NP
            (NP (NN mid-term))
            (PRN (-LRB- -LRB-)
              (ADJP (JJ achievable)
                (PP (IN in)
                  (NP
                    (QP (CD one) (TO to) (CD five))
                    (NNS years))))
              (-RRB- -RRB-)))
          (, ,)
          (CC and)
          (NP
            (NP (JJ long-term))
            (PRN (-LRB- -LRB-)
              (ADJP (JJ achievable)
                (PP (IN in)
                  (NP
                    (QP (JJR more) (IN than) (CD five))
                    (NNS years))))
              (-RRB- -RRB-))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nummod(types-5, three-3)
amod(types-5, basic-4)
nsubj(are-2, types-5)
case(goals-7, of-6)
nmod:of(types-5, goals-7)
dep(types-5, short-term-9)
dep(short-term-9, achievable-11)
case(year-16, in-12)
advmod(a-15, less-13)
mwe(less-13, than-14)
nummod(year-16, a-15)
nmod:in(achievable-11, year-16)
dep(types-5, mid-term-19)
conj:and(short-term-9, mid-term-19)
dep(mid-term-19, achievable-21)
case(years-26, in-22)
compound(five-25, one-23)
dep(five-25, to-24)
nummod(years-26, five-25)
nmod:in(achievable-21, years-26)
cc(short-term-9, and-29)
dep(types-5, long-term-30)
conj:and(short-term-9, long-term-30)
dep(long-term-30, achievable-32)
case(years-37, in-33)
advmod(five-36, more-34)
mwe(more-34, than-35)
nummod(years-37, five-36)
nmod:in(achievable-32, years-37)

(ROOT
  (S
    (SBAR
      (ADVP (RB Determine))
      (WHADVP (WRB how) (RB much))
      (S
        (NP (PRP$ your) (NNS goals))
        (VP (MD will)
          (VP (VB cost)
            (NP (PRP you))
            (CC and)
            (NP (DT the) (NNS dates))))))
    (NP (PRP you))
    (VP (VBP want)
      (NP (PRP them))
      (PP (IN by)))
    (. .)))

advmod(cost-7, Determine-1)
advmod(much-3, how-2)
advmod(cost-7, much-3)
nmod:poss(goals-5, your-4)
nsubj(cost-7, goals-5)
aux(cost-7, will-6)
advcl(want-13, cost-7)
dobj(cost-7, you-8)
cc(cost-7, and-9)
det(dates-11, the-10)
conj:and(cost-7, dates-11)
advcl(want-13, dates-11)
nsubj(want-13, you-12)
root(ROOT-0, want-13)
dobj(want-13, them-14)
nmod(want-13, by-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (NP (JJ multiple) (NNS goals)))))
    (, ,)
    (NP (PRP you))
    (VP (MD can)
      (VP (CC either)
        (VP (VB work)
          (PP (IN toward)
            (NP (PRP them)))
          (ADVP (DT all) (IN at) (RB once)))
        (CC or)
        (VP (VB concentrate)
          (PP (IN on)
            (NP (CD one))))
        (CC and)
        (ADVP (RB then))
        (VP (VB move)
          (PP (TO to)
            (NP (DT the) (JJ next))))))
    (. .)))

mark(have-3, If-1)
nsubj(have-3, you-2)
advcl(work-10, have-3)
amod(goals-5, multiple-4)
dobj(have-3, goals-5)
nsubj(work-10, you-7)
nsubj(concentrate-17, you-7)
nsubj(move-22, you-7)
aux(work-10, can-8)
cc:preconj(work-10, either-9)
root(ROOT-0, work-10)
case(them-12, toward-11)
nmod:toward(work-10, them-12)
dep(once-15, all-13)
case(once-15, at-14)
advmod(work-10, once-15)
cc(work-10, or-16)
conj:or(work-10, concentrate-17)
case(one-19, on-18)
nmod:on(concentrate-17, one-19)
cc(work-10, and-20)
advmod(move-22, then-21)
conj:and(work-10, move-22)
case(next-25, to-23)
det(next-25, the-24)
nmod:to(move-22, next-25)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB use)
        (S
          (NP (DT the) (NNP Financial) (NNP Goals) (NNP Chart))
          (VP (TO to)
            (VP (VB list)
              (NP (PRP$ your) (NNS goals)))))))
    (. .)))

nsubj(use-3, You-1)
aux(use-3, can-2)
root(ROOT-0, use-3)
det(Chart-7, the-4)
compound(Chart-7, Financial-5)
compound(Chart-7, Goals-6)
dobj(use-3, Chart-7)
nsubj(list-9, Chart-7)
mark(list-9, to-8)
xcomp(use-3, list-9)
nmod:poss(goals-11, your-10)
dobj(list-9, goals-11)

(ROOT
  (SBARQ
    (WHADJP (WRB How) (JJ much))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB need)
        (S
          (VP (TO to)
            (VP (VB put)
              (ADVP (RB aside))
              (NP (DT each) (NN month)))))))
    (. ?)))

advmod(much-2, How-1)
dep(need-5, much-2)
aux(need-5, do-3)
nsubj(need-5, you-4)
nsubj(put-7, you-4)
root(ROOT-0, need-5)
mark(put-7, to-6)
xcomp(need-5, put-7)
advmod(put-7, aside-8)
det(month-10, each-9)
nmod:tmod(put-7, month-10)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (JJ short) (: -)
          (CC and)
          (JJ mid-term) (NNS goals)))
      (, ,)
      (NP (DT the) (NN calculation))
      (VP (VBZ is)
        (ADJP (JJ simple))))
    (: :)
    (S
      (NP
        (NP (DT the) (NN price))
        (VP (VBN divided)
          (PP (IN by)
            (NP
              (NP (DT the) (NNS months))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP have)
                    (S
                      (VP (TO to)
                        (VP (VB save)))))))))))
      (VP (VBZ equals)
        (SBAR
          (WHADJP (WRB how) (JJ much))
          (S
            (NP (PRP you))
            (VP (VBP need)
              (S
                (VP (TO to)
                  (VP (VB put)
                    (ADVP (RB aside))
                    (NP (DT each) (NN month))))))))))
    (. .)))

case(short-2, For-1)
nmod:for(simple-11, short-2)
cc(short-2, and-4)
amod(goals-6, mid-term-5)
conj:and(short-2, goals-6)
nmod:for(simple-11, goals-6)
det(calculation-9, the-8)
nsubj(simple-11, calculation-9)
cop(simple-11, is-10)
root(ROOT-0, simple-11)
det(price-14, the-13)
nsubj(equals-23, price-14)
acl(price-14, divided-15)
case(months-18, by-16)
det(months-18, the-17)
nmod:by(divided-15, months-18)
nsubj(have-20, you-19)
nsubj(save-22, you-19)
acl:relcl(months-18, have-20)
mark(save-22, to-21)
xcomp(have-20, save-22)
parataxis(simple-11, equals-23)
advmod(much-25, how-24)
dep(need-27, much-25)
nsubj(need-27, you-26)
nsubj(put-29, you-26)
ccomp(equals-23, need-27)
mark(put-29, to-28)
xcomp(need-27, put-29)
advmod(put-29, aside-30)
det(month-32, each-31)
nmod:tmod(put-29, month-32)

(ROOT
  (S
    (PP (IN For)
      (NP (JJ long-term) (NNS goals)))
    (, ,)
    (NP (PRP you))
    (VP (MD may)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB factor)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN interest))
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBP expect)
                        (S
                          (VP (TO to)
                            (VP (VB earn)
                              (PP (IN on)
                                (NP (PRP$ your) (NNS savings))))))))))))))))
    (. .)))

case(goals-3, For-1)
amod(goals-3, long-term-2)
nmod:for(want-7, goals-3)
nsubj(want-7, you-5)
nsubj(factor-9, you-5)
aux(want-7, may-6)
root(ROOT-0, want-7)
mark(factor-9, to-8)
xcomp(want-7, factor-9)
case(interest-12, in-10)
det(interest-12, the-11)
nmod:in(factor-9, interest-12)
nsubj(expect-14, you-13)
nsubj(earn-16, you-13)
acl:relcl(interest-12, expect-14)
mark(earn-16, to-15)
xcomp(expect-14, earn-16)
case(savings-19, on-17)
nmod:poss(savings-19, your-18)
nmod:on(earn-16, savings-19)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB use)
        (NP (JJ free) (JJ online) (JJ financial) (NNS calculators))
        (S
          (VP (TO to)
            (VP (VB determine)
              (SBAR
                (WHADJP (WRB how) (JJ much))
                (S
                  (NP (PRP you))
                  (VP (VBP need)
                    (S
                      (VP (TO to)
                        (VP (VB put)
                          (ADVP (RB aside))
                          (NP (DT each) (NN month)))))))))))))
    (. .)))

nsubj(use-3, You-1)
aux(use-3, can-2)
root(ROOT-0, use-3)
amod(calculators-7, free-4)
amod(calculators-7, online-5)
amod(calculators-7, financial-6)
dobj(use-3, calculators-7)
mark(determine-9, to-8)
advcl(use-3, determine-9)
advmod(much-11, how-10)
dep(need-13, much-11)
nsubj(need-13, you-12)
nsubj(put-15, you-12)
ccomp(determine-9, need-13)
mark(put-15, to-14)
xcomp(need-13, put-15)
advmod(put-15, aside-16)
det(month-18, each-17)
nmod:tmod(put-15, month-18)

(ROOT
  (SBARQ
    (WHADJP (WRB How) (JJ much))
    (SQ (MD will)
      (NP (PRP I))
      (VP (VB need)
        (S
          (VP (TO to)
            (VP (VB save)
              (PP (IN for)
                (NP (DT a) (JJ major) (NN purchase))))))))
    (. ?)))

advmod(much-2, How-1)
dep(need-5, much-2)
aux(need-5, will-3)
nsubj(need-5, I-4)
nsubj(save-7, I-4)
root(ROOT-0, need-5)
mark(save-7, to-6)
xcomp(need-5, save-7)
case(purchase-11, for-8)
det(purchase-11, a-9)
amod(purchase-11, major-10)
nmod:for(save-7, purchase-11)

(ROOT
  (NP
    (NP (NNP Compute))
    (: :)
    (NP
      (NP (NNP Need))
      (SBAR
        (S
          (VP (TO to)
            (VP (VB save)
              (NP ($ $) (CD 3,849.63))
              (NP (DT each) (NN month))
              (PP (IN for)
                (NP (CD 5) (NNS years))))))))
    (. .)))

root(ROOT-0, Compute-1)
dep(Compute-1, Need-3)
mark(save-5, to-4)
acl(Need-3, save-5)
dep(3,849.63-7, $-6)
dobj(save-5, 3,849.63-7)
det(month-9, each-8)
nmod:tmod(save-5, month-9)
case(years-12, for-10)
nummod(years-12, 5-11)
nmod:for(save-5, years-12)

(ROOT
  (NP (FW Budgeting) (. .)))

root(ROOT-0, Budgeting-1)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP
          (NP (DT the) (NN idea))
          (PP (IN of)
            (NP (NN budgeting))))
        (VP (MD may)
          (VP (VB sound)
            (ADJP (JJ overwhelming))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB just))
      (VP (VBG knowing)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP have)
              (S
                (VP
                  (VP (VBG coming)
                    (PRT (RP in)))
                  (CC and)
                  (VP (VBG restricting)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ goes)
                          (PRT (RP out)))))))))))))
    (. .)))

mark(sound-7, While-1)
det(idea-3, the-2)
nsubj(sound-7, idea-3)
case(budgeting-5, of-4)
nmod:of(idea-3, budgeting-5)
aux(sound-7, may-6)
advcl(knowing-13, sound-7)
xcomp(sound-7, overwhelming-8)
nsubj(knowing-13, it-10)
aux(knowing-13, is-11)
advmod(knowing-13, just-12)
root(ROOT-0, knowing-13)
dobj(have-16, what-14)
nsubj(have-16, you-15)
ccomp(knowing-13, have-16)
ccomp(have-16, coming-17)
compound:prt(coming-17, in-18)
cc(coming-17, and-19)
ccomp(have-16, restricting-20)
conj:and(coming-17, restricting-20)
nsubj(goes-22, what-21)
ccomp(restricting-20, goes-22)
compound:prt(goes-22, out-23)

(ROOT
  (S
    (NP (JJ well-designed) (NN budget))
    (VP (VBZ allows)
      (S
        (NP (PRP you))
        (VP (TO to)
          (VP (VB make)
            (SBAR
              (S
                (NP
                  (NP (DT the) (JJS most))
                  (PP (IN of)
                    (NP (PRP$ your) (NN moneyyou))))
                (VP (MD will)
                  (VP
                    (VP (VB reduce)
                      (NP (PRP$ your) (JJ wasteful) (NN spending)))
                    (CC and)
                    (VP (VB be)
                      (ADJP (JJ able)
                        (S
                          (VP (TO to)
                            (VP (VB afford)
                              (NP
                                (NP (DT the) (NNS things))
                                (SBAR
                                  (S
                                    (NP (PRP you))
                                    (VP (VBP need))))))))))))))))))
    (. .)))

amod(budget-2, well-designed-1)
nsubj(allows-3, budget-2)
root(ROOT-0, allows-3)
dobj(allows-3, you-4)
nsubj(make-6, you-4)
mark(make-6, to-5)
xcomp(allows-3, make-6)
det(most-8, the-7)
nsubj(reduce-13, most-8)
nsubj(able-19, most-8)
nsubj(afford-21, most-8)
case(moneyyou-11, of-9)
nmod:poss(moneyyou-11, your-10)
nmod:of(most-8, moneyyou-11)
aux(reduce-13, will-12)
ccomp(make-6, reduce-13)
nmod:poss(spending-16, your-14)
amod(spending-16, wasteful-15)
dobj(reduce-13, spending-16)
cc(reduce-13, and-17)
cop(able-19, be-18)
ccomp(make-6, able-19)
conj:and(reduce-13, able-19)
mark(afford-21, to-20)
xcomp(able-19, afford-21)
det(things-23, the-22)
dobj(afford-21, things-23)
nsubj(need-25, you-24)
acl:relcl(things-23, need-25)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB design)
          (NP (DT a) (NN budget)))))
    (, ,)
    (NP (PRP you))
    (VP (MD can)
      (VP (VB use)
        (NP
          (NP
            (NP (DT the) (JJ old-fashioned) (NN system))
            (PRN (-LRB- -LRB-)
              (NP
                (NP (NN pen))
                (CC and)
                (NP (NN paper)))
              (-RRB- -RRB-)))
          (, ,)
          (NP (DT a) (NN computer) (NN spreadsheet))
          (, ,)
          (CC or)
          (NP (DT a) (NN budgeting) (NN software)))))
    (. .)))

mark(design-2, To-1)
advcl(use-8, design-2)
det(budget-4, a-3)
dobj(design-2, budget-4)
nsubj(use-8, you-6)
aux(use-8, can-7)
root(ROOT-0, use-8)
det(system-11, the-9)
amod(system-11, old-fashioned-10)
dobj(use-8, system-11)
dep(system-11, pen-13)
cc(pen-13, and-14)
dep(system-11, paper-15)
conj:and(pen-13, paper-15)
det(spreadsheet-20, a-18)
compound(spreadsheet-20, computer-19)
dobj(use-8, spreadsheet-20)
conj:or(system-11, spreadsheet-20)
cc(system-11, or-22)
det(software-25, a-23)
compound(software-25, budgeting-24)
dobj(use-8, software-25)
conj:or(system-11, software-25)

(ROOT
  (S
    (NP (DT The) (NN method))
    (VP (VBZ matters)
      (ADVP (RBR less))
      (PP (IN than)
        (NP (DT the) (NN result))))
    (. .)))

det(method-2, The-1)
nsubj(matters-3, method-2)
root(ROOT-0, matters-3)
advmod(matters-3, less-4)
case(result-7, than-5)
det(result-7, the-6)
nmod:than(matters-3, result-7)

(ROOT
  (FRAG
    (ADJP (JJ Begin)
      (PP (IN with)
        (NP
          (NP (PRP$ your) (NN income))
          (PRN (-LRB- -LRB-)
            (VP (VBG using)
              (NP (DT the) (NN budget) (NN worksheet)))
            (-RRB- -RRB-)))))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP it))
        (VP (MD will)
          (VP (VB determine)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (MD can)
                  (VP (VB afford)
                    (S
                      (VP (TO to)
                        (VP (VB spend)
                          (CC and)
                          (VB save)
                          (NP (DT each) (NN month)))))))))))))
    (. .)))

root(ROOT-0, Begin-1)
case(income-4, with-2)
nmod:poss(income-4, your-3)
nmod:with(Begin-1, income-4)
dep(income-4, using-6)
det(worksheet-9, the-7)
compound(worksheet-9, budget-8)
dobj(using-6, worksheet-9)
mark(determine-15, as-12)
nsubj(determine-15, it-13)
aux(determine-15, will-14)
dep(Begin-1, determine-15)
dobj(spend-21, what-16)
nsubj(afford-19, you-17)
nsubj(spend-21, you-17)
nsubj(save-23, you-17)
aux(afford-19, can-18)
ccomp(determine-15, afford-19)
mark(spend-21, to-20)
xcomp(afford-19, spend-21)
cc(spend-21, and-22)
xcomp(afford-19, save-23)
conj:and(spend-21, save-23)
det(month-25, each-24)
nmod:tmod(spend-21, month-25)

(ROOT
  (S
    (S
      (VP (VBG Total)
        (PRT (RP up))
        (NP (DT every) (JJ net)
          (PRN (-LRB- -LRB-)
            (VP
              (ADVP (RB already))
              (VBN taxed))
            (-RRB- -RRB-))
          (NN dollar))))
    (NP (PRP you))
    (VP (VBP make)
      (PP (IN in)
        (NP (DT a) (NN month))))
    (. .)))

dep(make-11, Total-1)
compound:prt(Total-1, up-2)
det(dollar-9, every-3)
amod(dollar-9, net-4)
advmod(taxed-7, already-6)
dep(dollar-9, taxed-7)
dobj(Total-1, dollar-9)
nsubj(make-11, you-10)
root(ROOT-0, make-11)
case(month-14, in-12)
det(month-14, a-13)
nmod:in(make-11, month-14)

(ROOT
  (S
    (ADVP (RB Now))
    (VP (VB move)
      (PRT (RP on))
      (PP (TO to)
        (NP (PRP$ your) (NNS expenses))))
    (. .)))

advmod(move-2, Now-1)
root(ROOT-0, move-2)
compound:prt(move-2, on-3)
case(expenses-6, to-4)
nmod:poss(expenses-6, your-5)
nmod:to(move-2, expenses-6)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (VP (VBG developing)
          (NP (DT this) (NN section)))))
    (, ,)
    (NP (PRP you))
    (VP (MD should)
      (VP (VB have)
        (NP
          (NP
            (NP (CD two) (NNS columns))
            (SBAR
              (S
                (VP (TO to)
                  (VP (VB work)
                    (PP (NN witha)
                      (NP (`` ``) (JJ current) ('' '') (NN column)))))))
            (, ,)
            (SBAR
              (WHPP (IN for)
                (WHNP (WP what)))
              (S
                (NP (PRP you))
                (VP (VBP have)
                  (VP (VBN been)
                    (VP (VBG spending)
                      (NP (PRP$ your) (NN money))
                      (PRT (RP on)))))))
            (, ,))
          (CC and)
          (NP
            (NP (DT a) (`` ``) (JJ proposed) ('' '') (NN column))
            (, ,)
            (PP (IN for)
              (NP (DT the) (NNS changes)))
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP want)
                  (S
                    (VP (TO to)
                      (VP (VB make)))))))))))
    (. .)))

advmod(developing-2, When-1)
advcl(have-8, developing-2)
det(section-4, this-3)
dobj(developing-2, section-4)
nsubj(have-8, you-6)
aux(have-8, should-7)
root(ROOT-0, have-8)
nummod(columns-10, two-9)
dobj(have-8, columns-10)
nmod:for(spending-24, columns-10)
mark(work-12, to-11)
acl(columns-10, work-12)
dep(column-17, witha-13)
amod(column-17, current-15)
nmod(work-12, column-17)
case(what-20, for-19)
ref(columns-10, what-20)
nsubj(spending-24, you-21)
aux(spending-24, have-22)
aux(spending-24, been-23)
acl:relcl(columns-10, spending-24)
nmod:poss(money-26, your-25)
dobj(spending-24, money-26)
compound:prt(spending-24, on-27)
cc(columns-10, and-29)
det(column-34, a-30)
amod(column-34, proposed-32)
conj:and(columns-10, column-34)
nmod:for(spending-24, column-34)
case(changes-38, for-36)
det(changes-38, the-37)
nmod:for(column-34, changes-38)
nsubj(want-40, you-39)
nsubj(make-42, you-39)
acl:relcl(column-34, want-40)
mark(make-42, to-41)
xcomp(want-40, make-42)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (JJ current) (NN column))
        (, ,)
        (NP (NN list) (NN everything))))
    (NP (PRP you))
    (VP (VBP spend)
      (NP (PRP$ your) (NN money))
      (PP (IN on)
        (PP (IN in)
          (NP (DT a) (NN month)))))
    (. .)))

case(column-4, In-1)
det(column-4, the-2)
amod(column-4, current-3)
nmod:in(spend-9, column-4)
compound(everything-7, list-6)
appos(column-4, everything-7)
nsubj(spend-9, you-8)
root(ROOT-0, spend-9)
nmod:poss(money-11, your-10)
dobj(spend-9, money-11)
case(month-15, on-12)
case(month-15, in-13)
det(month-15, a-14)
nmod:in(spend-9, month-15)

(ROOT
  (S
    (VP (VB Include)
      (NP
        (NP (JJ periodic) (NNS expenses))
        (, ,)
        (PP (JJ such) (IN as)
          (NP
            (NP (NN birthday) (NNS gifts))
            (, ,)
            (NP (NN weekend) (NNS trips))
            (, ,)
            (CC or)
            (NP (NN concert) (NNS tickets))))
        (ADVP (RB as) (RB well))))
    (. .)))

root(ROOT-0, Include-1)
amod(expenses-3, periodic-2)
dobj(Include-1, expenses-3)
case(gifts-8, such-5)
mwe(such-5, as-6)
compound(gifts-8, birthday-7)
nmod:such_as(expenses-3, gifts-8)
compound(trips-11, weekend-10)
nmod:such_as(expenses-3, trips-11)
conj:or(gifts-8, trips-11)
cc(gifts-8, or-13)
compound(tickets-15, concert-14)
nmod:such_as(expenses-3, tickets-15)
conj:or(gifts-8, tickets-15)
advmod(expenses-3, as-16)
mwe(as-16, well-17)

(ROOT
  (S
    (NP
      (NP (RB Just) (JJ total))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP you))
          (VP (VBP think)
            (NP (PRP you))))))
    (VP (VBP spend)
      (PRT (RP in))
      (NP (DT a) (NN year))
      (, ,)
      (CC and)
      (VBP divide)
      (NP
        (NP (DT the) (NN number))
        (PP (IN by)
          (NP (CD 12))))
      (S
        (VP (TO to)
          (VP (VB get)
            (NP (DT a) (JJ monthly) (NN figure))))))
    (. .)))

advmod(total-2, Just-1)
dobj(think-5, total-2)
nsubj(spend-7, total-2)
nsubj(divide-13, total-2)
ref(total-2, what-3)
nsubj(think-5, you-4)
acl:relcl(total-2, think-5)
dobj(think-5, you-6)
root(ROOT-0, spend-7)
compound:prt(spend-7, in-8)
det(year-10, a-9)
nmod:tmod(spend-7, year-10)
cc(spend-7, and-12)
conj:and(spend-7, divide-13)
det(number-15, the-14)
dobj(spend-7, number-15)
case(12-17, by-16)
nmod:by(number-15, 12-17)
mark(get-19, to-18)
advcl(spend-7, get-19)
det(figure-22, a-20)
amod(figure-22, monthly-21)
dobj(get-19, figure-22)

(ROOT
  (S
    (VP (VB Do) (RB n't)
      (VP (VB forget)
        (S
          (VP (TO to)
            (VP (VB include)
              (NP (NN money))
              (PP (IN for)
                (NP
                  (NP
                    (NP (NN savingsboth))
                    (PP (IN for)
                      (NP (PRP$ your) (NNS goals))))
                  (CC and)
                  (NP
                    (NP (NN emergency))
                    (, ,)
                    (NP (JJ unexpected) (NNS expenses))))))))))
    (. .)))

aux(forget-3, Do-1)
neg(forget-3, n't-2)
root(ROOT-0, forget-3)
mark(include-5, to-4)
xcomp(forget-3, include-5)
dobj(include-5, money-6)
case(savingsboth-8, for-7)
nmod:for(include-5, savingsboth-8)
case(goals-11, for-9)
nmod:poss(goals-11, your-10)
nmod:for(savingsboth-8, goals-11)
cc(savingsboth-8, and-12)
nmod:for(include-5, emergency-13)
conj:and(savingsboth-8, emergency-13)
amod(expenses-16, unexpected-15)
appos(emergency-13, expenses-16)

(ROOT
  (NP (JJ Monthly) (NN Income) (. .)))

amod(Income-2, Monthly-1)
root(ROOT-0, Income-2)

(ROOT
  (S
    (VP (VB Allowance))
    (. .)))

root(ROOT-0, Allowance-1)

(ROOT
  (NP (NN Student) (NNS loans) (. .)))

compound(loans-2, Student-1)
root(ROOT-0, loans-2)

(ROOT
  (NP (NNP TOTAL) (NNP PER) (NNP MONTH) (. .)))

compound(MONTH-3, TOTAL-1)
compound(MONTH-3, PER-2)
root(ROOT-0, MONTH-3)

(ROOT
  (FRAG
    (NP (JJ Monthly) (NNS Expenses))
    (. .)))

amod(Expenses-2, Monthly-1)
root(ROOT-0, Expenses-2)

(ROOT
  (S
    (VP (VB Water/Garbage))
    (. .)))

root(ROOT-0, Water/Garbage-1)

(ROOT
  (S
    (VP (VB Cellphone))
    (. .)))

root(ROOT-0, Cellphone-1)

(ROOT
  (NP
    (NP (NN Internet))
    (NP (NN access))
    (. .)))

root(ROOT-0, Internet-1)
dep(Internet-1, access-2)

(ROOT
  (S
    (VP (VB Health/Life)
      (NP (NN insurance)))
    (. .)))

root(ROOT-0, Health/Life-1)
dobj(Health/Life-1, insurance-2)

(ROOT
  (S
    (NP (NNP Prescriptions/Doctor))
    (VP (VBZ visits))
    (. .)))

nsubj(visits-2, Prescriptions/Doctor-1)
root(ROOT-0, visits-2)

(ROOT
  (NP (NNS Tuition/Lessons) (. .)))

root(ROOT-0, Tuition/Lessons-1)

(ROOT
  (S
    (VP (VB Beauty/Barber))
    (. .)))

root(ROOT-0, Beauty/Barber-1)

(ROOT
  (NP (NN Movies/Music) (. .)))

root(ROOT-0, Movies/Music-1)

(ROOT
  (S
    (VP (VBG Dining)
      (PRT (RP out)))
    (. .)))

root(ROOT-0, Dining-1)
compound:prt(Dining-1, out-2)

(ROOT
  (S
    (VP (VB Sports/Hobbies/Gym))
    (. .)))

root(ROOT-0, Sports/Hobbies/Gym-1)

(ROOT
  (S
    (VP (VB Vacations/Travel))
    (. .)))

root(ROOT-0, Vacations/Travel-1)

(ROOT
  (NP (NNS Books/Magazines) (. .)))

root(ROOT-0, Books/Magazines-1)

(ROOT
  (S
    (NP (NNP Clothing))
    (VP (VBZ purchases))
    (. .)))

nsubj(purchases-2, Clothing-1)
root(ROOT-0, purchases-2)

(ROOT
  (NP (NNS Gifts/Cards) (. .)))

root(ROOT-0, Gifts/Cards-1)

(ROOT
  (NP
    (NP (NNP Savings))
    (PRN (-LRB- -LRB-)
      (NP (NN emergency) (NN account))
      (-RRB- -RRB-))
    (. .)))

root(ROOT-0, Savings-1)
compound(account-4, emergency-3)
appos(Savings-1, account-4)

(ROOT
  (NP
    (NP (NNP Savings))
    (PRN (-LRB- -LRB-)
      (NP (NNS goals))
      (-RRB- -RRB-))
    (. .)))

root(ROOT-0, Savings-1)
appos(Savings-1, goals-3)

(ROOT
  (NP (NNP TOTAL) (NNP PER) (NNP MONTH) (. .)))

compound(MONTH-3, TOTAL-1)
compound(MONTH-3, PER-2)
root(ROOT-0, MONTH-3)

(ROOT
  (NP (JJ Monthly) (NN Income) (. .)))

amod(Income-2, Monthly-1)
root(ROOT-0, Income-2)

(ROOT
  (FRAG
    (NP (JJ Monthly) (NNS expenses))
    (. .)))

amod(expenses-2, Monthly-1)
root(ROOT-0, expenses-2)

(ROOT
  (NP (JJ Monthly) (NN balance) (. .)))

amod(balance-2, Monthly-1)
root(ROOT-0, balance-2)

(ROOT
  (S
    (SBAR (IN Though)
      (S
        (NP
          (NP (NN everyone) (POS 's))
          (NN budget))
        (VP (VBZ is)
          (ADJP (JJ different)))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (CD one) (JJ basic) (NN rule))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ applies)
              (S
                (VP (TO to)
                  (VP (VB allyour)
                    (SBAR
                      (S
                        (NP (NNS expenses))
                        (VP (MD should)
                          (ADVP (RB never))
                          (VP (VB be)
                            (ADJP (JJR more))
                            (PP (IN than)
                              (NP (PRP$ your) (NN income)))))))))))))))
    (. .)))

mark(different-6, Though-1)
nmod:poss(budget-4, everyone-2)
case(everyone-2, 's-3)
nsubj(different-6, budget-4)
cop(different-6, is-5)
advcl(is-9, different-6)
expl(is-9, there-8)
root(ROOT-0, is-9)
nummod(rule-12, one-10)
amod(rule-12, basic-11)
nsubj(is-9, rule-12)
nsubj(applies-14, rule-12)
nsubj(allyour-16, rule-12)
ref(rule-12, that-13)
acl:relcl(rule-12, applies-14)
mark(allyour-16, to-15)
xcomp(applies-14, allyour-16)
nsubj(more-21, expenses-17)
aux(more-21, should-18)
neg(more-21, never-19)
cop(more-21, be-20)
ccomp(allyour-16, more-21)
case(income-24, than-22)
nmod:poss(income-24, your-23)
nmod:than(more-21, income-24)

(ROOT
  (S
    (VP
      (VP (VB Total)
        (NP (PRP$ your) (NNS expenses)))
      (CC and)
      (VP (VB subtract)
        (NP (DT the) (NN sum))
        (PP (IN from)
          (NP (PRP$ your) (JJ net) (NN income)))))
    (. .)))

root(ROOT-0, Total-1)
nmod:poss(expenses-3, your-2)
dobj(Total-1, expenses-3)
cc(Total-1, and-4)
conj:and(Total-1, subtract-5)
det(sum-7, the-6)
dobj(subtract-5, sum-7)
case(income-11, from-8)
nmod:poss(income-11, your-9)
amod(income-11, net-10)
nmod:from(subtract-5, income-11)

(ROOT
  (SQ (VBP Are)
    (NP (PRP you))
    (PP (IN over)
      (NP
        (QP (CC or)
          (IN under))))
    (. ?)))

root(ROOT-0, Are-1)
nsubj(Are-1, you-2)
case(under-5, over-3)
cc(under-5, or-4)
nmod:over(Are-1, under-5)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP find)
          (SBAR
            (S
              (NP (EX there))
              (VP (VBZ is)
                (ADVP (RBR more))
                (VP (VBG going)
                  (PRT (RP out))
                  (SBAR (IN than)
                    (S
                      (VP (VBZ is)
                        (VP (VBG coming)
                          (PRT (RP in)))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP (NN time)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (NNS changes)))))))
    (. .)))

mark(find-3, If-1)
nsubj(find-3, you-2)
advcl(is-15, find-3)
expl(going-7, there-4)
aux(going-7, is-5)
advmod(going-7, more-6)
ccomp(find-3, going-7)
compound:prt(going-7, out-8)
mark(coming-11, than-9)
aux(coming-11, is-10)
advcl(going-7, coming-11)
compound:prt(coming-11, in-12)
nsubj(is-15, it-14)
root(ROOT-0, is-15)
dep(is-15, time-16)
mark(make-18, to-17)
acl(time-16, make-18)
dobj(make-18, changes-19)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP
        (VP (VB increase)
          (NP (PRP$ your) (NN income)))
        (, ,)
        (VP (VB decrease)
          (NP (PRP$ your) (NNS expenses)))
        (, ,)
        (CC or)
        (VP (VB do)
          (NP (DT both)))))
    (. .)))

nsubj(increase-3, You-1)
nsubj(decrease-7, You-1)
nsubj(do-12, You-1)
aux(increase-3, can-2)
root(ROOT-0, increase-3)
nmod:poss(income-5, your-4)
dobj(increase-3, income-5)
conj:or(increase-3, decrease-7)
nmod:poss(expenses-9, your-8)
dobj(decrease-7, expenses-9)
cc(increase-3, or-11)
conj:or(increase-3, do-12)
dobj(do-12, both-13)

(ROOT
  (S
    (S
      (VP (VBG Using)
        (NP (DT the) (JJ current) (NN column))
        (PP (IN as)
          (NP (DT a) (NN guide)))))
    (, ,)
    (VP (VBP consider)
      (NP (DT each) (NN expense))
      (ADVP (RB carefully)))
    (. .)))

dep(consider-9, Using-1)
det(column-4, the-2)
amod(column-4, current-3)
dobj(Using-1, column-4)
case(guide-7, as-5)
det(guide-7, a-6)
nmod:as(Using-1, guide-7)
root(ROOT-0, consider-9)
det(expense-11, each-10)
dobj(consider-9, expense-11)
advmod(consider-9, carefully-12)

(ROOT
  (S
    (NP (WDT Which))
    (VP (VBP are)
      (VP (VBZ wants)))
    (. ?)))

nsubj(wants-3, Which-1)
aux(wants-3, are-2)
root(ROOT-0, wants-3)

(ROOT
  (SBARQ
    (WHNP (WP Which))
    (SQ (VBP are)
      (NP (NNS needs)))
    (. ?)))

root(ROOT-0, Which-1)
cop(Which-1, are-2)
nsubj(Which-1, needs-3)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (VBN proposed) (NN column)))
    (, ,)
    (VP (VB decide)
      (SBAR
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP you))
            (VP (VBP want)
              (NP (PRP$ your) (NNS dollars))
              (S
                (VP (TO to)
                  (VP (VB go)
                    (NP (DT each) (NN month))))))))
        (CC and)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB cut)))))))
    (. .)))

case(column-4, In-1)
det(column-4, the-2)
amod(column-4, proposed-3)
nmod:in(decide-6, column-4)
root(ROOT-0, decide-6)
advmod(want-9, where-7)
nsubj(want-9, you-8)
advcl(decide-6, want-9)
nmod:poss(dollars-11, your-10)
dobj(want-9, dollars-11)
mark(go-13, to-12)
advcl(want-9, go-13)
det(month-15, each-14)
nmod:tmod(go-13, month-15)
cc(want-9, and-16)
dobj(cut-20, what-17)
nsubj(cut-20, you-18)
aux(cut-20, can-19)
advcl(decide-6, cut-20)
conj:and(want-9, cut-20)

(ROOT
  (S
    (NP (DT A) (NN budget))
    (VP (VBZ is)
      (VP (VBN born)))
    (. .)))

det(budget-2, A-1)
nsubjpass(born-4, budget-2)
auxpass(born-4, is-3)
root(ROOT-0, born-4)

(ROOT
  (S
    (VP (VB Make)
      (NP (DT a) (NN commitment)
        (S
          (VP (TO to)
            (VP (VB follow)
              (NP (PRP it))
              (PP (IN in)
                (NP (DT the) (NN future))))))))
    (. .)))

root(ROOT-0, Make-1)
det(commitment-3, a-2)
dobj(Make-1, commitment-3)
mark(follow-5, to-4)
acl(commitment-3, follow-5)
dobj(follow-5, it-6)
case(future-9, in-7)
det(future-9, the-8)
nmod:in(follow-5, future-9)

(ROOT
  (S
    (ADVP (RB Otherwise))
    (, ,)
    (NP (PRP$ your) (NN budget))
    (VP (VBZ is)
      (ADVP (RB only))
      (NP
        (NP (DT a) (NN piece))
        (PP (IN of)
          (NP (NN paper)))))
    (. .)))

advmod(piece-8, Otherwise-1)
nmod:poss(budget-4, your-3)
nsubj(piece-8, budget-4)
cop(piece-8, is-5)
advmod(piece-8, only-6)
det(piece-8, a-7)
root(ROOT-0, piece-8)
case(paper-10, of-9)
nmod:of(piece-8, paper-10)

(ROOT
  (S
    (NP (PRP You))
    (VP
      (VP (MD may) (RB not)
        (VP (VB be)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP
                  (ADVP (RB perfectly))
                  (VB stick)
                  (PP (TO to)
                    (NP (PRP it))
                    (NP (DT every) (JJ single) (NN month)))))))))
      (, ,)
      (CC but)
      (VP (VBP do)
        (NP
          (NP (DT the) (JJS best))
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD can)))))))
    (. .)))

nsubj(able-5, You-1)
nsubj(stick-8, You-1)
nsubj(do-16, You-1)
aux(able-5, may-2)
neg(able-5, not-3)
cop(able-5, be-4)
root(ROOT-0, able-5)
mark(stick-8, to-6)
advmod(stick-8, perfectly-7)
xcomp(able-5, stick-8)
case(it-10, to-9)
nmod:to(stick-8, it-10)
det(month-13, every-11)
amod(month-13, single-12)
nmod:tmod(it-10, month-13)
cc(able-5, but-15)
conj:but(able-5, do-16)
det(best-18, the-17)
dobj(do-16, best-18)
nsubj(can-20, you-19)
acl:relcl(best-18, can-20)

(ROOT
  (S
    (ADVP (RB Finally))
    (, ,)
    (PP (IN with)
      (NP
        (NP (JJ appropriate) (NNS goals))
        (CC and)
        (NP (NN budget) (NN planning))))
    (, ,)
    (NP (PRP you))
    (VP (MD will)
      (VP (VB learn)
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB manage)
                (NP (PRP$ your) (NN money))
                (ADVP (RB wisely))))))))
    (. .)))

advmod(learn-12, Finally-1)
case(goals-5, with-3)
amod(goals-5, appropriate-4)
nmod:with(learn-12, goals-5)
cc(goals-5, and-6)
compound(planning-8, budget-7)
conj:and(goals-5, planning-8)
nmod:with(learn-12, planning-8)
nsubj(learn-12, you-10)
aux(learn-12, will-11)
root(ROOT-0, learn-12)
advmod(manage-15, how-13)
mark(manage-15, to-14)
ccomp(learn-12, manage-15)
nmod:poss(money-17, your-16)
dobj(manage-15, money-17)
advmod(manage-15, wisely-18)

(ROOT
  (S
    (NP (DT The) (NN time))
    (VP (MD will)
      (VP (VB come)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (MD will)
              (VP (VB be)
                (ADJP (JJ able)
                  (S
                    (VP (TO to)
                      (VP
                        (VP (VB earn))
                        (, ,)
                        (VP (VB save))
                        (, ,)
                        (VP (VB spend))
                        (, ,)
                        (CC and)
                        (VP
                          (ADVP (RB even))
                          (VB invest)
                          (NP (PRP$ your) (NN money))
                          (ADVP (RB properly)))))))))))))
    (. .)))

det(time-2, The-1)
nsubj(come-4, time-2)
aux(come-4, will-3)
root(ROOT-0, come-4)
advmod(able-9, when-5)
nsubj(able-9, you-6)
nsubj(earn-11, you-6)
nsubj(save-13, you-6)
nsubj(spend-15, you-6)
nsubj(invest-19, you-6)
aux(able-9, will-7)
cop(able-9, be-8)
advcl(come-4, able-9)
mark(earn-11, to-10)
xcomp(able-9, earn-11)
xcomp(able-9, save-13)
conj:and(earn-11, save-13)
xcomp(able-9, spend-15)
conj:and(earn-11, spend-15)
cc(earn-11, and-17)
advmod(invest-19, even-18)
xcomp(able-9, invest-19)
conj:and(earn-11, invest-19)
nmod:poss(money-21, your-20)
dobj(invest-19, money-21)
advmod(invest-19, properly-22)

